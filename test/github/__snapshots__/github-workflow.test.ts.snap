// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`github-workflow reusable actions can override multiple versions and the default 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: test-workflow
on: {}
jobs:
  working-dir:
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - uses: actions/checkout@generic-override
      - uses: actions/checkout@generic-override
      - uses: actions/checkout@explicit-v4
"
`;

exports[`github-workflow reusable actions can use an action on a step 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: test-workflow
on: {}
jobs:
  working-dir:
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - uses: actions/checkout@v4
"
`;

exports[`github-workflow workflow job calling a reusable workflow & inherited secrets 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: test-workflow
on: {}
jobs:
  call-another-workflow:
    name: Some reusable workflow
    permissions: {}
    uses: some-user/example-action.yaml@v1
    secrets: inherit
"
`;

exports[`github-workflow workflow job calling a reusable workflow 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: test-workflow
on: {}
jobs:
  call-another-workflow:
    name: Some reusable workflow
    permissions: {}
    uses: some-user/example-action.yaml@v1
    with:
      foo: true
      bar: example
    secrets:
      credentials: super-secret
"
`;

exports[`github-workflow workflow job calling a reusable workflow with a strategy matrix 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: test-workflow
on: {}
jobs:
  use-a-matrix:
    name: Some reusable workflow
    permissions: {}
    uses: some-user/example-action.yaml@v1
    with:
      fruit: \${{ matrix.fruit }}
    secrets: inherit
    strategy:
      matrix:
        fruit:
          - apple
          - orange
          - banana
"
`;

exports[`github-workflow workflow job calling a reusable workflow with a strategy matrix, using domain string value 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: test-workflow
on: {}
jobs:
  get-matrix:
    name: Get a matrix
    runs-on: ubuntu-latest
    permissions: {}
    outputs:
      calculatedFruits: \${{ steps.set-fruits.outputs.fruits }}
    steps:
      - name: Set fruit array output
        id: set-fruits
        run: echo "fruits=$(echo '["apple", "orange", "banana"]' | jq -c .)" >> $GITHUB_OUTPUT
  use-a-matrix:
    name: Some reusable workflow
    needs: get-matrix
    permissions: {}
    uses: some-user/example-action.yaml@v1
    with:
      fruit: \${{ matrix.fruit }}
    secrets: inherit
    strategy:
      matrix:
        fruit: \${{ needs.get-matrix.outputs.calculatedFruits }}
"
`;

exports[`github-workflow workflow job can be removed after creation 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: test-workflow
on: {}
jobs: {}
"
`;

exports[`github-workflow workflow job can be updated after creation 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: test-workflow
on: {}
jobs:
  working-dir:
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - uses: actions/checkout@v2
"
`;

exports[`github-workflow working-directory can be set on a Step 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: test-workflow
on: {}
jobs:
  working-dir:
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - run: ls
        working-directory: .github/workflows
"
`;
