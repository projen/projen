import { AwsCdkPythonApp, AwsCdkPythonAppOptions } from "../../src/awscdk";
import { synthSnapshot } from "../util";

test("create cdk python project", () => {
  const p = new AwsCdkPythonApp({
    authorEmail: "test@cdkpythonapp.com",
    authorName: "First Last",
    moduleName: "test_cdk_python_app_project",
    name: "test-cdk-python-app-project",
    version: "0.1.0",
    cdkVersion: "2.8.0",
  });

  const snapshot = synthSnapshot(p);
  expect(Object.keys(snapshot).sort()).toStrictEqual([
    ".gitattributes",
    ".github/workflows/pull-request-lint.yml",
    ".gitignore",
    ".projen/deps.json",
    ".projen/files.json",
    ".projen/tasks.json",
    "README.md",
    "app.py",
    "cdk.json",
    "requirements-dev.txt",
    "requirements.txt",
    "test_cdk_python_app_project/__init__.py",
    "test_cdk_python_app_project/main.py",
    "tests/__init__.py",
    "tests/test_example.py",
  ]);
  expect(snapshot["cdk.json"]).toMatchSnapshot();
});

test("CDK v2 deps", () => {
  const p = new AwsCdkPythonApp({
    authorEmail: "test@cdkpythonapp.com",
    authorName: "First Last",
    moduleName: "test_cdk_python_app_project",
    name: "test-cdk-python-app-project",
    version: "0.1.0",
    cdkVersion: "2.8.0",
  });

  const snapshot = synthSnapshot(p);

  expect(snapshot["requirements.txt"]).toContain(
    '# ~~ Generated by projen. To modify, edit .projenrc.py and run "npx projen".'
  );
  expect(snapshot["requirements.txt"]).toContain("aws-cdk-lib>=2.8.0, <3.0.0");
  expect(snapshot["requirements.txt"]).toContain("constructs>=10.0.5, <11.0.0");

  expect(snapshot["requirements-dev.txt"]).toContain(
    '# ~~ Generated by projen. To modify, edit .projenrc.py and run "npx projen".'
  );
  expect(snapshot["requirements-dev.txt"]).toContain("projen==99.99.99");
});

test("CDK v1 deps", () => {
  const p = new AwsCdkPythonApp({
    authorEmail: "test@cdkpythonapp.com",
    authorName: "First Last",
    moduleName: "test_cdk_python_app_project",
    name: "test-cdk-python-app-project",
    version: "0.1.0",
    cdkVersion: "1.140.0",
  });

  const snapshot = synthSnapshot(p);

  expect(snapshot["requirements.txt"]).toContain(
    '# ~~ Generated by projen. To modify, edit .projenrc.py and run "npx projen".'
  );
  expect(snapshot["requirements.txt"]).toContain(
    "aws_cdk.core>=1.140.0, <2.0.0"
  );
  expect(snapshot["requirements.txt"]).toContain("constructs>=3.2.27, <4.0.0");

  expect(snapshot["requirements-dev.txt"]).toContain(
    '# ~~ Generated by projen. To modify, edit .projenrc.py and run "npx projen".'
  );
  expect(snapshot["requirements-dev.txt"]).toContain("projen==99.99.99");
});

test("awscdk app is set up with custom appEntrypoint", () => {
  const customAppEntrypoint = "custom_app.py";

  const options: AwsCdkPythonAppOptions = {
    authorName: "Test Author",
    authorEmail: "test@example.com",
    moduleName: "test_module",
    name: "test_project",
    version: "0.1.0",
    cdkVersion: "1.0.0",
    appEntrypoint: customAppEntrypoint,
  };

  // Instantiate AwsCdkPythonApp with custom options
  const app = new AwsCdkPythonApp(options);

  // Synthesize the project to generate the project structure
  const snapshot = synthSnapshot(app);

  // Check if the synthesized snapshot contains the custom app entrypoint
  expect(Object.keys(snapshot)).toContain(customAppEntrypoint);
});
