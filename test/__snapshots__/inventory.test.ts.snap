// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`inventory 1`] = `
[
  {
    "docs": "AWS CDK app in Java.",
    "docsurl": "https://projen.io/docs/api/awscdk#awscdkjavaapp-",
    "fqn": "projen.awscdk.AwsCdkJavaApp",
    "moduleName": "projen",
    "options": [
      {
        "default": ""my-app"",
        "docs": "The artifactId is generally the name that the project is known by.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""my-app"",
        "jsonLike": true,
        "name": "artifactId",
        "parent": "PomOptions",
        "path": [
          "artifactId",
        ],
        "simpleType": "string",
        "switch": "artifact-id",
      },
      {
        "default": "- auto approve is disabled",
        "docs": "Enable and configure the 'auto approve' workflow.",
        "featured": false,
        "fqn": "projen.github.AutoApproveOptions",
        "fullType": {
          "fqn": "projen.github.AutoApproveOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoApproveOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoApproveOptions",
        ],
        "simpleType": "AutoApproveOptions",
        "switch": "auto-approve-options",
      },
      {
        "default": "true",
        "docs": "Enable automatic merging on GitHub.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoMerge",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMerge",
        ],
        "simpleType": "boolean",
        "switch": "auto-merge",
      },
      {
        "default": "- see defaults in \`AutoMergeOptions\`",
        "docs": "Configure options for automatic merging on GitHub.",
        "featured": false,
        "fqn": "projen.github.AutoMergeOptions",
        "fullType": {
          "fqn": "projen.github.AutoMergeOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoMergeOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMergeOptions",
        ],
        "simpleType": "AutoMergeOptions",
        "switch": "auto-merge-options",
      },
      {
        "default": "- no build command",
        "docs": "A command to execute before synthesis.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "buildCommand",
        "optional": true,
        "parent": "CdkConfigCommonOptions",
        "path": [
          "buildCommand",
        ],
        "simpleType": "string",
        "switch": "build-command",
      },
      {
        "default": "- will be included by default for AWS CDK >= 1.0.0 < 2.0.0",
        "deprecated": true,
        "docs": "Warning: NodeJS only.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdkAssert",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkAssert",
        ],
        "simpleType": "boolean",
        "switch": "cdk-assert",
      },
      {
        "default": "- will be included by default for AWS CDK >= 1.111.0 < 2.0.0",
        "docs": "Install the assertions library?",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdkAssertions",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkAssertions",
        ],
        "simpleType": "boolean",
        "switch": "cdk-assertions",
      },
      {
        "default": ""^2"",
        "docs": "Version range of the AWS CDK CLI to depend on.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "cdkCliVersion",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkCliVersion",
        ],
        "simpleType": "string",
        "switch": "cdk-cli-version",
      },
      {
        "deprecated": true,
        "docs": "Which AWS CDKv1 modules this project requires.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "cdkDependencies",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkDependencies",
        ],
        "simpleType": "unknown",
        "switch": "cdk-dependencies",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "If this is enabled (default), all modules declared in \`cdkDependencies\` will be also added as normal \`dependencies\` (as well as \`peerDependencies\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdkDependenciesAsDeps",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkDependenciesAsDeps",
        ],
        "simpleType": "boolean",
        "switch": "cdk-dependencies-as-deps",
      },
      {
        "default": ""cdk.out"",
        "docs": "cdk.out directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "cdkout",
        "optional": true,
        "parent": "CdkConfigCommonOptions",
        "path": [
          "cdkout",
        ],
        "simpleType": "string",
        "switch": "cdkout",
      },
      {
        "deprecated": true,
        "docs": "AWS CDK modules required for testing.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "cdkTestDependencies",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkTestDependencies",
        ],
        "simpleType": "unknown",
        "switch": "cdk-test-dependencies",
      },
      {
        "default": ""2.1.0"",
        "docs": "Minimum version of the AWS CDK to depend on.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""2.1.0"",
        "jsonLike": true,
        "name": "cdkVersion",
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkVersion",
        ],
        "simpleType": "string",
        "switch": "cdk-version",
      },
      {
        "docs": "Use pinned version instead of caret version for CDK.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdkVersionPinning",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkVersionPinning",
        ],
        "simpleType": "boolean",
        "switch": "cdk-version-pinning",
      },
      {
        "default": "- true, but false for subprojects",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "clobber",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "clobber",
        ],
        "simpleType": "boolean",
        "switch": "clobber",
      },
      {
        "default": "true",
        "docs": "Whether to commit the managed files by default.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "commitGenerated",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "commitGenerated",
        ],
        "simpleType": "boolean",
        "switch": "commit-generated",
      },
      {
        "default": "- defaults",
        "docs": "Compile options.",
        "featured": false,
        "fqn": "projen.java.MavenCompileOptions",
        "fullType": {
          "fqn": "projen.java.MavenCompileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "compileOptions",
        "optional": true,
        "parent": "JavaProjectCommonOptions",
        "path": [
          "compileOptions",
        ],
        "simpleType": "MavenCompileOptions",
        "switch": "compile-options",
      },
      {
        "default": "- for CDK 1.x the default is "3.2.27", for CDK 2.x the default is
"10.0.5".",
        "docs": "Minimum version of the \`constructs\` library to depend on.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "constructsVersion",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "constructsVersion",
        ],
        "simpleType": "string",
        "switch": "constructs-version",
      },
      {
        "default": "- no additional context",
        "docs": "Additional context to include in \`cdk.json\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "any",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "context",
        "optional": true,
        "parent": "CdkConfigCommonOptions",
        "path": [
          "context",
        ],
        "simpleType": "unknown",
        "switch": "context",
      },
      {
        "default": "[]",
        "docs": "List of runtime dependencies for this project.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "deps",
        "optional": true,
        "parent": "JavaProjectCommonOptions",
        "path": [
          "deps",
        ],
        "simpleType": "unknown",
        "switch": "deps",
      },
      {
        "docs": "Description of a project is always good.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "description",
        "optional": true,
        "parent": "PomOptions",
        "path": [
          "description",
        ],
        "simpleType": "string",
        "switch": "description",
      },
      {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "devContainer",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "devContainer",
        ],
        "simpleType": "boolean",
        "switch": "dev-container",
      },
      {
        "default": ""dist/java"",
        "docs": "Final artifact output directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "distdir",
        "optional": true,
        "parent": "JavaProjectCommonOptions",
        "path": [
          "distdir",
        ],
        "simpleType": "string",
        "switch": "distdir",
      },
      {
        "default": "true",
        "docs": "Include all feature flags in cdk.json.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "featureFlags",
        "optional": true,
        "parent": "CdkConfigCommonOptions",
        "path": [
          "featureFlags",
        ],
        "simpleType": "boolean",
        "switch": "feature-flags",
      },
      {
        "default": "true",
        "docs": "Enable GitHub integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "github",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "github",
        ],
        "simpleType": "boolean",
        "switch": "github",
      },
      {
        "default": "- see GitHubOptions",
        "docs": "Options for GitHub integration.",
        "featured": false,
        "fqn": "projen.github.GitHubOptions",
        "fullType": {
          "fqn": "projen.github.GitHubOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "githubOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "githubOptions",
        ],
        "simpleType": "GitHubOptions",
        "switch": "github-options",
      },
      {
        "docs": "Configuration options for .gitignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitIgnoreOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "git-ignore-options",
      },
      {
        "docs": "Configuration options for git.",
        "featured": false,
        "fqn": "projen.GitOptions",
        "fullType": {
          "fqn": "projen.GitOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitOptions",
        ],
        "simpleType": "GitOptions",
        "switch": "git-options",
      },
      {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "gitpod",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "gitpod",
        ],
        "simpleType": "boolean",
        "switch": "gitpod",
      },
      {
        "default": ""org.acme"",
        "docs": "This is generally unique amongst an organization or a project.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""org.acme"",
        "jsonLike": true,
        "name": "groupId",
        "parent": "PomOptions",
        "path": [
          "groupId",
        ],
        "simpleType": "string",
        "switch": "group-id",
      },
      {
        "default": "true",
        "docs": "Include junit tests.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "junit",
        "optional": true,
        "parent": "JavaProjectCommonOptions",
        "path": [
          "junit",
        ],
        "simpleType": "boolean",
        "switch": "junit",
      },
      {
        "default": "- defaults",
        "docs": "junit options.",
        "featured": false,
        "fqn": "projen.java.JunitOptions",
        "fullType": {
          "fqn": "projen.java.JunitOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "junitOptions",
        "optional": true,
        "parent": "JavaProjectCommonOptions",
        "path": [
          "junitOptions",
        ],
        "simpleType": "JunitOptions",
        "switch": "junit-options",
      },
      {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "featured": false,
        "fqn": "projen.LoggerOptions",
        "fullType": {
          "fqn": "projen.LoggerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "logging",
        ],
        "simpleType": "LoggerOptions",
        "switch": "logging",
      },
      {
        "default": ""org.acme.MyApp"",
        "docs": "The name of the Java class with the static \`main()\` method.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""org.acme.MyApp"",
        "jsonLike": true,
        "name": "mainClass",
        "parent": "AwsCdkJavaAppOptions",
        "path": [
          "mainClass",
        ],
        "simpleType": "string",
        "switch": "main-class",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Whether mergify should be enabled on this repository or not.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mergify",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergify",
        ],
        "simpleType": "boolean",
        "switch": "mergify",
      },
      {
        "default": "- default options",
        "deprecated": true,
        "docs": "Options for mergify.",
        "featured": false,
        "fqn": "projen.github.MergifyOptions",
        "fullType": {
          "fqn": "projen.github.MergifyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergifyOptions",
        ],
        "simpleType": "MergifyOptions",
        "switch": "mergify-options",
      },
      {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$BASEDIR",
        "jsonLike": true,
        "name": "name",
        "parent": "ProjectOptions",
        "path": [
          "name",
        ],
        "simpleType": "string",
        "switch": "name",
      },
      {
        "default": ""."",
        "docs": "The root directory of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "outdir",
        ],
        "simpleType": "string",
        "switch": "outdir",
      },
      {
        "default": ""jar"",
        "docs": "Project packaging format.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "packaging",
        "optional": true,
        "parent": "PomOptions",
        "path": [
          "packaging",
        ],
        "simpleType": "string",
        "switch": "packaging",
      },
      {
        "default": "- defaults",
        "docs": "Packaging options.",
        "featured": false,
        "fqn": "projen.java.MavenPackagingOptions",
        "fullType": {
          "fqn": "projen.java.MavenPackagingOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "packagingOptions",
        "optional": true,
        "parent": "JavaProjectCommonOptions",
        "path": [
          "packagingOptions",
        ],
        "simpleType": "MavenPackagingOptions",
        "switch": "packaging-options",
      },
      {
        "docs": "The parent project, if this project is part of a bigger project.",
        "featured": false,
        "fqn": "projen.Project",
        "fullType": {
          "fqn": "projen.Project",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "parent",
        ],
        "simpleType": "Project",
        "switch": "parent",
      },
      {
        "docs": "A Parent Pom can be used to have a child project inherit properties/plugins/ect in order to reduce duplication and keep standards across a large amount of repos.",
        "featured": true,
        "fqn": "projen.java.ParentPom",
        "fullType": {
          "fqn": "projen.java.ParentPom",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "parentPom",
        "optional": true,
        "parent": "PomOptions",
        "path": [
          "parentPom",
        ],
        "simpleType": "ParentPom",
        "switch": "parent-pom",
      },
      {
        "default": "ProjectType.UNKNOWN",
        "deprecated": true,
        "docs": "Which type of project this is (library/app).",
        "featured": false,
        "fqn": "projen.ProjectType",
        "fullType": {
          "fqn": "projen.ProjectType",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "projectType",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projectType",
        ],
        "simpleType": "ProjectType",
        "switch": "project-type",
      },
      {
        "default": ""npx projen"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenCommand",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenCommand",
        ],
        "simpleType": "string",
        "switch": "projen-command",
      },
      {
        "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
        "docs": "Choose a method of providing GitHub API access for projen workflows.",
        "featured": false,
        "fqn": "projen.github.GithubCredentials",
        "fullType": {
          "fqn": "projen.github.GithubCredentials",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "projenCredentials",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenCredentials",
        ],
        "simpleType": "GithubCredentials",
        "switch": "projen-credentials",
      },
      {
        "default": "true",
        "docs": "Use projenrc in java.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJava",
        "optional": true,
        "parent": "JavaProjectCommonOptions",
        "path": [
          "projenrcJava",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-java",
      },
      {
        "default": "- default options",
        "docs": "Options related to projenrc in java.",
        "featured": false,
        "fqn": "projen.java.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.java.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJavaOptions",
        "optional": true,
        "parent": "JavaProjectCommonOptions",
        "path": [
          "projenrcJavaOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-java-options",
      },
      {
        "default": "false",
        "docs": "Generate (once) .projenrc.json (in JSON). Set to \`false\` in order to disable .projenrc.json generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJson",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJson",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-json",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.json.",
        "featured": false,
        "fqn": "projen.ProjenrcJsonOptions",
        "fullType": {
          "fqn": "projen.ProjenrcJsonOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsonOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJsonOptions",
        ],
        "simpleType": "ProjenrcJsonOptions",
        "switch": "projenrc-json-options",
      },
      {
        "default": ""PROJEN_GITHUB_TOKEN"",
        "deprecated": true,
        "docs": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenTokenSecret",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenTokenSecret",
        ],
        "simpleType": "string",
        "switch": "projen-token-secret",
      },
      {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "featured": false,
        "fqn": "projen.SampleReadmeProps",
        "fullType": {
          "fqn": "projen.SampleReadmeProps",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "readme",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "readme",
        ],
        "simpleType": "SampleReadmeProps",
        "switch": "readme",
      },
      {
        "default": "false",
        "docs": "Use renovatebot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "renovatebot",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebot",
        ],
        "simpleType": "boolean",
        "switch": "renovatebot",
      },
      {
        "default": "- default options",
        "docs": "Options for renovatebot.",
        "featured": false,
        "fqn": "projen.RenovatebotOptions",
        "fullType": {
          "fqn": "projen.RenovatebotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "renovatebotOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebotOptions",
        ],
        "simpleType": "RenovatebotOptions",
        "switch": "renovatebot-options",
      },
      {
        "default": "ApprovalLevel.BROADENING",
        "docs": "To protect you against unintended changes that affect your security posture, the AWS CDK Toolkit prompts you to approve security-related changes before deploying them.",
        "featured": false,
        "fqn": "projen.awscdk.ApprovalLevel",
        "fullType": {
          "fqn": "projen.awscdk.ApprovalLevel",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "requireApproval",
        "optional": true,
        "parent": "CdkConfigCommonOptions",
        "path": [
          "requireApproval",
        ],
        "simpleType": "ApprovalLevel",
        "switch": "require-approval",
      },
      {
        "default": "true",
        "docs": "Include sample code and test if the relevant directories don't exist.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "sample",
        "optional": true,
        "parent": "JavaProjectOptions",
        "path": [
          "sample",
        ],
        "simpleType": "boolean",
        "switch": "sample",
      },
      {
        "default": ""org.acme"",
        "docs": "The java package to use for the code sample.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "sampleJavaPackage",
        "optional": true,
        "parent": "JavaProjectOptions",
        "path": [
          "sampleJavaPackage",
        ],
        "simpleType": "string",
        "switch": "sample-java-package",
      },
      {
        "default": "false",
        "docs": "Auto-close of stale issues and pull request.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "stale",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "stale",
        ],
        "simpleType": "boolean",
        "switch": "stale",
      },
      {
        "default": "- see defaults in \`StaleOptions\`",
        "docs": "Auto-close stale issues and pull requests.",
        "featured": false,
        "fqn": "projen.github.StaleOptions",
        "fullType": {
          "fqn": "projen.github.StaleOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "staleOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "staleOptions",
        ],
        "simpleType": "StaleOptions",
        "switch": "stale-options",
      },
      {
        "default": "[]",
        "docs": "List of test dependencies for this project.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "testDeps",
        "optional": true,
        "parent": "JavaProjectCommonOptions",
        "path": [
          "testDeps",
        ],
        "simpleType": "unknown",
        "switch": "test-deps",
      },
      {
        "docs": "The URL, like the name, is not required.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "url",
        "optional": true,
        "parent": "PomOptions",
        "path": [
          "url",
        ],
        "simpleType": "string",
        "switch": "url",
      },
      {
        "default": ""0.1.0"",
        "docs": "This is the last piece of the naming puzzle.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""0.1.0"",
        "jsonLike": true,
        "name": "version",
        "parent": "PomOptions",
        "path": [
          "version",
        ],
        "simpleType": "string",
        "switch": "version",
      },
      {
        "default": "true",
        "docs": "Enable VSCode integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "vscode",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "vscode",
        ],
        "simpleType": "boolean",
        "switch": "vscode",
      },
      {
        "default": "[]",
        "docs": "Glob patterns to exclude from \`cdk watch\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "watchExcludes",
        "optional": true,
        "parent": "CdkConfigCommonOptions",
        "path": [
          "watchExcludes",
        ],
        "simpleType": "unknown",
        "switch": "watch-excludes",
      },
      {
        "default": "[]",
        "docs": "Glob patterns to include in \`cdk watch\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "watchIncludes",
        "optional": true,
        "parent": "CdkConfigCommonOptions",
        "path": [
          "watchIncludes",
        ],
        "simpleType": "unknown",
        "switch": "watch-includes",
      },
    ],
    "pjid": "awscdk-app-java",
    "typename": "awscdk.AwsCdkJavaApp",
  },
  {
    "docs": "AWS CDK app in Python.",
    "docsurl": "https://projen.io/docs/api/awscdk#awscdkpythonapp-",
    "fqn": "projen.awscdk.AwsCdkPythonApp",
    "moduleName": "projen",
    "options": [
      {
        "default": ""app.py"",
        "docs": "The CDK app's entrypoint (relative to the source directory, which is "src" by default).",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "appEntrypoint",
        "optional": true,
        "parent": "AwsCdkPythonAppOptions",
        "path": [
          "appEntrypoint",
        ],
        "simpleType": "string",
        "switch": "app-entrypoint",
      },
      {
        "default": "$GIT_USER_EMAIL",
        "docs": "Author's e-mail.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$GIT_USER_EMAIL",
        "jsonLike": true,
        "name": "authorEmail",
        "parent": "PythonPackagingOptions",
        "path": [
          "authorEmail",
        ],
        "simpleType": "string",
        "switch": "author-email",
      },
      {
        "default": "$GIT_USER_NAME",
        "docs": "Author's name.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$GIT_USER_NAME",
        "jsonLike": true,
        "name": "authorName",
        "parent": "PythonPackagingOptions",
        "path": [
          "authorName",
        ],
        "simpleType": "string",
        "switch": "author-name",
      },
      {
        "default": "- auto approve is disabled",
        "docs": "Enable and configure the 'auto approve' workflow.",
        "featured": false,
        "fqn": "projen.github.AutoApproveOptions",
        "fullType": {
          "fqn": "projen.github.AutoApproveOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoApproveOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoApproveOptions",
        ],
        "simpleType": "AutoApproveOptions",
        "switch": "auto-approve-options",
      },
      {
        "default": "true",
        "docs": "Enable automatic merging on GitHub.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoMerge",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMerge",
        ],
        "simpleType": "boolean",
        "switch": "auto-merge",
      },
      {
        "default": "- see defaults in \`AutoMergeOptions\`",
        "docs": "Configure options for automatic merging on GitHub.",
        "featured": false,
        "fqn": "projen.github.AutoMergeOptions",
        "fullType": {
          "fqn": "projen.github.AutoMergeOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoMergeOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMergeOptions",
        ],
        "simpleType": "AutoMergeOptions",
        "switch": "auto-merge-options",
      },
      {
        "default": "- no build command",
        "docs": "A command to execute before synthesis.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "buildCommand",
        "optional": true,
        "parent": "CdkConfigCommonOptions",
        "path": [
          "buildCommand",
        ],
        "simpleType": "string",
        "switch": "build-command",
      },
      {
        "default": "- will be included by default for AWS CDK >= 1.0.0 < 2.0.0",
        "deprecated": true,
        "docs": "Warning: NodeJS only.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdkAssert",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkAssert",
        ],
        "simpleType": "boolean",
        "switch": "cdk-assert",
      },
      {
        "default": "- will be included by default for AWS CDK >= 1.111.0 < 2.0.0",
        "docs": "Install the assertions library?",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdkAssertions",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkAssertions",
        ],
        "simpleType": "boolean",
        "switch": "cdk-assertions",
      },
      {
        "default": ""^2"",
        "docs": "Version range of the AWS CDK CLI to depend on.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "cdkCliVersion",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkCliVersion",
        ],
        "simpleType": "string",
        "switch": "cdk-cli-version",
      },
      {
        "deprecated": true,
        "docs": "Which AWS CDKv1 modules this project requires.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "cdkDependencies",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkDependencies",
        ],
        "simpleType": "unknown",
        "switch": "cdk-dependencies",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "If this is enabled (default), all modules declared in \`cdkDependencies\` will be also added as normal \`dependencies\` (as well as \`peerDependencies\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdkDependenciesAsDeps",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkDependenciesAsDeps",
        ],
        "simpleType": "boolean",
        "switch": "cdk-dependencies-as-deps",
      },
      {
        "default": ""cdk.out"",
        "docs": "cdk.out directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "cdkout",
        "optional": true,
        "parent": "CdkConfigCommonOptions",
        "path": [
          "cdkout",
        ],
        "simpleType": "string",
        "switch": "cdkout",
      },
      {
        "deprecated": true,
        "docs": "AWS CDK modules required for testing.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "cdkTestDependencies",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkTestDependencies",
        ],
        "simpleType": "unknown",
        "switch": "cdk-test-dependencies",
      },
      {
        "default": ""2.1.0"",
        "docs": "Minimum version of the AWS CDK to depend on.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""2.1.0"",
        "jsonLike": true,
        "name": "cdkVersion",
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkVersion",
        ],
        "simpleType": "string",
        "switch": "cdk-version",
      },
      {
        "docs": "Use pinned version instead of caret version for CDK.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdkVersionPinning",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkVersionPinning",
        ],
        "simpleType": "boolean",
        "switch": "cdk-version-pinning",
      },
      {
        "docs": "A list of PyPI trove classifiers that describe the project.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "classifiers",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": [
          "classifiers",
        ],
        "simpleType": "unknown",
        "switch": "classifiers",
      },
      {
        "default": "- true, but false for subprojects",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "clobber",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "clobber",
        ],
        "simpleType": "boolean",
        "switch": "clobber",
      },
      {
        "default": "true",
        "docs": "Whether to commit the managed files by default.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "commitGenerated",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "commitGenerated",
        ],
        "simpleType": "boolean",
        "switch": "commit-generated",
      },
      {
        "default": "- for CDK 1.x the default is "3.2.27", for CDK 2.x the default is
"10.0.5".",
        "docs": "Minimum version of the \`constructs\` library to depend on.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "constructsVersion",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "constructsVersion",
        ],
        "simpleType": "string",
        "switch": "constructs-version",
      },
      {
        "default": "- no additional context",
        "docs": "Additional context to include in \`cdk.json\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "any",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "context",
        "optional": true,
        "parent": "CdkConfigCommonOptions",
        "path": [
          "context",
        ],
        "simpleType": "unknown",
        "switch": "context",
      },
      {
        "default": "[]",
        "docs": "List of runtime dependencies for this project.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "deps",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "deps",
        ],
        "simpleType": "unknown",
        "switch": "deps",
      },
      {
        "docs": "A short description of the package.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "description",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": [
          "description",
        ],
        "simpleType": "string",
        "switch": "description",
      },
      {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "devContainer",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "devContainer",
        ],
        "simpleType": "boolean",
        "switch": "dev-container",
      },
      {
        "default": "[]",
        "docs": "List of dev dependencies for this project.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "devDeps",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "devDeps",
        ],
        "simpleType": "unknown",
        "switch": "dev-deps",
      },
      {
        "default": "true",
        "docs": "Include all feature flags in cdk.json.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "featureFlags",
        "optional": true,
        "parent": "CdkConfigCommonOptions",
        "path": [
          "featureFlags",
        ],
        "simpleType": "boolean",
        "switch": "feature-flags",
      },
      {
        "default": "true",
        "docs": "Enable GitHub integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "github",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "github",
        ],
        "simpleType": "boolean",
        "switch": "github",
      },
      {
        "default": "- see GitHubOptions",
        "docs": "Options for GitHub integration.",
        "featured": false,
        "fqn": "projen.github.GitHubOptions",
        "fullType": {
          "fqn": "projen.github.GitHubOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "githubOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "githubOptions",
        ],
        "simpleType": "GitHubOptions",
        "switch": "github-options",
      },
      {
        "docs": "Configuration options for .gitignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitIgnoreOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "git-ignore-options",
      },
      {
        "docs": "Configuration options for git.",
        "featured": false,
        "fqn": "projen.GitOptions",
        "fullType": {
          "fqn": "projen.GitOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitOptions",
        ],
        "simpleType": "GitOptions",
        "switch": "git-options",
      },
      {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "gitpod",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "gitpod",
        ],
        "simpleType": "boolean",
        "switch": "gitpod",
      },
      {
        "docs": "A URL to the website of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "homepage",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": [
          "homepage",
        ],
        "simpleType": "string",
        "switch": "homepage",
      },
      {
        "docs": "License of this package as an SPDX identifier.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "license",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": [
          "license",
        ],
        "simpleType": "string",
        "switch": "license",
      },
      {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "featured": false,
        "fqn": "projen.LoggerOptions",
        "fullType": {
          "fqn": "projen.LoggerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "logging",
        ],
        "simpleType": "LoggerOptions",
        "switch": "logging",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Whether mergify should be enabled on this repository or not.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mergify",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergify",
        ],
        "simpleType": "boolean",
        "switch": "mergify",
      },
      {
        "default": "- default options",
        "deprecated": true,
        "docs": "Options for mergify.",
        "featured": false,
        "fqn": "projen.github.MergifyOptions",
        "fullType": {
          "fqn": "projen.github.MergifyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergifyOptions",
        ],
        "simpleType": "MergifyOptions",
        "switch": "mergify-options",
      },
      {
        "default": "$PYTHON_MODULE_NAME",
        "docs": "Name of the python package as used in imports and filenames.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$PYTHON_MODULE_NAME",
        "jsonLike": true,
        "name": "moduleName",
        "parent": "PythonProjectOptions",
        "path": [
          "moduleName",
        ],
        "simpleType": "string",
        "switch": "module-name",
      },
      {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$BASEDIR",
        "jsonLike": true,
        "name": "name",
        "parent": "ProjectOptions",
        "path": [
          "name",
        ],
        "simpleType": "string",
        "switch": "name",
      },
      {
        "default": ""."",
        "docs": "The root directory of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "outdir",
        ],
        "simpleType": "string",
        "switch": "outdir",
      },
      {
        "docs": "Package name.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "packageName",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": [
          "packageName",
        ],
        "simpleType": "string",
        "switch": "package-name",
      },
      {
        "docs": "The parent project, if this project is part of a bigger project.",
        "featured": false,
        "fqn": "projen.Project",
        "fullType": {
          "fqn": "projen.Project",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "parent",
        ],
        "simpleType": "Project",
        "switch": "parent",
      },
      {
        "default": "- true, unless poetry is true, then false",
        "docs": "Use pip with a requirements.txt file to track project dependencies.",
        "featured": true,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "pip",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "pip",
        ],
        "simpleType": "boolean",
        "switch": "pip",
      },
      {
        "default": "false",
        "docs": "Use poetry to manage your project dependencies, virtual environment, and (optional) packaging/publishing.",
        "featured": true,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "poetry",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "poetry",
        ],
        "simpleType": "boolean",
        "switch": "poetry",
      },
      {
        "docs": "Additional options to set for poetry if using poetry.",
        "featured": false,
        "fqn": "projen.python.PoetryPyprojectOptionsWithoutDeps",
        "fullType": {
          "fqn": "projen.python.PoetryPyprojectOptionsWithoutDeps",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "poetryOptions",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": [
          "poetryOptions",
        ],
        "simpleType": "PoetryPyprojectOptionsWithoutDeps",
        "switch": "poetry-options",
      },
      {
        "default": "ProjectType.UNKNOWN",
        "deprecated": true,
        "docs": "Which type of project this is (library/app).",
        "featured": false,
        "fqn": "projen.ProjectType",
        "fullType": {
          "fqn": "projen.ProjectType",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "projectType",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projectType",
        ],
        "simpleType": "ProjectType",
        "switch": "project-type",
      },
      {
        "default": ""npx projen"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenCommand",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenCommand",
        ],
        "simpleType": "string",
        "switch": "projen-command",
      },
      {
        "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
        "docs": "Choose a method of providing GitHub API access for projen workflows.",
        "featured": false,
        "fqn": "projen.github.GithubCredentials",
        "fullType": {
          "fqn": "projen.github.GithubCredentials",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "projenCredentials",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenCredentials",
        ],
        "simpleType": "GithubCredentials",
        "switch": "projen-credentials",
      },
      {
        "default": "false",
        "docs": "Use projenrc in javascript.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJs",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "projenrcJs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-js",
      },
      {
        "default": "false",
        "docs": "Generate (once) .projenrc.json (in JSON). Set to \`false\` in order to disable .projenrc.json generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJson",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJson",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-json",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.json.",
        "featured": false,
        "fqn": "projen.ProjenrcJsonOptions",
        "fullType": {
          "fqn": "projen.ProjenrcJsonOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsonOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJsonOptions",
        ],
        "simpleType": "ProjenrcJsonOptions",
        "switch": "projenrc-json-options",
      },
      {
        "default": "- default options",
        "docs": "Options related to projenrc in JavaScript.",
        "featured": false,
        "fqn": "projen.javascript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.javascript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "projenrcJsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-js-options",
      },
      {
        "default": "true",
        "docs": "Use projenrc in Python.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcPython",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "projenrcPython",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-python",
      },
      {
        "default": "- default options",
        "docs": "Options related to projenrc in python.",
        "featured": false,
        "fqn": "projen.python.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.python.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcPythonOptions",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "projenrcPythonOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-python-options",
      },
      {
        "default": "false",
        "docs": "Use projenrc in TypeScript.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcTs",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "projenrcTs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-ts",
      },
      {
        "default": "- default options",
        "docs": "Options related to projenrc in TypeScript.",
        "featured": false,
        "fqn": "projen.typescript.ProjenrcTsOptions",
        "fullType": {
          "fqn": "projen.typescript.ProjenrcTsOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "projenrcTsOptions",
        ],
        "simpleType": "ProjenrcTsOptions",
        "switch": "projenrc-ts-options",
      },
      {
        "default": ""PROJEN_GITHUB_TOKEN"",
        "deprecated": true,
        "docs": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenTokenSecret",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenTokenSecret",
        ],
        "simpleType": "string",
        "switch": "projen-token-secret",
      },
      {
        "default": "true",
        "docs": "Include pytest tests.",
        "featured": true,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "pytest",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "pytest",
        ],
        "simpleType": "boolean",
        "switch": "pytest",
      },
      {
        "default": "- defaults",
        "docs": "pytest options.",
        "featured": false,
        "fqn": "projen.python.PytestOptions",
        "fullType": {
          "fqn": "projen.python.PytestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "pytestOptions",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "pytestOptions",
        ],
        "simpleType": "PytestOptions",
        "switch": "pytest-options",
      },
      {
        "default": ""python"",
        "docs": "Path to the python executable to use.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "pythonExec",
        "optional": true,
        "parent": "PythonExecutableOptions",
        "path": [
          "pythonExec",
        ],
        "simpleType": "string",
        "switch": "python-exec",
      },
      {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "featured": false,
        "fqn": "projen.SampleReadmeProps",
        "fullType": {
          "fqn": "projen.SampleReadmeProps",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "readme",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "readme",
        ],
        "simpleType": "SampleReadmeProps",
        "switch": "readme",
      },
      {
        "default": "false",
        "docs": "Use renovatebot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "renovatebot",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebot",
        ],
        "simpleType": "boolean",
        "switch": "renovatebot",
      },
      {
        "default": "- default options",
        "docs": "Options for renovatebot.",
        "featured": false,
        "fqn": "projen.RenovatebotOptions",
        "fullType": {
          "fqn": "projen.RenovatebotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "renovatebotOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebotOptions",
        ],
        "simpleType": "RenovatebotOptions",
        "switch": "renovatebot-options",
      },
      {
        "default": "ApprovalLevel.BROADENING",
        "docs": "To protect you against unintended changes that affect your security posture, the AWS CDK Toolkit prompts you to approve security-related changes before deploying them.",
        "featured": false,
        "fqn": "projen.awscdk.ApprovalLevel",
        "fullType": {
          "fqn": "projen.awscdk.ApprovalLevel",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "requireApproval",
        "optional": true,
        "parent": "CdkConfigCommonOptions",
        "path": [
          "requireApproval",
        ],
        "simpleType": "ApprovalLevel",
        "switch": "require-approval",
      },
      {
        "default": "true",
        "docs": "Include sample code and test if the relevant directories don't exist.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "sample",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "sample",
        ],
        "simpleType": "boolean",
        "switch": "sample",
      },
      {
        "default": ""tests"",
        "docs": "Location of sample tests.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "sampleTestdir",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "sampleTestdir",
        ],
        "simpleType": "string",
        "switch": "sample-testdir",
      },
      {
        "docs": "Additional fields to pass in the setup() function if using setuptools.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "any",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "setupConfig",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": [
          "setupConfig",
        ],
        "simpleType": "unknown",
        "switch": "setup-config",
      },
      {
        "default": "- true, unless poetry is true, then false",
        "docs": "Use setuptools with a setup.py script for packaging and publishing.",
        "featured": true,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "setuptools",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "setuptools",
        ],
        "simpleType": "boolean",
        "switch": "setuptools",
      },
      {
        "default": "false",
        "docs": "Auto-close of stale issues and pull request.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "stale",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "stale",
        ],
        "simpleType": "boolean",
        "switch": "stale",
      },
      {
        "default": "- see defaults in \`StaleOptions\`",
        "docs": "Auto-close stale issues and pull requests.",
        "featured": false,
        "fqn": "projen.github.StaleOptions",
        "fullType": {
          "fqn": "projen.github.StaleOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "staleOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "staleOptions",
        ],
        "simpleType": "StaleOptions",
        "switch": "stale-options",
      },
      {
        "default": ""tests"",
        "deprecated": true,
        "docs": "Python sources directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "testdir",
        "optional": true,
        "parent": "AwsCdkPythonAppOptions",
        "path": [
          "testdir",
        ],
        "simpleType": "string",
        "switch": "testdir",
      },
      {
        "default": "- true, unless poetry is true, then false",
        "docs": "Use venv to manage a virtual environment for installing dependencies inside.",
        "featured": true,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "venv",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "venv",
        ],
        "simpleType": "boolean",
        "switch": "venv",
      },
      {
        "default": "- defaults",
        "docs": "Venv options.",
        "featured": false,
        "fqn": "projen.python.VenvOptions",
        "fullType": {
          "fqn": "projen.python.VenvOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "venvOptions",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "venvOptions",
        ],
        "simpleType": "VenvOptions",
        "switch": "venv-options",
      },
      {
        "default": ""0.1.0"",
        "docs": "Version of the package.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""0.1.0"",
        "jsonLike": true,
        "name": "version",
        "parent": "PythonPackagingOptions",
        "path": [
          "version",
        ],
        "simpleType": "string",
        "switch": "version",
      },
      {
        "default": "true",
        "docs": "Enable VSCode integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "vscode",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "vscode",
        ],
        "simpleType": "boolean",
        "switch": "vscode",
      },
      {
        "default": "[]",
        "docs": "Glob patterns to exclude from \`cdk watch\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "watchExcludes",
        "optional": true,
        "parent": "CdkConfigCommonOptions",
        "path": [
          "watchExcludes",
        ],
        "simpleType": "unknown",
        "switch": "watch-excludes",
      },
      {
        "default": "[]",
        "docs": "Glob patterns to include in \`cdk watch\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "watchIncludes",
        "optional": true,
        "parent": "CdkConfigCommonOptions",
        "path": [
          "watchIncludes",
        ],
        "simpleType": "unknown",
        "switch": "watch-includes",
      },
    ],
    "pjid": "awscdk-app-py",
    "typename": "awscdk.AwsCdkPythonApp",
  },
  {
    "docs": "AWS CDK app in TypeScript.",
    "docsurl": "https://projen.io/docs/api/awscdk#awscdktypescriptapp-",
    "fqn": "projen.awscdk.AwsCdkTypeScriptApp",
    "moduleName": "projen",
    "options": [
      {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "allowLibraryDependencies",
        ],
        "simpleType": "boolean",
        "switch": "allow-library-dependencies",
      },
      {
        "default": ""main.ts"",
        "docs": "The CDK app's entrypoint (relative to the source directory, which is "src" by default).",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "appEntrypoint",
        "optional": true,
        "parent": "AwsCdkTypeScriptAppOptions",
        "path": [
          "appEntrypoint",
        ],
        "simpleType": "string",
        "switch": "app-entrypoint",
      },
      {
        "default": ""dist"",
        "docs": "A directory which will contain build artifacts.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "artifactsDirectory",
        ],
        "simpleType": "string",
        "switch": "artifacts-directory",
      },
      {
        "docs": "Author's e-mail.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorEmail",
        ],
        "simpleType": "string",
        "switch": "author-email",
      },
      {
        "docs": "Author's name.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorName",
        ],
        "simpleType": "string",
        "switch": "author-name",
      },
      {
        "docs": "Is the author an organization.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorOrganization",
        ],
        "simpleType": "boolean",
        "switch": "author-organization",
      },
      {
        "docs": "Author's URL / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorUrl",
        ],
        "simpleType": "string",
        "switch": "author-url",
      },
      {
        "default": "- auto approve is disabled",
        "docs": "Enable and configure the 'auto approve' workflow.",
        "featured": false,
        "fqn": "projen.github.AutoApproveOptions",
        "fullType": {
          "fqn": "projen.github.AutoApproveOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoApproveOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoApproveOptions",
        ],
        "simpleType": "AutoApproveOptions",
        "switch": "auto-approve-options",
      },
      {
        "default": "- true",
        "docs": "Automatically approve deps upgrade PRs, allowing them to be merged by mergify (if configued).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoApproveUpgrades",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "autoApproveUpgrades",
        ],
        "simpleType": "boolean",
        "switch": "auto-approve-upgrades",
      },
      {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "autoDetectBin",
        ],
        "simpleType": "boolean",
        "switch": "auto-detect-bin",
      },
      {
        "default": "true",
        "docs": "Enable automatic merging on GitHub.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoMerge",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMerge",
        ],
        "simpleType": "boolean",
        "switch": "auto-merge",
      },
      {
        "default": "- see defaults in \`AutoMergeOptions\`",
        "docs": "Configure options for automatic merging on GitHub.",
        "featured": false,
        "fqn": "projen.github.AutoMergeOptions",
        "fullType": {
          "fqn": "projen.github.AutoMergeOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoMergeOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMergeOptions",
        ],
        "simpleType": "AutoMergeOptions",
        "switch": "auto-merge-options",
      },
      {
        "docs": "Binary programs vended with your module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bin",
        ],
        "simpleType": "unknown",
        "switch": "bin",
      },
      {
        "docs": "The email address to which issues should be reported.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsEmail",
        ],
        "simpleType": "string",
        "switch": "bugs-email",
      },
      {
        "docs": "The url to your project's issue tracker.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsUrl",
        ],
        "simpleType": "string",
        "switch": "bugs-url",
      },
      {
        "default": "- no build command",
        "docs": "A command to execute before synthesis.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "buildCommand",
        "optional": true,
        "parent": "CdkConfigCommonOptions",
        "path": [
          "buildCommand",
        ],
        "simpleType": "string",
        "switch": "build-command",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "build-workflow",
      },
      {
        "docs": "Options for PR build workflow.",
        "featured": false,
        "fqn": "projen.javascript.BuildWorkflowOptions",
        "fullType": {
          "fqn": "projen.javascript.BuildWorkflowOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowOptions",
        ],
        "simpleType": "BuildWorkflowOptions",
        "switch": "build-workflow-options",
      },
      {
        "default": ""{ pullRequest: {}, workflowDispatch: {} }"",
        "deprecated": true,
        "docs": "Build workflow triggers.",
        "featured": false,
        "fqn": "projen.github.workflows.Triggers",
        "fullType": {
          "fqn": "projen.github.workflows.Triggers",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowTriggers",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowTriggers",
        ],
        "simpleType": "Triggers",
        "switch": "build-workflow-triggers",
      },
      {
        "default": "- A recent version of "commit-and-tag-version"",
        "docs": "The \`commit-and-tag-version\` compatible package used to bump the package version, as a dependency string.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bumpPackage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "bumpPackage",
        ],
        "simpleType": "string",
        "switch": "bump-package",
      },
      {
        "docs": "List of dependencies to bundle into this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bundledDeps",
        ],
        "simpleType": "unknown",
        "switch": "bundled-deps",
      },
      {
        "docs": "Options for \`Bundler\`.",
        "featured": false,
        "fqn": "projen.javascript.BundlerOptions",
        "fullType": {
          "fqn": "projen.javascript.BundlerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "bundlerOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "bundlerOptions",
        ],
        "simpleType": "BundlerOptions",
        "switch": "bundler-options",
      },
      {
        "default": ""latest"",
        "docs": "The version of Bun to use if using Bun as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bunVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bunVersion",
        ],
        "simpleType": "string",
        "switch": "bun-version",
      },
      {
        "default": "- will be included by default for AWS CDK >= 1.0.0 < 2.0.0",
        "deprecated": true,
        "docs": "Warning: NodeJS only.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdkAssert",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkAssert",
        ],
        "simpleType": "boolean",
        "switch": "cdk-assert",
      },
      {
        "default": "- will be included by default for AWS CDK >= 1.111.0 < 2.0.0",
        "docs": "Install the assertions library?",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdkAssertions",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkAssertions",
        ],
        "simpleType": "boolean",
        "switch": "cdk-assertions",
      },
      {
        "default": ""^2"",
        "docs": "Version range of the AWS CDK CLI to depend on.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "cdkCliVersion",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkCliVersion",
        ],
        "simpleType": "string",
        "switch": "cdk-cli-version",
      },
      {
        "deprecated": true,
        "docs": "Which AWS CDKv1 modules this project requires.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "cdkDependencies",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkDependencies",
        ],
        "simpleType": "unknown",
        "switch": "cdk-dependencies",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "If this is enabled (default), all modules declared in \`cdkDependencies\` will be also added as normal \`dependencies\` (as well as \`peerDependencies\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdkDependenciesAsDeps",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkDependenciesAsDeps",
        ],
        "simpleType": "boolean",
        "switch": "cdk-dependencies-as-deps",
      },
      {
        "default": ""cdk.out"",
        "docs": "cdk.out directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "cdkout",
        "optional": true,
        "parent": "CdkConfigCommonOptions",
        "path": [
          "cdkout",
        ],
        "simpleType": "string",
        "switch": "cdkout",
      },
      {
        "deprecated": true,
        "docs": "AWS CDK modules required for testing.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "cdkTestDependencies",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkTestDependencies",
        ],
        "simpleType": "unknown",
        "switch": "cdk-test-dependencies",
      },
      {
        "default": ""2.1.0"",
        "docs": "Minimum version of the AWS CDK to depend on.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""2.1.0"",
        "jsonLike": true,
        "name": "cdkVersion",
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkVersion",
        ],
        "simpleType": "string",
        "switch": "cdk-version",
      },
      {
        "docs": "Use pinned version instead of caret version for CDK.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdkVersionPinning",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkVersionPinning",
        ],
        "simpleType": "boolean",
        "switch": "cdk-version-pinning",
      },
      {
        "default": "- no license checks are run during the build and all licenses will be accepted",
        "docs": "Configure which licenses should be deemed acceptable for use by dependencies.",
        "featured": false,
        "fqn": "projen.javascript.LicenseCheckerOptions",
        "fullType": {
          "fqn": "projen.javascript.LicenseCheckerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "checkLicenses",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "checkLicenses",
        ],
        "simpleType": "LicenseCheckerOptions",
        "switch": "check-licenses",
      },
      {
        "default": "- true, but false for subprojects",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "clobber",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "clobber",
        ],
        "simpleType": "boolean",
        "switch": "clobber",
      },
      {
        "default": "- undefined",
        "docs": "Options for npm packages using AWS CodeArtifact.",
        "featured": false,
        "fqn": "projen.javascript.CodeArtifactOptions",
        "fullType": {
          "fqn": "projen.javascript.CodeArtifactOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "codeArtifactOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "codeArtifactOptions",
        ],
        "simpleType": "CodeArtifactOptions",
        "switch": "code-artifact-options",
      },
      {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v4 A secret is required for private repos. Configured with \`@codeCovTokenSecret\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCov",
        ],
        "simpleType": "boolean",
        "switch": "code-cov",
      },
      {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCovTokenSecret",
        ],
        "simpleType": "string",
        "switch": "code-cov-token-secret",
      },
      {
        "default": "true",
        "docs": "Whether to commit the managed files by default.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "commitGenerated",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "commitGenerated",
        ],
        "simpleType": "boolean",
        "switch": "commit-generated",
      },
      {
        "default": "- for CDK 1.x the default is "3.2.27", for CDK 2.x the default is
"10.0.5".",
        "docs": "Minimum version of the \`constructs\` library to depend on.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "constructsVersion",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "constructsVersion",
        ],
        "simpleType": "string",
        "switch": "constructs-version",
      },
      {
        "default": "- no additional context",
        "docs": "Additional context to include in \`cdk.json\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "any",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "context",
        "optional": true,
        "parent": "CdkConfigCommonOptions",
        "path": [
          "context",
        ],
        "simpleType": "unknown",
        "switch": "context",
      },
      {
        "default": "- defaults to the value of authorName or "" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightOwner",
        ],
        "simpleType": "string",
        "switch": "copyright-owner",
      },
      {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightPeriod",
        ],
        "simpleType": "string",
        "switch": "copyright-period",
      },
      {
        "default": ""main"",
        "docs": "The name of the main release branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""main"",
        "jsonLike": true,
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": [
          "defaultReleaseBranch",
        ],
        "simpleType": "string",
        "switch": "default-release-branch",
      },
      {
        "default": "false",
        "docs": "Use dependabot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabot",
        ],
        "simpleType": "boolean",
        "switch": "dependabot",
      },
      {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "featured": false,
        "fqn": "projen.github.DependabotOptions",
        "fullType": {
          "fqn": "projen.github.DependabotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabotOptions",
        ],
        "simpleType": "DependabotOptions",
        "switch": "dependabot-options",
      },
      {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "deps",
        ],
        "simpleType": "unknown",
        "switch": "deps",
      },
      {
        "default": "true",
        "docs": "Use tasks and github workflows to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "depsUpgrade",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgrade",
        ],
        "simpleType": "boolean",
        "switch": "deps-upgrade",
      },
      {
        "default": "- default options",
        "docs": "Options for \`UpgradeDependencies\`.",
        "featured": false,
        "fqn": "projen.javascript.UpgradeDependenciesOptions",
        "fullType": {
          "fqn": "projen.javascript.UpgradeDependenciesOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "depsUpgradeOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgradeOptions",
        ],
        "simpleType": "UpgradeDependenciesOptions",
        "switch": "deps-upgrade-options",
      },
      {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "description",
        ],
        "simpleType": "string",
        "switch": "description",
      },
      {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "devContainer",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "devContainer",
        ],
        "simpleType": "boolean",
        "switch": "dev-container",
      },
      {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "devDeps",
        ],
        "simpleType": "unknown",
        "switch": "dev-deps",
      },
      {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "disableTsconfig",
        ],
        "simpleType": "boolean",
        "switch": "disable-tsconfig",
      },
      {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.dev.json\` file.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "disableTsconfigDev",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "disableTsconfigDev",
        ],
        "simpleType": "boolean",
        "switch": "disable-tsconfig-dev",
      },
      {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "docgen",
        ],
        "simpleType": "boolean",
        "switch": "docgen",
      },
      {
        "default": ""docs"",
        "docs": "Docs directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "docsDirectory",
        ],
        "simpleType": "string",
        "switch": "docs-directory",
      },
      {
        "default": "true",
        "docs": "Automatically adds an \`cloudfront.experimental.EdgeFunction\` for each \`.edge-lambda.ts\` handler in your source tree. If this is disabled, you can manually add an \`awscdk.AutoDiscover\` component to your project.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "edgeLambdaAutoDiscover",
        "optional": true,
        "parent": "AwsCdkTypeScriptAppOptions",
        "path": [
          "edgeLambdaAutoDiscover",
        ],
        "simpleType": "boolean",
        "switch": "edge-lambda-auto-discover",
      },
      {
        "default": ""lib/index.js"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "entrypoint",
        ],
        "simpleType": "string",
        "switch": "entrypoint",
      },
      {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "entrypointTypes",
        ],
        "simpleType": "string",
        "switch": "entrypoint-types",
      },
      {
        "default": "true",
        "docs": "Setup eslint.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "eslint",
        ],
        "simpleType": "boolean",
        "switch": "eslint",
      },
      {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "featured": false,
        "fqn": "projen.javascript.EslintOptions",
        "fullType": {
          "fqn": "projen.javascript.EslintOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "eslintOptions",
        ],
        "simpleType": "EslintOptions",
        "switch": "eslint-options",
      },
      {
        "default": "false",
        "docs": "Enable experimental support for the AWS CDK integ-runner.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "experimentalIntegRunner",
        "optional": true,
        "parent": "AwsCdkTypeScriptAppOptions",
        "path": [
          "experimentalIntegRunner",
        ],
        "simpleType": "boolean",
        "switch": "experimental-integ-runner",
      },
      {
        "default": "true",
        "docs": "Include all feature flags in cdk.json.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "featureFlags",
        "optional": true,
        "parent": "CdkConfigCommonOptions",
        "path": [
          "featureFlags",
        ],
        "simpleType": "boolean",
        "switch": "feature-flags",
      },
      {
        "default": "true",
        "docs": "Enable GitHub integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "github",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "github",
        ],
        "simpleType": "boolean",
        "switch": "github",
      },
      {
        "default": "- see GitHubOptions",
        "docs": "Options for GitHub integration.",
        "featured": false,
        "fqn": "projen.github.GitHubOptions",
        "fullType": {
          "fqn": "projen.github.GitHubOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "githubOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "githubOptions",
        ],
        "simpleType": "GitHubOptions",
        "switch": "github-options",
      },
      {
        "docs": "Additional entries to .gitignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "gitignore",
        ],
        "simpleType": "unknown",
        "switch": "gitignore",
      },
      {
        "docs": "Configuration options for .gitignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitIgnoreOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "git-ignore-options",
      },
      {
        "docs": "Configuration options for git.",
        "featured": false,
        "fqn": "projen.GitOptions",
        "fullType": {
          "fqn": "projen.GitOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitOptions",
        ],
        "simpleType": "GitOptions",
        "switch": "git-options",
      },
      {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "gitpod",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "gitpod",
        ],
        "simpleType": "boolean",
        "switch": "gitpod",
      },
      {
        "docs": "Package's Homepage / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "homepage",
        ],
        "simpleType": "string",
        "switch": "homepage",
      },
      {
        "default": "true",
        "docs": "Automatically discovers and creates integration tests for each \`.integ.ts\` file in under your test directory.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "integrationTestAutoDiscover",
        "optional": true,
        "parent": "AwsCdkTypeScriptAppOptions",
        "path": [
          "integrationTestAutoDiscover",
        ],
        "simpleType": "boolean",
        "switch": "integration-test-auto-discover",
      },
      {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jest",
        ],
        "simpleType": "boolean",
        "switch": "jest",
      },
      {
        "default": "- default options",
        "docs": "Jest options.",
        "featured": false,
        "fqn": "projen.javascript.JestOptions",
        "fullType": {
          "fqn": "projen.javascript.JestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jestOptions",
        ],
        "simpleType": "JestOptions",
        "switch": "jest-options",
      },
      {
        "default": ""latest"",
        "docs": "Version requirement of \`publib\` which is used to publish modules to npm.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "jsiiReleaseVersion",
        ],
        "simpleType": "string",
        "switch": "jsii-release-version",
      },
      {
        "docs": "Keywords to include in \`package.json\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "keywords",
        ],
        "simpleType": "unknown",
        "switch": "keywords",
      },
      {
        "default": "true",
        "docs": "Automatically adds an \`awscdk.LambdaFunction\` for each \`.lambda.ts\` handler in your source tree. If this is disabled, you can manually add an \`awscdk.AutoDiscover\` component to your project.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "lambdaAutoDiscover",
        "optional": true,
        "parent": "AwsCdkTypeScriptAppOptions",
        "path": [
          "lambdaAutoDiscover",
        ],
        "simpleType": "boolean",
        "switch": "lambda-auto-discover",
      },
      {
        "default": "true",
        "docs": "Automatically adds an \`awscdk.LambdaExtension\` for each \`.lambda-extension.ts\` entrypoint in your source tree. If this is disabled, you can manually add an \`awscdk.AutoDiscover\` component to your project.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "lambdaExtensionAutoDiscover",
        "optional": true,
        "parent": "AwsCdkTypeScriptAppOptions",
        "path": [
          "lambdaExtensionAutoDiscover",
        ],
        "simpleType": "boolean",
        "switch": "lambda-extension-auto-discover",
      },
      {
        "default": "- default options",
        "docs": "Common options for all AWS Lambda functions.",
        "featured": false,
        "fqn": "projen.awscdk.LambdaFunctionCommonOptions",
        "fullType": {
          "fqn": "projen.awscdk.LambdaFunctionCommonOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "lambdaOptions",
        "optional": true,
        "parent": "AwsCdkTypeScriptAppOptions",
        "path": [
          "lambdaOptions",
        ],
        "simpleType": "LambdaFunctionCommonOptions",
        "switch": "lambda-options",
      },
      {
        "default": ""lib"",
        "docs": "Typescript  artifacts output directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "libdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "libdir",
        ],
        "simpleType": "string",
        "switch": "libdir",
      },
      {
        "default": ""Apache-2.0"",
        "docs": "License's SPDX identifier.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "license",
        ],
        "simpleType": "string",
        "switch": "license",
      },
      {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "licensed",
        ],
        "simpleType": "boolean",
        "switch": "licensed",
      },
      {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "featured": false,
        "fqn": "projen.LoggerOptions",
        "fullType": {
          "fqn": "projen.LoggerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "logging",
        ],
        "simpleType": "LoggerOptions",
        "switch": "logging",
      },
      {
        "default": "- Major version is not enforced.",
        "docs": "Major version to release from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "majorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "majorVersion",
        ],
        "simpleType": "number",
        "switch": "major-version",
      },
      {
        "default": "- no maximum version is enforced",
        "docs": "The maximum node version supported by this package. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "maxNodeVersion",
        ],
        "simpleType": "string",
        "switch": "max-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Whether mergify should be enabled on this repository or not.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mergify",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergify",
        ],
        "simpleType": "boolean",
        "switch": "mergify",
      },
      {
        "default": "- default options",
        "deprecated": true,
        "docs": "Options for mergify.",
        "featured": false,
        "fqn": "projen.github.MergifyOptions",
        "fullType": {
          "fqn": "projen.github.MergifyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergifyOptions",
        ],
        "simpleType": "MergifyOptions",
        "switch": "mergify-options",
      },
      {
        "default": "- No minimum version is being enforced",
        "docs": "Minimal Major version to release.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "minMajorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "minMajorVersion",
        ],
        "simpleType": "number",
        "switch": "min-major-version",
      },
      {
        "default": "- no minimum version is enforced",
        "docs": "The minimum node version required by this package to function. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "minNodeVersion",
        ],
        "simpleType": "string",
        "switch": "min-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "mutableBuild",
        ],
        "simpleType": "boolean",
        "switch": "mutable-build",
      },
      {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$BASEDIR",
        "jsonLike": true,
        "name": "name",
        "parent": "ProjectOptions",
        "path": [
          "name",
        ],
        "simpleType": "string",
        "switch": "name",
      },
      {
        "default": "- The next version will be determined based on the commit history and project settings.",
        "docs": "A shell command to control the next version to release.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "nextVersionCommand",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "nextVersionCommand",
        ],
        "simpleType": "string",
        "switch": "next-version-command",
      },
      {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "featured": false,
        "fqn": "projen.javascript.NpmAccess",
        "fullType": {
          "fqn": "projen.javascript.NpmAccess",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmAccess",
        ],
        "simpleType": "NpmAccess",
        "switch": "npm-access",
      },
      {
        "default": ""latest"",
        "docs": "The npmDistTag to use when publishing from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmDistTag",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "npmDistTag",
        ],
        "simpleType": "string",
        "switch": "npm-dist-tag",
      },
      {
        "deprecated": true,
        "docs": "Additional entries to .npmignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignore",
        ],
        "simpleType": "unknown",
        "switch": "npmignore",
      },
      {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignoreEnabled",
        ],
        "simpleType": "boolean",
        "switch": "npmignore-enabled",
      },
      {
        "docs": "Configuration options for .npmignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "npmIgnoreOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "npm-ignore-options",
      },
      {
        "default": "- true for public packages, false otherwise",
        "docs": "Should provenance statements be generated when the package is published.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmProvenance",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmProvenance",
        ],
        "simpleType": "boolean",
        "switch": "npm-provenance",
      },
      {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistry",
        ],
        "simpleType": "string",
        "switch": "npm-registry",
      },
      {
        "default": ""https://registry.npmjs.org"",
        "docs": "The base URL of the npm package registry.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistryUrl",
        ],
        "simpleType": "string",
        "switch": "npm-registry-url",
      },
      {
        "default": ""NPM_TOKEN"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmTokenSecret",
        ],
        "simpleType": "string",
        "switch": "npm-token-secret",
      },
      {
        "default": ""."",
        "docs": "The root directory of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "outdir",
        ],
        "simpleType": "string",
        "switch": "outdir",
      },
      {
        "default": "true",
        "docs": "Defines a \`package\` task that will produce an npm tarball under the artifacts directory (e.g. \`dist\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "package",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "package",
        ],
        "simpleType": "boolean",
        "switch": "package",
      },
      {
        "default": "NodePackageManager.YARN_CLASSIC",
        "docs": "The Node Package Manager used to execute scripts.",
        "featured": false,
        "fqn": "projen.javascript.NodePackageManager",
        "fullType": {
          "fqn": "projen.javascript.NodePackageManager",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageManager",
        ],
        "simpleType": "NodePackageManager",
        "switch": "package-manager",
      },
      {
        "default": "- defaults to project name",
        "docs": "The "name" in package.json.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageName",
        ],
        "simpleType": "string",
        "switch": "package-name",
      },
      {
        "docs": "The parent project, if this project is part of a bigger project.",
        "featured": false,
        "fqn": "projen.Project",
        "fullType": {
          "fqn": "projen.Project",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "parent",
        ],
        "simpleType": "Project",
        "switch": "parent",
      },
      {
        "docs": "Options for \`peerDeps\`.",
        "featured": false,
        "fqn": "projen.javascript.PeerDependencyOptions",
        "fullType": {
          "fqn": "projen.javascript.PeerDependencyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDependencyOptions",
        ],
        "simpleType": "PeerDependencyOptions",
        "switch": "peer-dependency-options",
      },
      {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDeps",
        ],
        "simpleType": "unknown",
        "switch": "peer-deps",
      },
      {
        "default": ""9"",
        "docs": "The version of PNPM to use if using PNPM as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "pnpmVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "pnpmVersion",
        ],
        "simpleType": "string",
        "switch": "pnpm-version",
      },
      {
        "default": "[]",
        "docs": "Steps to execute after build as part of the release workflow.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "postBuildSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "postBuildSteps",
        ],
        "simpleType": "unknown",
        "switch": "post-build-steps",
      },
      {
        "default": "- normal semantic versions",
        "docs": "Bump versions from the default branch as pre-releases (e.g. "beta", "alpha", "pre").",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "prerelease",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "prerelease",
        ],
        "simpleType": "string",
        "switch": "prerelease",
      },
      {
        "default": "false",
        "docs": "Setup prettier.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "prettier",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettier",
        ],
        "simpleType": "boolean",
        "switch": "prettier",
      },
      {
        "default": "- default options",
        "docs": "Prettier options.",
        "featured": false,
        "fqn": "projen.javascript.PrettierOptions",
        "fullType": {
          "fqn": "projen.javascript.PrettierOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "prettierOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettierOptions",
        ],
        "simpleType": "PrettierOptions",
        "switch": "prettier-options",
      },
      {
        "default": "ProjectType.UNKNOWN",
        "deprecated": true,
        "docs": "Which type of project this is (library/app).",
        "featured": false,
        "fqn": "projen.ProjectType",
        "fullType": {
          "fqn": "projen.ProjectType",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "projectType",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projectType",
        ],
        "simpleType": "ProjectType",
        "switch": "project-type",
      },
      {
        "default": ""npx projen"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenCommand",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenCommand",
        ],
        "simpleType": "string",
        "switch": "projen-command",
      },
      {
        "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
        "docs": "Choose a method of providing GitHub API access for projen workflows.",
        "featured": false,
        "fqn": "projen.github.GithubCredentials",
        "fullType": {
          "fqn": "projen.github.GithubCredentials",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "projenCredentials",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenCredentials",
        ],
        "simpleType": "GithubCredentials",
        "switch": "projen-credentials",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Indicates of "projen" should be installed as a devDependency.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenDevDependency",
        ],
        "simpleType": "boolean",
        "switch": "projen-dev-dependency",
      },
      {
        "default": "- true if projenrcJson is false",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-js",
      },
      {
        "default": "false",
        "docs": "Generate (once) .projenrc.json (in JSON). Set to \`false\` in order to disable .projenrc.json generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJson",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJson",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-json",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.json.",
        "featured": false,
        "fqn": "projen.ProjenrcJsonOptions",
        "fullType": {
          "fqn": "projen.ProjenrcJsonOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsonOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJsonOptions",
        ],
        "simpleType": "ProjenrcJsonOptions",
        "switch": "projenrc-json-options",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "featured": false,
        "fqn": "projen.javascript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.javascript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-js-options",
      },
      {
        "default": "false",
        "docs": "Use TypeScript for your projenrc file (\`.projenrc.ts\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "initialValue": "true",
        "jsonLike": true,
        "name": "projenrcTs",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "projenrcTs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-ts",
      },
      {
        "docs": "Options for .projenrc.ts.",
        "featured": false,
        "fqn": "projen.typescript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.typescript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "projenrcTsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-ts-options",
      },
      {
        "default": ""PROJEN_GITHUB_TOKEN"",
        "deprecated": true,
        "docs": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenTokenSecret",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenTokenSecret",
        ],
        "simpleType": "string",
        "switch": "projen-token-secret",
      },
      {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenVersion",
        ],
        "simpleType": "string",
        "switch": "projen-version",
      },
      {
        "default": "false",
        "docs": "Instead of actually publishing to package managers, just print the publishing command.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishDryRun",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishDryRun",
        ],
        "simpleType": "boolean",
        "switch": "publish-dry-run",
      },
      {
        "default": "false",
        "docs": "Define publishing tasks that can be executed manually as well as workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishTasks",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishTasks",
        ],
        "simpleType": "boolean",
        "switch": "publish-tasks",
      },
      {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplate",
        ],
        "simpleType": "boolean",
        "switch": "pull-request-template",
      },
      {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplateContents",
        ],
        "simpleType": "unknown",
        "switch": "pull-request-template-contents",
      },
      {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "featured": false,
        "fqn": "projen.SampleReadmeProps",
        "fullType": {
          "fqn": "projen.SampleReadmeProps",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "readme",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "readme",
        ],
        "simpleType": "SampleReadmeProps",
        "switch": "readme",
      },
      {
        "default": "ReleasableCommits.everyCommit()",
        "docs": "Find commits that should be considered releasable Used to decide if a release is required.",
        "featured": false,
        "fqn": "projen.ReleasableCommits",
        "fullType": {
          "fqn": "projen.ReleasableCommits",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releasableCommits",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releasableCommits",
        ],
        "simpleType": "ReleasableCommits",
        "switch": "releasable-commits",
      },
      {
        "default": "- true (false for subprojects)",
        "docs": "Add release management to this project.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "release",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "release",
        ],
        "simpleType": "boolean",
        "switch": "release",
      },
      {
        "default": "- no additional branches are used for release. you can use
\`addBranch()\` to add additional branches.",
        "docs": "Defines additional release branches.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.release.BranchOptions",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "releaseBranches",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseBranches",
        ],
        "simpleType": "unknown",
        "switch": "release-branches",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseEveryCommit",
        ],
        "simpleType": "boolean",
        "switch": "release-every-commit",
      },
      {
        "default": "false",
        "docs": "Create a github issue on every failed publishing task.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseFailureIssue",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssue",
        ],
        "simpleType": "boolean",
        "switch": "release-failure-issue",
      },
      {
        "default": ""failed-release"",
        "docs": "The label to apply to issues indicating publish failures.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseFailureIssueLabel",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssueLabel",
        ],
        "simpleType": "string",
        "switch": "release-failure-issue-label",
      },
      {
        "default": "- no scheduled releases",
        "deprecated": true,
        "docs": "CRON schedule to trigger new releases.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseSchedule",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseSchedule",
        ],
        "simpleType": "string",
        "switch": "release-schedule",
      },
      {
        "default": ""v"",
        "docs": "Automatically add the given prefix to release tags. Useful if you are releasing on multiple branches with overlapping version numbers.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseTagPrefix",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTagPrefix",
        ],
        "simpleType": "string",
        "switch": "release-tag-prefix",
      },
      {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseToNpm",
        ],
        "simpleType": "boolean",
        "switch": "release-to-npm",
      },
      {
        "default": "- Continuous releases (\`ReleaseTrigger.continuous()\`)",
        "docs": "The release trigger to use.",
        "featured": false,
        "fqn": "projen.release.ReleaseTrigger",
        "fullType": {
          "fqn": "projen.release.ReleaseTrigger",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releaseTrigger",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTrigger",
        ],
        "simpleType": "ReleaseTrigger",
        "switch": "release-trigger",
      },
      {
        "default": "- true if not a subproject",
        "deprecated": true,
        "docs": "DEPRECATED: renamed to \`release\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "release-workflow",
      },
      {
        "default": ""release"",
        "docs": "The name of the default release workflow.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseWorkflowName",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowName",
        ],
        "simpleType": "string",
        "switch": "release-workflow-name",
      },
      {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowSetupSteps",
        ],
        "simpleType": "unknown",
        "switch": "release-workflow-setup-steps",
      },
      {
        "default": "false",
        "docs": "Use renovatebot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "renovatebot",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebot",
        ],
        "simpleType": "boolean",
        "switch": "renovatebot",
      },
      {
        "default": "- default options",
        "docs": "Options for renovatebot.",
        "featured": false,
        "fqn": "projen.RenovatebotOptions",
        "fullType": {
          "fqn": "projen.RenovatebotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "renovatebotOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebotOptions",
        ],
        "simpleType": "RenovatebotOptions",
        "switch": "renovatebot-options",
      },
      {
        "docs": "The repository is the location where the actual code for your package lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repository",
        ],
        "simpleType": "string",
        "switch": "repository",
      },
      {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repositoryDirectory",
        ],
        "simpleType": "string",
        "switch": "repository-directory",
      },
      {
        "default": "ApprovalLevel.BROADENING",
        "docs": "To protect you against unintended changes that affect your security posture, the AWS CDK Toolkit prompts you to approve security-related changes before deploying them.",
        "featured": false,
        "fqn": "projen.awscdk.ApprovalLevel",
        "fullType": {
          "fqn": "projen.awscdk.ApprovalLevel",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "requireApproval",
        "optional": true,
        "parent": "CdkConfigCommonOptions",
        "path": [
          "requireApproval",
        ],
        "simpleType": "ApprovalLevel",
        "switch": "require-approval",
      },
      {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "sampleCode",
        ],
        "simpleType": "boolean",
        "switch": "sample-code",
      },
      {
        "default": "- fetch all scoped packages from the public npm registry",
        "docs": "Options for privately hosted scoped packages.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.javascript.ScopedPackagesOptions",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "scopedPackagesOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scopedPackagesOptions",
        ],
        "simpleType": "unknown",
        "switch": "scoped-packages-options",
      },
      {
        "default": "{}",
        "deprecated": true,
        "docs": "npm scripts to include.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scripts",
        ],
        "simpleType": "unknown",
        "switch": "scripts",
      },
      {
        "default": ""src"",
        "docs": "Typescript sources directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "srcdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "srcdir",
        ],
        "simpleType": "string",
        "switch": "srcdir",
      },
      {
        "docs": "Package's Stability.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "stability",
        ],
        "simpleType": "string",
        "switch": "stability",
      },
      {
        "default": "false",
        "docs": "Auto-close of stale issues and pull request.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "stale",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "stale",
        ],
        "simpleType": "boolean",
        "switch": "stale",
      },
      {
        "default": "- see defaults in \`StaleOptions\`",
        "docs": "Auto-close stale issues and pull requests.",
        "featured": false,
        "fqn": "projen.github.StaleOptions",
        "fullType": {
          "fqn": "projen.github.StaleOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "staleOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "staleOptions",
        ],
        "simpleType": "StaleOptions",
        "switch": "stale-options",
      },
      {
        "default": ""test"",
        "docs": "Jest tests directory. Tests files should be named \`xxx.test.ts\`.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "testdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "testdir",
        ],
        "simpleType": "string",
        "switch": "testdir",
      },
      {
        "default": "- default options",
        "docs": "Custom TSConfig.",
        "featured": false,
        "fqn": "projen.javascript.TypescriptConfigOptions",
        "fullType": {
          "fqn": "projen.javascript.TypescriptConfigOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfig",
        ],
        "simpleType": "TypescriptConfigOptions",
        "switch": "tsconfig",
      },
      {
        "default": "- use the production tsconfig options",
        "docs": "Custom tsconfig options for the development tsconfig.json file (used for testing).",
        "featured": false,
        "fqn": "projen.javascript.TypescriptConfigOptions",
        "fullType": {
          "fqn": "projen.javascript.TypescriptConfigOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsconfigDev",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfigDev",
        ],
        "simpleType": "TypescriptConfigOptions",
        "switch": "tsconfig-dev",
      },
      {
        "default": ""tsconfig.dev.json"",
        "docs": "The name of the development tsconfig.json file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "tsconfigDevFile",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfigDevFile",
        ],
        "simpleType": "string",
        "switch": "tsconfig-dev-file",
      },
      {
        "docs": "Options for ts-jest.",
        "featured": false,
        "fqn": "projen.typescript.TsJestOptions",
        "fullType": {
          "fqn": "projen.typescript.TsJestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsJestOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsJestOptions",
        ],
        "simpleType": "TsJestOptions",
        "switch": "ts-jest-options",
      },
      {
        "default": ""latest"",
        "docs": "TypeScript version to use.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "typescriptVersion",
        ],
        "simpleType": "string",
        "switch": "typescript-version",
      },
      {
        "default": "- standard configuration applicable for GitHub repositories",
        "docs": "Custom configuration used when creating changelog with commit-and-tag-version package.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "any",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "versionrcOptions",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "versionrcOptions",
        ],
        "simpleType": "unknown",
        "switch": "versionrc-options",
      },
      {
        "default": "true",
        "docs": "Enable VSCode integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "vscode",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "vscode",
        ],
        "simpleType": "boolean",
        "switch": "vscode",
      },
      {
        "default": "[]",
        "docs": "Glob patterns to exclude from \`cdk watch\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "watchExcludes",
        "optional": true,
        "parent": "CdkConfigCommonOptions",
        "path": [
          "watchExcludes",
        ],
        "simpleType": "unknown",
        "switch": "watch-excludes",
      },
      {
        "default": "[]",
        "docs": "Glob patterns to include in \`cdk watch\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "watchIncludes",
        "optional": true,
        "parent": "CdkConfigCommonOptions",
        "path": [
          "watchIncludes",
        ],
        "simpleType": "unknown",
        "switch": "watch-includes",
      },
      {
        "default": ""yarn install --frozen-lockfile && yarn projen"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowBootstrapSteps",
        ],
        "simpleType": "unknown",
        "switch": "workflow-bootstrap-steps",
      },
      {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowContainerImage",
        ],
        "simpleType": "string",
        "switch": "workflow-container-image",
      },
      {
        "default": "- GitHub Actions",
        "docs": "The git identity to use in workflows.",
        "featured": false,
        "fqn": "projen.github.GitIdentity",
        "fullType": {
          "fqn": "projen.github.GitIdentity",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowGitIdentity",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowGitIdentity",
        ],
        "simpleType": "GitIdentity",
        "switch": "workflow-git-identity",
      },
      {
        "default": "- \`minNodeVersion\` if set, otherwise \`lts/*\`.",
        "docs": "The node version used in GitHub Actions workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowNodeVersion",
        ],
        "simpleType": "string",
        "switch": "workflow-node-version",
      },
      {
        "default": "false",
        "docs": "Enable Node.js package cache in GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "workflowPackageCache",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowPackageCache",
        ],
        "simpleType": "boolean",
        "switch": "workflow-package-cache",
      },
      {
        "default": "["ubuntu-latest"]",
        "docs": "Github Runner selection labels.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowRunsOn",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOn",
        ],
        "simpleType": "unknown",
        "switch": "workflow-runs-on",
      },
      {
        "docs": "Github Runner Group selection options.",
        "featured": false,
        "fqn": "projen.GroupRunnerOptions",
        "fullType": {
          "fqn": "projen.GroupRunnerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowRunsOnGroup",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOnGroup",
        ],
        "simpleType": "GroupRunnerOptions",
        "switch": "workflow-runs-on-group",
      },
      {
        "default": "- Yarn Berry v4 with all default options",
        "docs": "Options for Yarn Berry.",
        "featured": false,
        "fqn": "projen.javascript.YarnBerryOptions",
        "fullType": {
          "fqn": "projen.javascript.YarnBerryOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "yarnBerryOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "yarnBerryOptions",
        ],
        "simpleType": "YarnBerryOptions",
        "switch": "yarn-berry-options",
      },
    ],
    "pjid": "awscdk-app-ts",
    "typename": "awscdk.AwsCdkTypeScriptApp",
  },
  {
    "docs": "AWS CDK construct library project.",
    "docsurl": "https://projen.io/docs/api/awscdk#awscdkconstructlibrary-",
    "fqn": "projen.awscdk.AwsCdkConstructLibrary",
    "moduleName": "projen",
    "options": [
      {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "allowLibraryDependencies",
        ],
        "simpleType": "boolean",
        "switch": "allow-library-dependencies",
      },
      {
        "default": ""dist"",
        "docs": "A directory which will contain build artifacts.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "artifactsDirectory",
        ],
        "simpleType": "string",
        "switch": "artifacts-directory",
      },
      {
        "default": "$GIT_USER_NAME",
        "docs": "The name of the library author.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$GIT_USER_NAME",
        "jsonLike": true,
        "name": "author",
        "parent": "JsiiProjectOptions",
        "path": [
          "author",
        ],
        "simpleType": "string",
        "switch": "author",
      },
      {
        "default": "$GIT_USER_EMAIL",
        "docs": "Email or URL of the library author.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$GIT_USER_EMAIL",
        "jsonLike": true,
        "name": "authorAddress",
        "parent": "JsiiProjectOptions",
        "path": [
          "authorAddress",
        ],
        "simpleType": "string",
        "switch": "author-address",
      },
      {
        "docs": "Author's e-mail.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorEmail",
        ],
        "simpleType": "string",
        "switch": "author-email",
      },
      {
        "docs": "Author's name.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorName",
        ],
        "simpleType": "string",
        "switch": "author-name",
      },
      {
        "docs": "Is the author an organization.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorOrganization",
        ],
        "simpleType": "boolean",
        "switch": "author-organization",
      },
      {
        "docs": "Author's URL / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorUrl",
        ],
        "simpleType": "string",
        "switch": "author-url",
      },
      {
        "default": "- auto approve is disabled",
        "docs": "Enable and configure the 'auto approve' workflow.",
        "featured": false,
        "fqn": "projen.github.AutoApproveOptions",
        "fullType": {
          "fqn": "projen.github.AutoApproveOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoApproveOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoApproveOptions",
        ],
        "simpleType": "AutoApproveOptions",
        "switch": "auto-approve-options",
      },
      {
        "default": "- true",
        "docs": "Automatically approve deps upgrade PRs, allowing them to be merged by mergify (if configued).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoApproveUpgrades",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "autoApproveUpgrades",
        ],
        "simpleType": "boolean",
        "switch": "auto-approve-upgrades",
      },
      {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "autoDetectBin",
        ],
        "simpleType": "boolean",
        "switch": "auto-detect-bin",
      },
      {
        "default": "true",
        "docs": "Enable automatic merging on GitHub.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoMerge",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMerge",
        ],
        "simpleType": "boolean",
        "switch": "auto-merge",
      },
      {
        "default": "- see defaults in \`AutoMergeOptions\`",
        "docs": "Configure options for automatic merging on GitHub.",
        "featured": false,
        "fqn": "projen.github.AutoMergeOptions",
        "fullType": {
          "fqn": "projen.github.AutoMergeOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoMergeOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMergeOptions",
        ],
        "simpleType": "AutoMergeOptions",
        "switch": "auto-merge-options",
      },
      {
        "docs": "Binary programs vended with your module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bin",
        ],
        "simpleType": "unknown",
        "switch": "bin",
      },
      {
        "docs": "The email address to which issues should be reported.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsEmail",
        ],
        "simpleType": "string",
        "switch": "bugs-email",
      },
      {
        "docs": "The url to your project's issue tracker.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsUrl",
        ],
        "simpleType": "string",
        "switch": "bugs-url",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "build-workflow",
      },
      {
        "docs": "Options for PR build workflow.",
        "featured": false,
        "fqn": "projen.javascript.BuildWorkflowOptions",
        "fullType": {
          "fqn": "projen.javascript.BuildWorkflowOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowOptions",
        ],
        "simpleType": "BuildWorkflowOptions",
        "switch": "build-workflow-options",
      },
      {
        "default": ""{ pullRequest: {}, workflowDispatch: {} }"",
        "deprecated": true,
        "docs": "Build workflow triggers.",
        "featured": false,
        "fqn": "projen.github.workflows.Triggers",
        "fullType": {
          "fqn": "projen.github.workflows.Triggers",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowTriggers",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowTriggers",
        ],
        "simpleType": "Triggers",
        "switch": "build-workflow-triggers",
      },
      {
        "default": "- A recent version of "commit-and-tag-version"",
        "docs": "The \`commit-and-tag-version\` compatible package used to bump the package version, as a dependency string.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bumpPackage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "bumpPackage",
        ],
        "simpleType": "string",
        "switch": "bump-package",
      },
      {
        "docs": "List of dependencies to bundle into this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bundledDeps",
        ],
        "simpleType": "unknown",
        "switch": "bundled-deps",
      },
      {
        "docs": "Options for \`Bundler\`.",
        "featured": false,
        "fqn": "projen.javascript.BundlerOptions",
        "fullType": {
          "fqn": "projen.javascript.BundlerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "bundlerOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "bundlerOptions",
        ],
        "simpleType": "BundlerOptions",
        "switch": "bundler-options",
      },
      {
        "default": ""latest"",
        "docs": "The version of Bun to use if using Bun as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bunVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bunVersion",
        ],
        "simpleType": "string",
        "switch": "bun-version",
      },
      {
        "default": "- new version will be announced",
        "docs": "Libraries will be picked up by the construct catalog when they are published to npm as jsii modules and will be published under:.",
        "featured": false,
        "fqn": "projen.cdk.Catalog",
        "fullType": {
          "fqn": "projen.cdk.Catalog",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "catalog",
        "optional": true,
        "parent": "ConstructLibraryOptions",
        "path": [
          "catalog",
        ],
        "simpleType": "Catalog",
        "switch": "catalog",
      },
      {
        "default": "- will be included by default for AWS CDK >= 1.0.0 < 2.0.0",
        "deprecated": true,
        "docs": "Warning: NodeJS only.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdkAssert",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkAssert",
        ],
        "simpleType": "boolean",
        "switch": "cdk-assert",
      },
      {
        "default": "- will be included by default for AWS CDK >= 1.111.0 < 2.0.0",
        "docs": "Install the assertions library?",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdkAssertions",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkAssertions",
        ],
        "simpleType": "boolean",
        "switch": "cdk-assertions",
      },
      {
        "default": ""^2"",
        "docs": "Version range of the AWS CDK CLI to depend on.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "cdkCliVersion",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkCliVersion",
        ],
        "simpleType": "string",
        "switch": "cdk-cli-version",
      },
      {
        "deprecated": true,
        "docs": "Which AWS CDKv1 modules this project requires.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "cdkDependencies",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkDependencies",
        ],
        "simpleType": "unknown",
        "switch": "cdk-dependencies",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "If this is enabled (default), all modules declared in \`cdkDependencies\` will be also added as normal \`dependencies\` (as well as \`peerDependencies\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdkDependenciesAsDeps",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkDependenciesAsDeps",
        ],
        "simpleType": "boolean",
        "switch": "cdk-dependencies-as-deps",
      },
      {
        "deprecated": true,
        "docs": "AWS CDK modules required for testing.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "cdkTestDependencies",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkTestDependencies",
        ],
        "simpleType": "unknown",
        "switch": "cdk-test-dependencies",
      },
      {
        "default": ""2.1.0"",
        "docs": "Minimum version of the AWS CDK to depend on.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""2.1.0"",
        "jsonLike": true,
        "name": "cdkVersion",
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkVersion",
        ],
        "simpleType": "string",
        "switch": "cdk-version",
      },
      {
        "docs": "Use pinned version instead of caret version for CDK.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdkVersionPinning",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "cdkVersionPinning",
        ],
        "simpleType": "boolean",
        "switch": "cdk-version-pinning",
      },
      {
        "default": "- no license checks are run during the build and all licenses will be accepted",
        "docs": "Configure which licenses should be deemed acceptable for use by dependencies.",
        "featured": false,
        "fqn": "projen.javascript.LicenseCheckerOptions",
        "fullType": {
          "fqn": "projen.javascript.LicenseCheckerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "checkLicenses",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "checkLicenses",
        ],
        "simpleType": "LicenseCheckerOptions",
        "switch": "check-licenses",
      },
      {
        "default": "- true, but false for subprojects",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "clobber",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "clobber",
        ],
        "simpleType": "boolean",
        "switch": "clobber",
      },
      {
        "default": "- undefined",
        "docs": "Options for npm packages using AWS CodeArtifact.",
        "featured": false,
        "fqn": "projen.javascript.CodeArtifactOptions",
        "fullType": {
          "fqn": "projen.javascript.CodeArtifactOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "codeArtifactOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "codeArtifactOptions",
        ],
        "simpleType": "CodeArtifactOptions",
        "switch": "code-artifact-options",
      },
      {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v4 A secret is required for private repos. Configured with \`@codeCovTokenSecret\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCov",
        ],
        "simpleType": "boolean",
        "switch": "code-cov",
      },
      {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCovTokenSecret",
        ],
        "simpleType": "string",
        "switch": "code-cov-token-secret",
      },
      {
        "default": "true",
        "docs": "Whether to commit the managed files by default.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "commitGenerated",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "commitGenerated",
        ],
        "simpleType": "boolean",
        "switch": "commit-generated",
      },
      {
        "default": "false",
        "docs": "Automatically run API compatibility test against the latest version published to npm after compilation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "compat",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "compat",
        ],
        "simpleType": "boolean",
        "switch": "compat",
      },
      {
        "default": "".compatignore"",
        "docs": "Name of the ignore file for API compatibility tests.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "compatIgnore",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "compatIgnore",
        ],
        "simpleType": "string",
        "switch": "compat-ignore",
      },
      {
        "default": "false",
        "docs": "Emit a compressed version of the assembly.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "compressAssembly",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "compressAssembly",
        ],
        "simpleType": "boolean",
        "switch": "compress-assembly",
      },
      {
        "default": "- for CDK 1.x the default is "3.2.27", for CDK 2.x the default is
"10.0.5".",
        "docs": "Minimum version of the \`constructs\` library to depend on.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "constructsVersion",
        "optional": true,
        "parent": "AwsCdkDepsCommonOptions",
        "path": [
          "constructsVersion",
        ],
        "simpleType": "string",
        "switch": "constructs-version",
      },
      {
        "default": "- defaults to the value of authorName or "" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightOwner",
        ],
        "simpleType": "string",
        "switch": "copyright-owner",
      },
      {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightPeriod",
        ],
        "simpleType": "string",
        "switch": "copyright-period",
      },
      {
        "default": ""main"",
        "docs": "The name of the main release branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""main"",
        "jsonLike": true,
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": [
          "defaultReleaseBranch",
        ],
        "simpleType": "string",
        "switch": "default-release-branch",
      },
      {
        "default": "false",
        "docs": "Use dependabot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabot",
        ],
        "simpleType": "boolean",
        "switch": "dependabot",
      },
      {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "featured": false,
        "fqn": "projen.github.DependabotOptions",
        "fullType": {
          "fqn": "projen.github.DependabotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabotOptions",
        ],
        "simpleType": "DependabotOptions",
        "switch": "dependabot-options",
      },
      {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "deps",
        ],
        "simpleType": "unknown",
        "switch": "deps",
      },
      {
        "default": "true",
        "docs": "Use tasks and github workflows to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "depsUpgrade",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgrade",
        ],
        "simpleType": "boolean",
        "switch": "deps-upgrade",
      },
      {
        "default": "- default options",
        "docs": "Options for \`UpgradeDependencies\`.",
        "featured": false,
        "fqn": "projen.javascript.UpgradeDependenciesOptions",
        "fullType": {
          "fqn": "projen.javascript.UpgradeDependenciesOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "depsUpgradeOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgradeOptions",
        ],
        "simpleType": "UpgradeDependenciesOptions",
        "switch": "deps-upgrade-options",
      },
      {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "description",
        ],
        "simpleType": "string",
        "switch": "description",
      },
      {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "devContainer",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "devContainer",
        ],
        "simpleType": "boolean",
        "switch": "dev-container",
      },
      {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "devDeps",
        ],
        "simpleType": "unknown",
        "switch": "dev-deps",
      },
      {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "disableTsconfig",
        ],
        "simpleType": "boolean",
        "switch": "disable-tsconfig",
      },
      {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.dev.json\` file.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "disableTsconfigDev",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "disableTsconfigDev",
        ],
        "simpleType": "boolean",
        "switch": "disable-tsconfig-dev",
      },
      {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "docgen",
        ],
        "simpleType": "boolean",
        "switch": "docgen",
      },
      {
        "default": ""API.md"",
        "docs": "File path for generated docs.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "docgenFilePath",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "docgenFilePath",
        ],
        "simpleType": "string",
        "switch": "docgen-file-path",
      },
      {
        "default": ""docs"",
        "docs": "Docs directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "docsDirectory",
        ],
        "simpleType": "string",
        "switch": "docs-directory",
      },
      {
        "deprecated": true,
        "featured": false,
        "fqn": "projen.cdk.JsiiDotNetTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiDotNetTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "dotnet",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "dotnet",
        ],
        "simpleType": "JsiiDotNetTarget",
        "switch": "dotnet",
      },
      {
        "default": "true",
        "docs": "Automatically adds an \`cloudfront.experimental.EdgeFunction\` for each \`.edge-lambda.ts\` handler in your source tree. If this is disabled, you can manually add an \`awscdk.AutoDiscover\` component to your project.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "edgeLambdaAutoDiscover",
        "optional": true,
        "parent": "AwsCdkConstructLibraryOptions",
        "path": [
          "edgeLambdaAutoDiscover",
        ],
        "simpleType": "boolean",
        "switch": "edge-lambda-auto-discover",
      },
      {
        "default": ""lib/index.js"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "entrypoint",
        ],
        "simpleType": "string",
        "switch": "entrypoint",
      },
      {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "entrypointTypes",
        ],
        "simpleType": "string",
        "switch": "entrypoint-types",
      },
      {
        "default": "true",
        "docs": "Setup eslint.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "eslint",
        ],
        "simpleType": "boolean",
        "switch": "eslint",
      },
      {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "featured": false,
        "fqn": "projen.javascript.EslintOptions",
        "fullType": {
          "fqn": "projen.javascript.EslintOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "eslintOptions",
        ],
        "simpleType": "EslintOptions",
        "switch": "eslint-options",
      },
      {
        "docs": "Accepts a list of glob patterns.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "excludeTypescript",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "excludeTypescript",
        ],
        "simpleType": "unknown",
        "switch": "exclude-typescript",
      },
      {
        "default": "false",
        "docs": "Enable experimental support for the AWS CDK integ-runner.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "experimentalIntegRunner",
        "optional": true,
        "parent": "AwsCdkConstructLibraryOptions",
        "path": [
          "experimentalIntegRunner",
        ],
        "simpleType": "boolean",
        "switch": "experimental-integ-runner",
      },
      {
        "default": "true",
        "docs": "Enable GitHub integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "github",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "github",
        ],
        "simpleType": "boolean",
        "switch": "github",
      },
      {
        "default": "- see GitHubOptions",
        "docs": "Options for GitHub integration.",
        "featured": false,
        "fqn": "projen.github.GitHubOptions",
        "fullType": {
          "fqn": "projen.github.GitHubOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "githubOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "githubOptions",
        ],
        "simpleType": "GitHubOptions",
        "switch": "github-options",
      },
      {
        "docs": "Additional entries to .gitignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "gitignore",
        ],
        "simpleType": "unknown",
        "switch": "gitignore",
      },
      {
        "docs": "Configuration options for .gitignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitIgnoreOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "git-ignore-options",
      },
      {
        "docs": "Configuration options for git.",
        "featured": false,
        "fqn": "projen.GitOptions",
        "fullType": {
          "fqn": "projen.GitOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitOptions",
        ],
        "simpleType": "GitOptions",
        "switch": "git-options",
      },
      {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "gitpod",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "gitpod",
        ],
        "simpleType": "boolean",
        "switch": "gitpod",
      },
      {
        "docs": "Package's Homepage / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "homepage",
        ],
        "simpleType": "string",
        "switch": "homepage",
      },
      {
        "default": "true",
        "docs": "Automatically discovers and creates integration tests for each \`.integ.ts\` file under your test directory.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "integrationTestAutoDiscover",
        "optional": true,
        "parent": "AwsCdkConstructLibraryOptions",
        "path": [
          "integrationTestAutoDiscover",
        ],
        "simpleType": "boolean",
        "switch": "integration-test-auto-discover",
      },
      {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jest",
        ],
        "simpleType": "boolean",
        "switch": "jest",
      },
      {
        "default": "- default options",
        "docs": "Jest options.",
        "featured": false,
        "fqn": "projen.javascript.JestOptions",
        "fullType": {
          "fqn": "projen.javascript.JestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jestOptions",
        ],
        "simpleType": "JestOptions",
        "switch": "jest-options",
      },
      {
        "default": ""latest"",
        "docs": "Version requirement of \`publib\` which is used to publish modules to npm.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "jsiiReleaseVersion",
        ],
        "simpleType": "string",
        "switch": "jsii-release-version",
      },
      {
        "default": ""~5.6.0"",
        "docs": "Version of the jsii compiler to use.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""~5.7.0"",
        "jsonLike": true,
        "name": "jsiiVersion",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "jsiiVersion",
        ],
        "simpleType": "string",
        "switch": "jsii-version",
      },
      {
        "docs": "Keywords to include in \`package.json\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "keywords",
        ],
        "simpleType": "unknown",
        "switch": "keywords",
      },
      {
        "default": "true",
        "docs": "Automatically adds an \`aws_lambda.Function\` for each \`.lambda.ts\` handler in your source tree. If this is disabled, you either need to explicitly call \`aws_lambda.Function.autoDiscover()\` or define a \`new aws_lambda.Function()\` for each handler.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "lambdaAutoDiscover",
        "optional": true,
        "parent": "AwsCdkConstructLibraryOptions",
        "path": [
          "lambdaAutoDiscover",
        ],
        "simpleType": "boolean",
        "switch": "lambda-auto-discover",
      },
      {
        "default": "true",
        "docs": "Automatically adds an \`awscdk.LambdaExtension\` for each \`.lambda-extension.ts\` entrypoint in your source tree. If this is disabled, you can manually add an \`awscdk.AutoDiscover\` component to your project.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "lambdaExtensionAutoDiscover",
        "optional": true,
        "parent": "AwsCdkConstructLibraryOptions",
        "path": [
          "lambdaExtensionAutoDiscover",
        ],
        "simpleType": "boolean",
        "switch": "lambda-extension-auto-discover",
      },
      {
        "default": "- default options",
        "docs": "Common options for all AWS Lambda functions.",
        "featured": false,
        "fqn": "projen.awscdk.LambdaFunctionCommonOptions",
        "fullType": {
          "fqn": "projen.awscdk.LambdaFunctionCommonOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "lambdaOptions",
        "optional": true,
        "parent": "AwsCdkConstructLibraryOptions",
        "path": [
          "lambdaOptions",
        ],
        "simpleType": "LambdaFunctionCommonOptions",
        "switch": "lambda-options",
      },
      {
        "default": ""lib"",
        "docs": "Typescript  artifacts output directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "libdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "libdir",
        ],
        "simpleType": "string",
        "switch": "libdir",
      },
      {
        "default": ""Apache-2.0"",
        "docs": "License's SPDX identifier.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "license",
        ],
        "simpleType": "string",
        "switch": "license",
      },
      {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "licensed",
        ],
        "simpleType": "boolean",
        "switch": "licensed",
      },
      {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "featured": false,
        "fqn": "projen.LoggerOptions",
        "fullType": {
          "fqn": "projen.LoggerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "logging",
        ],
        "simpleType": "LoggerOptions",
        "switch": "logging",
      },
      {
        "default": "- Major version is not enforced.",
        "docs": "Major version to release from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "majorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "majorVersion",
        ],
        "simpleType": "number",
        "switch": "major-version",
      },
      {
        "default": "- no maximum version is enforced",
        "docs": "The maximum node version supported by this package. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "maxNodeVersion",
        ],
        "simpleType": "string",
        "switch": "max-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Whether mergify should be enabled on this repository or not.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mergify",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergify",
        ],
        "simpleType": "boolean",
        "switch": "mergify",
      },
      {
        "default": "- default options",
        "deprecated": true,
        "docs": "Options for mergify.",
        "featured": false,
        "fqn": "projen.github.MergifyOptions",
        "fullType": {
          "fqn": "projen.github.MergifyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergifyOptions",
        ],
        "simpleType": "MergifyOptions",
        "switch": "mergify-options",
      },
      {
        "default": "- No minimum version is being enforced",
        "docs": "Minimal Major version to release.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "minMajorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "minMajorVersion",
        ],
        "simpleType": "number",
        "switch": "min-major-version",
      },
      {
        "default": "- no minimum version is enforced",
        "docs": "The minimum node version required by this package to function. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "minNodeVersion",
        ],
        "simpleType": "string",
        "switch": "min-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "mutableBuild",
        ],
        "simpleType": "boolean",
        "switch": "mutable-build",
      },
      {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$BASEDIR",
        "jsonLike": true,
        "name": "name",
        "parent": "ProjectOptions",
        "path": [
          "name",
        ],
        "simpleType": "string",
        "switch": "name",
      },
      {
        "default": "- The next version will be determined based on the commit history and project settings.",
        "docs": "A shell command to control the next version to release.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "nextVersionCommand",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "nextVersionCommand",
        ],
        "simpleType": "string",
        "switch": "next-version-command",
      },
      {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "featured": false,
        "fqn": "projen.javascript.NpmAccess",
        "fullType": {
          "fqn": "projen.javascript.NpmAccess",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmAccess",
        ],
        "simpleType": "NpmAccess",
        "switch": "npm-access",
      },
      {
        "default": ""latest"",
        "docs": "The npmDistTag to use when publishing from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmDistTag",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "npmDistTag",
        ],
        "simpleType": "string",
        "switch": "npm-dist-tag",
      },
      {
        "deprecated": true,
        "docs": "Additional entries to .npmignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignore",
        ],
        "simpleType": "unknown",
        "switch": "npmignore",
      },
      {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignoreEnabled",
        ],
        "simpleType": "boolean",
        "switch": "npmignore-enabled",
      },
      {
        "docs": "Configuration options for .npmignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "npmIgnoreOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "npm-ignore-options",
      },
      {
        "default": "- true for public packages, false otherwise",
        "docs": "Should provenance statements be generated when the package is published.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmProvenance",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmProvenance",
        ],
        "simpleType": "boolean",
        "switch": "npm-provenance",
      },
      {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistry",
        ],
        "simpleType": "string",
        "switch": "npm-registry",
      },
      {
        "default": ""https://registry.npmjs.org"",
        "docs": "The base URL of the npm package registry.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistryUrl",
        ],
        "simpleType": "string",
        "switch": "npm-registry-url",
      },
      {
        "default": ""NPM_TOKEN"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmTokenSecret",
        ],
        "simpleType": "string",
        "switch": "npm-token-secret",
      },
      {
        "default": ""."",
        "docs": "The root directory of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "outdir",
        ],
        "simpleType": "string",
        "switch": "outdir",
      },
      {
        "default": "true",
        "docs": "Defines a \`package\` task that will produce an npm tarball under the artifacts directory (e.g. \`dist\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "package",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "package",
        ],
        "simpleType": "boolean",
        "switch": "package",
      },
      {
        "default": "NodePackageManager.YARN_CLASSIC",
        "docs": "The Node Package Manager used to execute scripts.",
        "featured": false,
        "fqn": "projen.javascript.NodePackageManager",
        "fullType": {
          "fqn": "projen.javascript.NodePackageManager",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageManager",
        ],
        "simpleType": "NodePackageManager",
        "switch": "package-manager",
      },
      {
        "default": "- defaults to project name",
        "docs": "The "name" in package.json.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageName",
        ],
        "simpleType": "string",
        "switch": "package-name",
      },
      {
        "docs": "The parent project, if this project is part of a bigger project.",
        "featured": false,
        "fqn": "projen.Project",
        "fullType": {
          "fqn": "projen.Project",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "parent",
        ],
        "simpleType": "Project",
        "switch": "parent",
      },
      {
        "docs": "Options for \`peerDeps\`.",
        "featured": false,
        "fqn": "projen.javascript.PeerDependencyOptions",
        "fullType": {
          "fqn": "projen.javascript.PeerDependencyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDependencyOptions",
        ],
        "simpleType": "PeerDependencyOptions",
        "switch": "peer-dependency-options",
      },
      {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDeps",
        ],
        "simpleType": "unknown",
        "switch": "peer-deps",
      },
      {
        "default": ""9"",
        "docs": "The version of PNPM to use if using PNPM as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "pnpmVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "pnpmVersion",
        ],
        "simpleType": "string",
        "switch": "pnpm-version",
      },
      {
        "default": "[]",
        "docs": "Steps to execute after build as part of the release workflow.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "postBuildSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "postBuildSteps",
        ],
        "simpleType": "unknown",
        "switch": "post-build-steps",
      },
      {
        "default": "- normal semantic versions",
        "docs": "Bump versions from the default branch as pre-releases (e.g. "beta", "alpha", "pre").",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "prerelease",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "prerelease",
        ],
        "simpleType": "string",
        "switch": "prerelease",
      },
      {
        "default": "false",
        "docs": "Setup prettier.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "prettier",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettier",
        ],
        "simpleType": "boolean",
        "switch": "prettier",
      },
      {
        "default": "- default options",
        "docs": "Prettier options.",
        "featured": false,
        "fqn": "projen.javascript.PrettierOptions",
        "fullType": {
          "fqn": "projen.javascript.PrettierOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "prettierOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettierOptions",
        ],
        "simpleType": "PrettierOptions",
        "switch": "prettier-options",
      },
      {
        "default": "ProjectType.UNKNOWN",
        "deprecated": true,
        "docs": "Which type of project this is (library/app).",
        "featured": false,
        "fqn": "projen.ProjectType",
        "fullType": {
          "fqn": "projen.ProjectType",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "projectType",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projectType",
        ],
        "simpleType": "ProjectType",
        "switch": "project-type",
      },
      {
        "default": ""npx projen"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenCommand",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenCommand",
        ],
        "simpleType": "string",
        "switch": "projen-command",
      },
      {
        "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
        "docs": "Choose a method of providing GitHub API access for projen workflows.",
        "featured": false,
        "fqn": "projen.github.GithubCredentials",
        "fullType": {
          "fqn": "projen.github.GithubCredentials",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "projenCredentials",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenCredentials",
        ],
        "simpleType": "GithubCredentials",
        "switch": "projen-credentials",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Indicates of "projen" should be installed as a devDependency.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenDevDependency",
        ],
        "simpleType": "boolean",
        "switch": "projen-dev-dependency",
      },
      {
        "default": "- true if projenrcJson is false",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-js",
      },
      {
        "default": "false",
        "docs": "Generate (once) .projenrc.json (in JSON). Set to \`false\` in order to disable .projenrc.json generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJson",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJson",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-json",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.json.",
        "featured": false,
        "fqn": "projen.ProjenrcJsonOptions",
        "fullType": {
          "fqn": "projen.ProjenrcJsonOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsonOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJsonOptions",
        ],
        "simpleType": "ProjenrcJsonOptions",
        "switch": "projenrc-json-options",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "featured": false,
        "fqn": "projen.javascript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.javascript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-js-options",
      },
      {
        "default": "false",
        "docs": "Use TypeScript for your projenrc file (\`.projenrc.ts\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "initialValue": "true",
        "jsonLike": true,
        "name": "projenrcTs",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "projenrcTs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-ts",
      },
      {
        "docs": "Options for .projenrc.ts.",
        "featured": false,
        "fqn": "projen.typescript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.typescript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "projenrcTsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-ts-options",
      },
      {
        "default": ""PROJEN_GITHUB_TOKEN"",
        "deprecated": true,
        "docs": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenTokenSecret",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenTokenSecret",
        ],
        "simpleType": "string",
        "switch": "projen-token-secret",
      },
      {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenVersion",
        ],
        "simpleType": "string",
        "switch": "projen-version",
      },
      {
        "default": "false",
        "docs": "Instead of actually publishing to package managers, just print the publishing command.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishDryRun",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishDryRun",
        ],
        "simpleType": "boolean",
        "switch": "publish-dry-run",
      },
      {
        "default": "false",
        "docs": "Define publishing tasks that can be executed manually as well as workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishTasks",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishTasks",
        ],
        "simpleType": "boolean",
        "switch": "publish-tasks",
      },
      {
        "default": "- no publishing",
        "docs": "Publish Go bindings to a git repository.",
        "featured": false,
        "fqn": "projen.cdk.JsiiGoTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiGoTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "publishToGo",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "publishToGo",
        ],
        "simpleType": "JsiiGoTarget",
        "switch": "publish-to-go",
      },
      {
        "default": "- no publishing",
        "docs": "Publish to maven.",
        "featured": false,
        "fqn": "projen.cdk.JsiiJavaTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiJavaTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "publishToMaven",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "publishToMaven",
        ],
        "simpleType": "JsiiJavaTarget",
        "switch": "publish-to-maven",
      },
      {
        "default": "- no publishing",
        "docs": "Publish to NuGet.",
        "featured": false,
        "fqn": "projen.cdk.JsiiDotNetTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiDotNetTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "publishToNuget",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "publishToNuget",
        ],
        "simpleType": "JsiiDotNetTarget",
        "switch": "publish-to-nuget",
      },
      {
        "default": "- no publishing",
        "docs": "Publish to pypi.",
        "featured": false,
        "fqn": "projen.cdk.JsiiPythonTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiPythonTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "publishToPypi",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "publishToPypi",
        ],
        "simpleType": "JsiiPythonTarget",
        "switch": "publish-to-pypi",
      },
      {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplate",
        ],
        "simpleType": "boolean",
        "switch": "pull-request-template",
      },
      {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplateContents",
        ],
        "simpleType": "unknown",
        "switch": "pull-request-template-contents",
      },
      {
        "deprecated": true,
        "featured": false,
        "fqn": "projen.cdk.JsiiPythonTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiPythonTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "python",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "python",
        ],
        "simpleType": "JsiiPythonTarget",
        "switch": "python",
      },
      {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "featured": false,
        "fqn": "projen.SampleReadmeProps",
        "fullType": {
          "fqn": "projen.SampleReadmeProps",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "readme",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "readme",
        ],
        "simpleType": "SampleReadmeProps",
        "switch": "readme",
      },
      {
        "default": "ReleasableCommits.everyCommit()",
        "docs": "Find commits that should be considered releasable Used to decide if a release is required.",
        "featured": false,
        "fqn": "projen.ReleasableCommits",
        "fullType": {
          "fqn": "projen.ReleasableCommits",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releasableCommits",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releasableCommits",
        ],
        "simpleType": "ReleasableCommits",
        "switch": "releasable-commits",
      },
      {
        "default": "- true (false for subprojects)",
        "docs": "Add release management to this project.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "release",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "release",
        ],
        "simpleType": "boolean",
        "switch": "release",
      },
      {
        "default": "- no additional branches are used for release. you can use
\`addBranch()\` to add additional branches.",
        "docs": "Defines additional release branches.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.release.BranchOptions",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "releaseBranches",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseBranches",
        ],
        "simpleType": "unknown",
        "switch": "release-branches",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseEveryCommit",
        ],
        "simpleType": "boolean",
        "switch": "release-every-commit",
      },
      {
        "default": "false",
        "docs": "Create a github issue on every failed publishing task.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseFailureIssue",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssue",
        ],
        "simpleType": "boolean",
        "switch": "release-failure-issue",
      },
      {
        "default": ""failed-release"",
        "docs": "The label to apply to issues indicating publish failures.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseFailureIssueLabel",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssueLabel",
        ],
        "simpleType": "string",
        "switch": "release-failure-issue-label",
      },
      {
        "default": "- no scheduled releases",
        "deprecated": true,
        "docs": "CRON schedule to trigger new releases.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseSchedule",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseSchedule",
        ],
        "simpleType": "string",
        "switch": "release-schedule",
      },
      {
        "default": ""v"",
        "docs": "Automatically add the given prefix to release tags. Useful if you are releasing on multiple branches with overlapping version numbers.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseTagPrefix",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTagPrefix",
        ],
        "simpleType": "string",
        "switch": "release-tag-prefix",
      },
      {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseToNpm",
        ],
        "simpleType": "boolean",
        "switch": "release-to-npm",
      },
      {
        "default": "- Continuous releases (\`ReleaseTrigger.continuous()\`)",
        "docs": "The release trigger to use.",
        "featured": false,
        "fqn": "projen.release.ReleaseTrigger",
        "fullType": {
          "fqn": "projen.release.ReleaseTrigger",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releaseTrigger",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTrigger",
        ],
        "simpleType": "ReleaseTrigger",
        "switch": "release-trigger",
      },
      {
        "default": "- true if not a subproject",
        "deprecated": true,
        "docs": "DEPRECATED: renamed to \`release\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "release-workflow",
      },
      {
        "default": ""release"",
        "docs": "The name of the default release workflow.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseWorkflowName",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowName",
        ],
        "simpleType": "string",
        "switch": "release-workflow-name",
      },
      {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowSetupSteps",
        ],
        "simpleType": "unknown",
        "switch": "release-workflow-setup-steps",
      },
      {
        "default": "false",
        "docs": "Use renovatebot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "renovatebot",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebot",
        ],
        "simpleType": "boolean",
        "switch": "renovatebot",
      },
      {
        "default": "- default options",
        "docs": "Options for renovatebot.",
        "featured": false,
        "fqn": "projen.RenovatebotOptions",
        "fullType": {
          "fqn": "projen.RenovatebotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "renovatebotOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebotOptions",
        ],
        "simpleType": "RenovatebotOptions",
        "switch": "renovatebot-options",
      },
      {
        "docs": "The repository is the location where the actual code for your package lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repository",
        ],
        "simpleType": "string",
        "switch": "repository",
      },
      {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repositoryDirectory",
        ],
        "simpleType": "string",
        "switch": "repository-directory",
      },
      {
        "default": "$GIT_REMOTE",
        "docs": "Git repository URL.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$GIT_REMOTE",
        "jsonLike": true,
        "name": "repositoryUrl",
        "parent": "JsiiProjectOptions",
        "path": [
          "repositoryUrl",
        ],
        "simpleType": "string",
        "switch": "repository-url",
      },
      {
        "default": ""."",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "rootdir",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "rootdir",
        ],
        "simpleType": "string",
        "switch": "rootdir",
      },
      {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "sampleCode",
        ],
        "simpleType": "boolean",
        "switch": "sample-code",
      },
      {
        "default": "- fetch all scoped packages from the public npm registry",
        "docs": "Options for privately hosted scoped packages.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.javascript.ScopedPackagesOptions",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "scopedPackagesOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scopedPackagesOptions",
        ],
        "simpleType": "unknown",
        "switch": "scoped-packages-options",
      },
      {
        "default": "{}",
        "deprecated": true,
        "docs": "npm scripts to include.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scripts",
        ],
        "simpleType": "unknown",
        "switch": "scripts",
      },
      {
        "default": ""src"",
        "docs": "Typescript sources directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "srcdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "srcdir",
        ],
        "simpleType": "string",
        "switch": "srcdir",
      },
      {
        "docs": "Package's Stability.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "stability",
        ],
        "simpleType": "string",
        "switch": "stability",
      },
      {
        "default": "false",
        "docs": "Auto-close of stale issues and pull request.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "stale",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "stale",
        ],
        "simpleType": "boolean",
        "switch": "stale",
      },
      {
        "default": "- see defaults in \`StaleOptions\`",
        "docs": "Auto-close stale issues and pull requests.",
        "featured": false,
        "fqn": "projen.github.StaleOptions",
        "fullType": {
          "fqn": "projen.github.StaleOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "staleOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "staleOptions",
        ],
        "simpleType": "StaleOptions",
        "switch": "stale-options",
      },
      {
        "default": ""test"",
        "docs": "Jest tests directory. Tests files should be named \`xxx.test.ts\`.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "testdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "testdir",
        ],
        "simpleType": "string",
        "switch": "testdir",
      },
      {
        "default": "- default options",
        "docs": "Custom TSConfig.",
        "featured": false,
        "fqn": "projen.javascript.TypescriptConfigOptions",
        "fullType": {
          "fqn": "projen.javascript.TypescriptConfigOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfig",
        ],
        "simpleType": "TypescriptConfigOptions",
        "switch": "tsconfig",
      },
      {
        "default": "- use the production tsconfig options",
        "docs": "Custom tsconfig options for the development tsconfig.json file (used for testing).",
        "featured": false,
        "fqn": "projen.javascript.TypescriptConfigOptions",
        "fullType": {
          "fqn": "projen.javascript.TypescriptConfigOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsconfigDev",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfigDev",
        ],
        "simpleType": "TypescriptConfigOptions",
        "switch": "tsconfig-dev",
      },
      {
        "default": ""tsconfig.dev.json"",
        "docs": "The name of the development tsconfig.json file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "tsconfigDevFile",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfigDevFile",
        ],
        "simpleType": "string",
        "switch": "tsconfig-dev-file",
      },
      {
        "docs": "Options for ts-jest.",
        "featured": false,
        "fqn": "projen.typescript.TsJestOptions",
        "fullType": {
          "fqn": "projen.typescript.TsJestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsJestOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsJestOptions",
        ],
        "simpleType": "TsJestOptions",
        "switch": "ts-jest-options",
      },
      {
        "default": ""latest"",
        "docs": "TypeScript version to use.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "typescriptVersion",
        ],
        "simpleType": "string",
        "switch": "typescript-version",
      },
      {
        "default": "- standard configuration applicable for GitHub repositories",
        "docs": "Custom configuration used when creating changelog with commit-and-tag-version package.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "any",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "versionrcOptions",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "versionrcOptions",
        ],
        "simpleType": "unknown",
        "switch": "versionrc-options",
      },
      {
        "default": "true",
        "docs": "Enable VSCode integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "vscode",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "vscode",
        ],
        "simpleType": "boolean",
        "switch": "vscode",
      },
      {
        "default": ""yarn install --frozen-lockfile && yarn projen"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowBootstrapSteps",
        ],
        "simpleType": "unknown",
        "switch": "workflow-bootstrap-steps",
      },
      {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowContainerImage",
        ],
        "simpleType": "string",
        "switch": "workflow-container-image",
      },
      {
        "default": "- GitHub Actions",
        "docs": "The git identity to use in workflows.",
        "featured": false,
        "fqn": "projen.github.GitIdentity",
        "fullType": {
          "fqn": "projen.github.GitIdentity",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowGitIdentity",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowGitIdentity",
        ],
        "simpleType": "GitIdentity",
        "switch": "workflow-git-identity",
      },
      {
        "default": "- \`minNodeVersion\` if set, otherwise \`lts/*\`.",
        "docs": "The node version used in GitHub Actions workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowNodeVersion",
        ],
        "simpleType": "string",
        "switch": "workflow-node-version",
      },
      {
        "default": "false",
        "docs": "Enable Node.js package cache in GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "workflowPackageCache",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowPackageCache",
        ],
        "simpleType": "boolean",
        "switch": "workflow-package-cache",
      },
      {
        "default": "["ubuntu-latest"]",
        "docs": "Github Runner selection labels.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowRunsOn",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOn",
        ],
        "simpleType": "unknown",
        "switch": "workflow-runs-on",
      },
      {
        "docs": "Github Runner Group selection options.",
        "featured": false,
        "fqn": "projen.GroupRunnerOptions",
        "fullType": {
          "fqn": "projen.GroupRunnerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowRunsOnGroup",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOnGroup",
        ],
        "simpleType": "GroupRunnerOptions",
        "switch": "workflow-runs-on-group",
      },
      {
        "default": "- Yarn Berry v4 with all default options",
        "docs": "Options for Yarn Berry.",
        "featured": false,
        "fqn": "projen.javascript.YarnBerryOptions",
        "fullType": {
          "fqn": "projen.javascript.YarnBerryOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "yarnBerryOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "yarnBerryOptions",
        ],
        "simpleType": "YarnBerryOptions",
        "switch": "yarn-berry-options",
      },
    ],
    "pjid": "awscdk-construct",
    "typename": "awscdk.AwsCdkConstructLibrary",
  },
  {
    "docs": "CDK8s app in Python.",
    "docsurl": "https://projen.io/docs/api/cdk8s#cdk8spythonapp-",
    "fqn": "projen.cdk8s.Cdk8sPythonApp",
    "moduleName": "projen",
    "options": [
      {
        "default": ""app.py"",
        "docs": "The CDK8s app's entrypoint.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "appEntrypoint",
        "optional": true,
        "parent": "Cdk8sPythonOptions",
        "path": [
          "appEntrypoint",
        ],
        "simpleType": "string",
        "switch": "app-entrypoint",
      },
      {
        "default": "$GIT_USER_EMAIL",
        "docs": "Author's e-mail.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$GIT_USER_EMAIL",
        "jsonLike": true,
        "name": "authorEmail",
        "parent": "PythonPackagingOptions",
        "path": [
          "authorEmail",
        ],
        "simpleType": "string",
        "switch": "author-email",
      },
      {
        "default": "$GIT_USER_NAME",
        "docs": "Author's name.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$GIT_USER_NAME",
        "jsonLike": true,
        "name": "authorName",
        "parent": "PythonPackagingOptions",
        "path": [
          "authorName",
        ],
        "simpleType": "string",
        "switch": "author-name",
      },
      {
        "default": "- auto approve is disabled",
        "docs": "Enable and configure the 'auto approve' workflow.",
        "featured": false,
        "fqn": "projen.github.AutoApproveOptions",
        "fullType": {
          "fqn": "projen.github.AutoApproveOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoApproveOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoApproveOptions",
        ],
        "simpleType": "AutoApproveOptions",
        "switch": "auto-approve-options",
      },
      {
        "default": "true",
        "docs": "Enable automatic merging on GitHub.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoMerge",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMerge",
        ],
        "simpleType": "boolean",
        "switch": "auto-merge",
      },
      {
        "default": "- see defaults in \`AutoMergeOptions\`",
        "docs": "Configure options for automatic merging on GitHub.",
        "featured": false,
        "fqn": "projen.github.AutoMergeOptions",
        "fullType": {
          "fqn": "projen.github.AutoMergeOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoMergeOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMergeOptions",
        ],
        "simpleType": "AutoMergeOptions",
        "switch": "auto-merge-options",
      },
      {
        "default": ""2.0.28"",
        "docs": "Minimum version of the cdk8s-cli to depend on.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "cdk8sCliVersion",
        "optional": true,
        "parent": "Cdk8sDepsCommonOptions",
        "path": [
          "cdk8sCliVersion",
        ],
        "simpleType": "string",
        "switch": "cdk8s-cli-version",
      },
      {
        "default": "false",
        "docs": "Use pinned version instead of caret version for cdk8s-cli.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdk8sCliVersionPinning",
        "optional": true,
        "parent": "Cdk8sDepsCommonOptions",
        "path": [
          "cdk8sCliVersionPinning",
        ],
        "simpleType": "boolean",
        "switch": "cdk8s-cli-version-pinning",
      },
      {
        "default": "- no additional specs imported",
        "docs": "Import additional specs.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "cdk8sImports",
        "optional": true,
        "parent": "Cdk8sPythonOptions",
        "path": [
          "cdk8sImports",
        ],
        "simpleType": "unknown",
        "switch": "cdk8s-imports",
      },
      {
        "default": "true",
        "docs": "Include cdk8s-plus.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdk8sPlus",
        "optional": true,
        "parent": "Cdk8sDepsCommonOptions",
        "path": [
          "cdk8sPlus",
        ],
        "simpleType": "boolean",
        "switch": "cdk8s-plus",
      },
      {
        "default": ""2.0.0-rc.26"",
        "docs": "Minimum version of the cdk8s-plus-XX to depend on.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "cdk8sPlusVersion",
        "optional": true,
        "parent": "Cdk8sDepsCommonOptions",
        "path": [
          "cdk8sPlusVersion",
        ],
        "simpleType": "string",
        "switch": "cdk8s-plus-version",
      },
      {
        "default": "false",
        "docs": "Use pinned version instead of caret version for cdk8s-plus-17.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdk8sPlusVersionPinning",
        "optional": true,
        "parent": "Cdk8sDepsCommonOptions",
        "path": [
          "cdk8sPlusVersionPinning",
        ],
        "simpleType": "boolean",
        "switch": "cdk8s-plus-version-pinning",
      },
      {
        "default": ""2.3.33"",
        "docs": "Minimum version of the cdk8s to depend on.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""2.3.33"",
        "jsonLike": true,
        "name": "cdk8sVersion",
        "parent": "Cdk8sDepsCommonOptions",
        "path": [
          "cdk8sVersion",
        ],
        "simpleType": "string",
        "switch": "cdk8s-version",
      },
      {
        "default": "false",
        "docs": "Use pinned version instead of caret version for cdk8s.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdk8sVersionPinning",
        "optional": true,
        "parent": "Cdk8sDepsCommonOptions",
        "path": [
          "cdk8sVersionPinning",
        ],
        "simpleType": "boolean",
        "switch": "cdk8s-version-pinning",
      },
      {
        "docs": "A list of PyPI trove classifiers that describe the project.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "classifiers",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": [
          "classifiers",
        ],
        "simpleType": "unknown",
        "switch": "classifiers",
      },
      {
        "default": "- true, but false for subprojects",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "clobber",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "clobber",
        ],
        "simpleType": "boolean",
        "switch": "clobber",
      },
      {
        "default": "true",
        "docs": "Whether to commit the managed files by default.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "commitGenerated",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "commitGenerated",
        ],
        "simpleType": "boolean",
        "switch": "commit-generated",
      },
      {
        "default": ""10.1.42"",
        "docs": "Minimum version of the \`constructs\` library to depend on.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "constructsVersion",
        "optional": true,
        "parent": "Cdk8sDepsCommonOptions",
        "path": [
          "constructsVersion",
        ],
        "simpleType": "string",
        "switch": "constructs-version",
      },
      {
        "default": "false",
        "docs": "Use pinned version instead of caret version for constructs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "constructsVersionPinning",
        "optional": true,
        "parent": "Cdk8sDepsCommonOptions",
        "path": [
          "constructsVersionPinning",
        ],
        "simpleType": "boolean",
        "switch": "constructs-version-pinning",
      },
      {
        "default": "[]",
        "docs": "List of runtime dependencies for this project.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "deps",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "deps",
        ],
        "simpleType": "unknown",
        "switch": "deps",
      },
      {
        "docs": "A short description of the package.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "description",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": [
          "description",
        ],
        "simpleType": "string",
        "switch": "description",
      },
      {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "devContainer",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "devContainer",
        ],
        "simpleType": "boolean",
        "switch": "dev-container",
      },
      {
        "default": "[]",
        "docs": "List of dev dependencies for this project.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "devDeps",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "devDeps",
        ],
        "simpleType": "unknown",
        "switch": "dev-deps",
      },
      {
        "default": "true",
        "docs": "Enable GitHub integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "github",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "github",
        ],
        "simpleType": "boolean",
        "switch": "github",
      },
      {
        "default": "- see GitHubOptions",
        "docs": "Options for GitHub integration.",
        "featured": false,
        "fqn": "projen.github.GitHubOptions",
        "fullType": {
          "fqn": "projen.github.GitHubOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "githubOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "githubOptions",
        ],
        "simpleType": "GitHubOptions",
        "switch": "github-options",
      },
      {
        "docs": "Configuration options for .gitignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitIgnoreOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "git-ignore-options",
      },
      {
        "docs": "Configuration options for git.",
        "featured": false,
        "fqn": "projen.GitOptions",
        "fullType": {
          "fqn": "projen.GitOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitOptions",
        ],
        "simpleType": "GitOptions",
        "switch": "git-options",
      },
      {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "gitpod",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "gitpod",
        ],
        "simpleType": "boolean",
        "switch": "gitpod",
      },
      {
        "docs": "A URL to the website of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "homepage",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": [
          "homepage",
        ],
        "simpleType": "string",
        "switch": "homepage",
      },
      {
        "default": "22",
        "docs": "The cdk8s-plus library depends of Kubernetes minor version For example, cdk8s-plus-22 targets kubernetes version 1.22.0 cdk8s-plus-21 targets kubernetes version 1.21.0.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "k8sMinorVersion",
        "optional": true,
        "parent": "Cdk8sDepsCommonOptions",
        "path": [
          "k8sMinorVersion",
        ],
        "simpleType": "number",
        "switch": "k8s-minor-version",
      },
      {
        "default": "- Use the cdk8s default",
        "docs": "Import a specific Kubernetes spec version.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "k8sSpecVersion",
        "optional": true,
        "parent": "Cdk8sPythonOptions",
        "path": [
          "k8sSpecVersion",
        ],
        "simpleType": "string",
        "switch": "k8s-spec-version",
      },
      {
        "docs": "License of this package as an SPDX identifier.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "license",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": [
          "license",
        ],
        "simpleType": "string",
        "switch": "license",
      },
      {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "featured": false,
        "fqn": "projen.LoggerOptions",
        "fullType": {
          "fqn": "projen.LoggerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "logging",
        ],
        "simpleType": "LoggerOptions",
        "switch": "logging",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Whether mergify should be enabled on this repository or not.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mergify",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergify",
        ],
        "simpleType": "boolean",
        "switch": "mergify",
      },
      {
        "default": "- default options",
        "deprecated": true,
        "docs": "Options for mergify.",
        "featured": false,
        "fqn": "projen.github.MergifyOptions",
        "fullType": {
          "fqn": "projen.github.MergifyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergifyOptions",
        ],
        "simpleType": "MergifyOptions",
        "switch": "mergify-options",
      },
      {
        "default": "$PYTHON_MODULE_NAME",
        "docs": "Name of the python package as used in imports and filenames.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$PYTHON_MODULE_NAME",
        "jsonLike": true,
        "name": "moduleName",
        "parent": "PythonProjectOptions",
        "path": [
          "moduleName",
        ],
        "simpleType": "string",
        "switch": "module-name",
      },
      {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$BASEDIR",
        "jsonLike": true,
        "name": "name",
        "parent": "ProjectOptions",
        "path": [
          "name",
        ],
        "simpleType": "string",
        "switch": "name",
      },
      {
        "default": ""."",
        "docs": "The root directory of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "outdir",
        ],
        "simpleType": "string",
        "switch": "outdir",
      },
      {
        "docs": "Package name.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "packageName",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": [
          "packageName",
        ],
        "simpleType": "string",
        "switch": "package-name",
      },
      {
        "docs": "The parent project, if this project is part of a bigger project.",
        "featured": false,
        "fqn": "projen.Project",
        "fullType": {
          "fqn": "projen.Project",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "parent",
        ],
        "simpleType": "Project",
        "switch": "parent",
      },
      {
        "default": "- true, unless poetry is true, then false",
        "docs": "Use pip with a requirements.txt file to track project dependencies.",
        "featured": true,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "pip",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "pip",
        ],
        "simpleType": "boolean",
        "switch": "pip",
      },
      {
        "default": "false",
        "docs": "Use poetry to manage your project dependencies, virtual environment, and (optional) packaging/publishing.",
        "featured": true,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "poetry",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "poetry",
        ],
        "simpleType": "boolean",
        "switch": "poetry",
      },
      {
        "docs": "Additional options to set for poetry if using poetry.",
        "featured": false,
        "fqn": "projen.python.PoetryPyprojectOptionsWithoutDeps",
        "fullType": {
          "fqn": "projen.python.PoetryPyprojectOptionsWithoutDeps",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "poetryOptions",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": [
          "poetryOptions",
        ],
        "simpleType": "PoetryPyprojectOptionsWithoutDeps",
        "switch": "poetry-options",
      },
      {
        "default": "ProjectType.UNKNOWN",
        "deprecated": true,
        "docs": "Which type of project this is (library/app).",
        "featured": false,
        "fqn": "projen.ProjectType",
        "fullType": {
          "fqn": "projen.ProjectType",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "projectType",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projectType",
        ],
        "simpleType": "ProjectType",
        "switch": "project-type",
      },
      {
        "default": ""npx projen"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenCommand",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenCommand",
        ],
        "simpleType": "string",
        "switch": "projen-command",
      },
      {
        "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
        "docs": "Choose a method of providing GitHub API access for projen workflows.",
        "featured": false,
        "fqn": "projen.github.GithubCredentials",
        "fullType": {
          "fqn": "projen.github.GithubCredentials",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "projenCredentials",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenCredentials",
        ],
        "simpleType": "GithubCredentials",
        "switch": "projen-credentials",
      },
      {
        "default": "false",
        "docs": "Use projenrc in javascript.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJs",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "projenrcJs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-js",
      },
      {
        "default": "false",
        "docs": "Generate (once) .projenrc.json (in JSON). Set to \`false\` in order to disable .projenrc.json generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJson",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJson",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-json",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.json.",
        "featured": false,
        "fqn": "projen.ProjenrcJsonOptions",
        "fullType": {
          "fqn": "projen.ProjenrcJsonOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsonOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJsonOptions",
        ],
        "simpleType": "ProjenrcJsonOptions",
        "switch": "projenrc-json-options",
      },
      {
        "default": "- default options",
        "docs": "Options related to projenrc in JavaScript.",
        "featured": false,
        "fqn": "projen.javascript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.javascript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "projenrcJsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-js-options",
      },
      {
        "default": "true",
        "docs": "Use projenrc in Python.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcPython",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "projenrcPython",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-python",
      },
      {
        "default": "- default options",
        "docs": "Options related to projenrc in python.",
        "featured": false,
        "fqn": "projen.python.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.python.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcPythonOptions",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "projenrcPythonOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-python-options",
      },
      {
        "default": "false",
        "docs": "Use projenrc in TypeScript.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcTs",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "projenrcTs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-ts",
      },
      {
        "default": "- default options",
        "docs": "Options related to projenrc in TypeScript.",
        "featured": false,
        "fqn": "projen.typescript.ProjenrcTsOptions",
        "fullType": {
          "fqn": "projen.typescript.ProjenrcTsOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "projenrcTsOptions",
        ],
        "simpleType": "ProjenrcTsOptions",
        "switch": "projenrc-ts-options",
      },
      {
        "default": ""PROJEN_GITHUB_TOKEN"",
        "deprecated": true,
        "docs": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenTokenSecret",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenTokenSecret",
        ],
        "simpleType": "string",
        "switch": "projen-token-secret",
      },
      {
        "default": "true",
        "docs": "Include pytest tests.",
        "featured": true,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "pytest",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "pytest",
        ],
        "simpleType": "boolean",
        "switch": "pytest",
      },
      {
        "default": "- defaults",
        "docs": "pytest options.",
        "featured": false,
        "fqn": "projen.python.PytestOptions",
        "fullType": {
          "fqn": "projen.python.PytestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "pytestOptions",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "pytestOptions",
        ],
        "simpleType": "PytestOptions",
        "switch": "pytest-options",
      },
      {
        "default": ""python"",
        "docs": "Path to the python executable to use.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "pythonExec",
        "optional": true,
        "parent": "PythonExecutableOptions",
        "path": [
          "pythonExec",
        ],
        "simpleType": "string",
        "switch": "python-exec",
      },
      {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "featured": false,
        "fqn": "projen.SampleReadmeProps",
        "fullType": {
          "fqn": "projen.SampleReadmeProps",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "readme",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "readme",
        ],
        "simpleType": "SampleReadmeProps",
        "switch": "readme",
      },
      {
        "default": "false",
        "docs": "Use renovatebot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "renovatebot",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebot",
        ],
        "simpleType": "boolean",
        "switch": "renovatebot",
      },
      {
        "default": "- default options",
        "docs": "Options for renovatebot.",
        "featured": false,
        "fqn": "projen.RenovatebotOptions",
        "fullType": {
          "fqn": "projen.RenovatebotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "renovatebotOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebotOptions",
        ],
        "simpleType": "RenovatebotOptions",
        "switch": "renovatebot-options",
      },
      {
        "default": "true",
        "docs": "Include sample code and test if the relevant directories don't exist.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "sample",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "sample",
        ],
        "simpleType": "boolean",
        "switch": "sample",
      },
      {
        "default": ""tests"",
        "docs": "Location of sample tests.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "sampleTestdir",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "sampleTestdir",
        ],
        "simpleType": "string",
        "switch": "sample-testdir",
      },
      {
        "docs": "Additional fields to pass in the setup() function if using setuptools.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "any",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "setupConfig",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": [
          "setupConfig",
        ],
        "simpleType": "unknown",
        "switch": "setup-config",
      },
      {
        "default": "- true, unless poetry is true, then false",
        "docs": "Use setuptools with a setup.py script for packaging and publishing.",
        "featured": true,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "setuptools",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "setuptools",
        ],
        "simpleType": "boolean",
        "switch": "setuptools",
      },
      {
        "default": "false",
        "docs": "Auto-close of stale issues and pull request.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "stale",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "stale",
        ],
        "simpleType": "boolean",
        "switch": "stale",
      },
      {
        "default": "- see defaults in \`StaleOptions\`",
        "docs": "Auto-close stale issues and pull requests.",
        "featured": false,
        "fqn": "projen.github.StaleOptions",
        "fullType": {
          "fqn": "projen.github.StaleOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "staleOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "staleOptions",
        ],
        "simpleType": "StaleOptions",
        "switch": "stale-options",
      },
      {
        "default": "- true, unless poetry is true, then false",
        "docs": "Use venv to manage a virtual environment for installing dependencies inside.",
        "featured": true,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "venv",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "venv",
        ],
        "simpleType": "boolean",
        "switch": "venv",
      },
      {
        "default": "- defaults",
        "docs": "Venv options.",
        "featured": false,
        "fqn": "projen.python.VenvOptions",
        "fullType": {
          "fqn": "projen.python.VenvOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "venvOptions",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "venvOptions",
        ],
        "simpleType": "VenvOptions",
        "switch": "venv-options",
      },
      {
        "default": ""0.1.0"",
        "docs": "Version of the package.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""0.1.0"",
        "jsonLike": true,
        "name": "version",
        "parent": "PythonPackagingOptions",
        "path": [
          "version",
        ],
        "simpleType": "string",
        "switch": "version",
      },
      {
        "default": "true",
        "docs": "Enable VSCode integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "vscode",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "vscode",
        ],
        "simpleType": "boolean",
        "switch": "vscode",
      },
    ],
    "pjid": "cdk8s-app-py",
    "typename": "cdk8s.Cdk8sPythonApp",
  },
  {
    "docs": "CDK8s app in TypeScript.",
    "docsurl": "https://projen.io/docs/api/cdk8s#cdk8stypescriptapp-",
    "fqn": "projen.cdk8s.Cdk8sTypeScriptApp",
    "moduleName": "projen",
    "options": [
      {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "allowLibraryDependencies",
        ],
        "simpleType": "boolean",
        "switch": "allow-library-dependencies",
      },
      {
        "default": ""main.ts"",
        "docs": "The CDK8s app's entrypoint (relative to the source directory, which is "src" by default).",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "appEntrypoint",
        "optional": true,
        "parent": "Cdk8sTypeScriptAppOptions",
        "path": [
          "appEntrypoint",
        ],
        "simpleType": "string",
        "switch": "app-entrypoint",
      },
      {
        "default": ""dist"",
        "docs": "A directory which will contain build artifacts.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "artifactsDirectory",
        ],
        "simpleType": "string",
        "switch": "artifacts-directory",
      },
      {
        "docs": "Author's e-mail.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorEmail",
        ],
        "simpleType": "string",
        "switch": "author-email",
      },
      {
        "docs": "Author's name.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorName",
        ],
        "simpleType": "string",
        "switch": "author-name",
      },
      {
        "docs": "Is the author an organization.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorOrganization",
        ],
        "simpleType": "boolean",
        "switch": "author-organization",
      },
      {
        "docs": "Author's URL / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorUrl",
        ],
        "simpleType": "string",
        "switch": "author-url",
      },
      {
        "default": "- auto approve is disabled",
        "docs": "Enable and configure the 'auto approve' workflow.",
        "featured": false,
        "fqn": "projen.github.AutoApproveOptions",
        "fullType": {
          "fqn": "projen.github.AutoApproveOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoApproveOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoApproveOptions",
        ],
        "simpleType": "AutoApproveOptions",
        "switch": "auto-approve-options",
      },
      {
        "default": "- true",
        "docs": "Automatically approve deps upgrade PRs, allowing them to be merged by mergify (if configued).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoApproveUpgrades",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "autoApproveUpgrades",
        ],
        "simpleType": "boolean",
        "switch": "auto-approve-upgrades",
      },
      {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "autoDetectBin",
        ],
        "simpleType": "boolean",
        "switch": "auto-detect-bin",
      },
      {
        "default": "true",
        "docs": "Enable automatic merging on GitHub.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoMerge",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMerge",
        ],
        "simpleType": "boolean",
        "switch": "auto-merge",
      },
      {
        "default": "- see defaults in \`AutoMergeOptions\`",
        "docs": "Configure options for automatic merging on GitHub.",
        "featured": false,
        "fqn": "projen.github.AutoMergeOptions",
        "fullType": {
          "fqn": "projen.github.AutoMergeOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoMergeOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMergeOptions",
        ],
        "simpleType": "AutoMergeOptions",
        "switch": "auto-merge-options",
      },
      {
        "docs": "Binary programs vended with your module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bin",
        ],
        "simpleType": "unknown",
        "switch": "bin",
      },
      {
        "docs": "The email address to which issues should be reported.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsEmail",
        ],
        "simpleType": "string",
        "switch": "bugs-email",
      },
      {
        "docs": "The url to your project's issue tracker.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsUrl",
        ],
        "simpleType": "string",
        "switch": "bugs-url",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "build-workflow",
      },
      {
        "docs": "Options for PR build workflow.",
        "featured": false,
        "fqn": "projen.javascript.BuildWorkflowOptions",
        "fullType": {
          "fqn": "projen.javascript.BuildWorkflowOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowOptions",
        ],
        "simpleType": "BuildWorkflowOptions",
        "switch": "build-workflow-options",
      },
      {
        "default": ""{ pullRequest: {}, workflowDispatch: {} }"",
        "deprecated": true,
        "docs": "Build workflow triggers.",
        "featured": false,
        "fqn": "projen.github.workflows.Triggers",
        "fullType": {
          "fqn": "projen.github.workflows.Triggers",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowTriggers",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowTriggers",
        ],
        "simpleType": "Triggers",
        "switch": "build-workflow-triggers",
      },
      {
        "default": "- A recent version of "commit-and-tag-version"",
        "docs": "The \`commit-and-tag-version\` compatible package used to bump the package version, as a dependency string.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bumpPackage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "bumpPackage",
        ],
        "simpleType": "string",
        "switch": "bump-package",
      },
      {
        "docs": "List of dependencies to bundle into this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bundledDeps",
        ],
        "simpleType": "unknown",
        "switch": "bundled-deps",
      },
      {
        "docs": "Options for \`Bundler\`.",
        "featured": false,
        "fqn": "projen.javascript.BundlerOptions",
        "fullType": {
          "fqn": "projen.javascript.BundlerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "bundlerOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "bundlerOptions",
        ],
        "simpleType": "BundlerOptions",
        "switch": "bundler-options",
      },
      {
        "default": ""latest"",
        "docs": "The version of Bun to use if using Bun as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bunVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bunVersion",
        ],
        "simpleType": "string",
        "switch": "bun-version",
      },
      {
        "default": ""2.0.28"",
        "docs": "Minimum version of the cdk8s-cli to depend on.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "cdk8sCliVersion",
        "optional": true,
        "parent": "Cdk8sDepsCommonOptions",
        "path": [
          "cdk8sCliVersion",
        ],
        "simpleType": "string",
        "switch": "cdk8s-cli-version",
      },
      {
        "default": "false",
        "docs": "Use pinned version instead of caret version for cdk8s-cli.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdk8sCliVersionPinning",
        "optional": true,
        "parent": "Cdk8sDepsCommonOptions",
        "path": [
          "cdk8sCliVersionPinning",
        ],
        "simpleType": "boolean",
        "switch": "cdk8s-cli-version-pinning",
      },
      {
        "default": "- no additional specs imported",
        "docs": "Import additional specs.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "cdk8sImports",
        "optional": true,
        "parent": "Cdk8sTypeScriptAppOptions",
        "path": [
          "cdk8sImports",
        ],
        "simpleType": "unknown",
        "switch": "cdk8s-imports",
      },
      {
        "default": "true",
        "docs": "Include cdk8s-plus.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdk8sPlus",
        "optional": true,
        "parent": "Cdk8sDepsCommonOptions",
        "path": [
          "cdk8sPlus",
        ],
        "simpleType": "boolean",
        "switch": "cdk8s-plus",
      },
      {
        "default": ""2.0.0-rc.26"",
        "docs": "Minimum version of the cdk8s-plus-XX to depend on.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "cdk8sPlusVersion",
        "optional": true,
        "parent": "Cdk8sDepsCommonOptions",
        "path": [
          "cdk8sPlusVersion",
        ],
        "simpleType": "string",
        "switch": "cdk8s-plus-version",
      },
      {
        "default": "false",
        "docs": "Use pinned version instead of caret version for cdk8s-plus-17.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdk8sPlusVersionPinning",
        "optional": true,
        "parent": "Cdk8sDepsCommonOptions",
        "path": [
          "cdk8sPlusVersionPinning",
        ],
        "simpleType": "boolean",
        "switch": "cdk8s-plus-version-pinning",
      },
      {
        "default": ""2.3.33"",
        "docs": "Minimum version of the cdk8s to depend on.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""2.3.33"",
        "jsonLike": true,
        "name": "cdk8sVersion",
        "parent": "Cdk8sDepsCommonOptions",
        "path": [
          "cdk8sVersion",
        ],
        "simpleType": "string",
        "switch": "cdk8s-version",
      },
      {
        "default": "false",
        "docs": "Use pinned version instead of caret version for cdk8s.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdk8sVersionPinning",
        "optional": true,
        "parent": "Cdk8sDepsCommonOptions",
        "path": [
          "cdk8sVersionPinning",
        ],
        "simpleType": "boolean",
        "switch": "cdk8s-version-pinning",
      },
      {
        "default": "- no license checks are run during the build and all licenses will be accepted",
        "docs": "Configure which licenses should be deemed acceptable for use by dependencies.",
        "featured": false,
        "fqn": "projen.javascript.LicenseCheckerOptions",
        "fullType": {
          "fqn": "projen.javascript.LicenseCheckerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "checkLicenses",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "checkLicenses",
        ],
        "simpleType": "LicenseCheckerOptions",
        "switch": "check-licenses",
      },
      {
        "default": "- true, but false for subprojects",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "clobber",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "clobber",
        ],
        "simpleType": "boolean",
        "switch": "clobber",
      },
      {
        "default": "- undefined",
        "docs": "Options for npm packages using AWS CodeArtifact.",
        "featured": false,
        "fqn": "projen.javascript.CodeArtifactOptions",
        "fullType": {
          "fqn": "projen.javascript.CodeArtifactOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "codeArtifactOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "codeArtifactOptions",
        ],
        "simpleType": "CodeArtifactOptions",
        "switch": "code-artifact-options",
      },
      {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v4 A secret is required for private repos. Configured with \`@codeCovTokenSecret\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCov",
        ],
        "simpleType": "boolean",
        "switch": "code-cov",
      },
      {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCovTokenSecret",
        ],
        "simpleType": "string",
        "switch": "code-cov-token-secret",
      },
      {
        "default": "true",
        "docs": "Whether to commit the managed files by default.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "commitGenerated",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "commitGenerated",
        ],
        "simpleType": "boolean",
        "switch": "commit-generated",
      },
      {
        "default": ""10.1.42"",
        "docs": "Minimum version of the \`constructs\` library to depend on.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "constructsVersion",
        "optional": true,
        "parent": "Cdk8sDepsCommonOptions",
        "path": [
          "constructsVersion",
        ],
        "simpleType": "string",
        "switch": "constructs-version",
      },
      {
        "default": "false",
        "docs": "Use pinned version instead of caret version for constructs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "constructsVersionPinning",
        "optional": true,
        "parent": "Cdk8sDepsCommonOptions",
        "path": [
          "constructsVersionPinning",
        ],
        "simpleType": "boolean",
        "switch": "constructs-version-pinning",
      },
      {
        "default": "- defaults to the value of authorName or "" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightOwner",
        ],
        "simpleType": "string",
        "switch": "copyright-owner",
      },
      {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightPeriod",
        ],
        "simpleType": "string",
        "switch": "copyright-period",
      },
      {
        "default": ""main"",
        "docs": "The name of the main release branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""main"",
        "jsonLike": true,
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": [
          "defaultReleaseBranch",
        ],
        "simpleType": "string",
        "switch": "default-release-branch",
      },
      {
        "default": "false",
        "docs": "Use dependabot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabot",
        ],
        "simpleType": "boolean",
        "switch": "dependabot",
      },
      {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "featured": false,
        "fqn": "projen.github.DependabotOptions",
        "fullType": {
          "fqn": "projen.github.DependabotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabotOptions",
        ],
        "simpleType": "DependabotOptions",
        "switch": "dependabot-options",
      },
      {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "deps",
        ],
        "simpleType": "unknown",
        "switch": "deps",
      },
      {
        "default": "true",
        "docs": "Use tasks and github workflows to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "depsUpgrade",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgrade",
        ],
        "simpleType": "boolean",
        "switch": "deps-upgrade",
      },
      {
        "default": "- default options",
        "docs": "Options for \`UpgradeDependencies\`.",
        "featured": false,
        "fqn": "projen.javascript.UpgradeDependenciesOptions",
        "fullType": {
          "fqn": "projen.javascript.UpgradeDependenciesOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "depsUpgradeOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgradeOptions",
        ],
        "simpleType": "UpgradeDependenciesOptions",
        "switch": "deps-upgrade-options",
      },
      {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "description",
        ],
        "simpleType": "string",
        "switch": "description",
      },
      {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "devContainer",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "devContainer",
        ],
        "simpleType": "boolean",
        "switch": "dev-container",
      },
      {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "devDeps",
        ],
        "simpleType": "unknown",
        "switch": "dev-deps",
      },
      {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "disableTsconfig",
        ],
        "simpleType": "boolean",
        "switch": "disable-tsconfig",
      },
      {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.dev.json\` file.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "disableTsconfigDev",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "disableTsconfigDev",
        ],
        "simpleType": "boolean",
        "switch": "disable-tsconfig-dev",
      },
      {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "docgen",
        ],
        "simpleType": "boolean",
        "switch": "docgen",
      },
      {
        "default": ""docs"",
        "docs": "Docs directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "docsDirectory",
        ],
        "simpleType": "string",
        "switch": "docs-directory",
      },
      {
        "default": ""lib/index.js"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "entrypoint",
        ],
        "simpleType": "string",
        "switch": "entrypoint",
      },
      {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "entrypointTypes",
        ],
        "simpleType": "string",
        "switch": "entrypoint-types",
      },
      {
        "default": "true",
        "docs": "Setup eslint.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "eslint",
        ],
        "simpleType": "boolean",
        "switch": "eslint",
      },
      {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "featured": false,
        "fqn": "projen.javascript.EslintOptions",
        "fullType": {
          "fqn": "projen.javascript.EslintOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "eslintOptions",
        ],
        "simpleType": "EslintOptions",
        "switch": "eslint-options",
      },
      {
        "default": "true",
        "docs": "Enable GitHub integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "github",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "github",
        ],
        "simpleType": "boolean",
        "switch": "github",
      },
      {
        "default": "- see GitHubOptions",
        "docs": "Options for GitHub integration.",
        "featured": false,
        "fqn": "projen.github.GitHubOptions",
        "fullType": {
          "fqn": "projen.github.GitHubOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "githubOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "githubOptions",
        ],
        "simpleType": "GitHubOptions",
        "switch": "github-options",
      },
      {
        "docs": "Additional entries to .gitignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "gitignore",
        ],
        "simpleType": "unknown",
        "switch": "gitignore",
      },
      {
        "docs": "Configuration options for .gitignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitIgnoreOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "git-ignore-options",
      },
      {
        "docs": "Configuration options for git.",
        "featured": false,
        "fqn": "projen.GitOptions",
        "fullType": {
          "fqn": "projen.GitOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitOptions",
        ],
        "simpleType": "GitOptions",
        "switch": "git-options",
      },
      {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "gitpod",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "gitpod",
        ],
        "simpleType": "boolean",
        "switch": "gitpod",
      },
      {
        "docs": "Package's Homepage / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "homepage",
        ],
        "simpleType": "string",
        "switch": "homepage",
      },
      {
        "default": "true",
        "docs": "Automatically adds an \`cdk8s.IntegrationTest\` for each \`.integ.ts\` app in your test directory. If this is disabled, you can manually add an \`cdk8s.AutoDiscover\` component to your project.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "integrationTestAutoDiscover",
        "optional": true,
        "parent": "Cdk8sTypeScriptAppOptions",
        "path": [
          "integrationTestAutoDiscover",
        ],
        "simpleType": "boolean",
        "switch": "integration-test-auto-discover",
      },
      {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jest",
        ],
        "simpleType": "boolean",
        "switch": "jest",
      },
      {
        "default": "- default options",
        "docs": "Jest options.",
        "featured": false,
        "fqn": "projen.javascript.JestOptions",
        "fullType": {
          "fqn": "projen.javascript.JestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jestOptions",
        ],
        "simpleType": "JestOptions",
        "switch": "jest-options",
      },
      {
        "default": ""latest"",
        "docs": "Version requirement of \`publib\` which is used to publish modules to npm.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "jsiiReleaseVersion",
        ],
        "simpleType": "string",
        "switch": "jsii-release-version",
      },
      {
        "default": "22",
        "docs": "The cdk8s-plus library depends of Kubernetes minor version For example, cdk8s-plus-22 targets kubernetes version 1.22.0 cdk8s-plus-21 targets kubernetes version 1.21.0.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "k8sMinorVersion",
        "optional": true,
        "parent": "Cdk8sDepsCommonOptions",
        "path": [
          "k8sMinorVersion",
        ],
        "simpleType": "number",
        "switch": "k8s-minor-version",
      },
      {
        "default": "- Use the cdk8s default",
        "docs": "Import a specific Kubernetes spec version.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "k8sSpecVersion",
        "optional": true,
        "parent": "Cdk8sTypeScriptAppOptions",
        "path": [
          "k8sSpecVersion",
        ],
        "simpleType": "string",
        "switch": "k8s-spec-version",
      },
      {
        "docs": "Keywords to include in \`package.json\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "keywords",
        ],
        "simpleType": "unknown",
        "switch": "keywords",
      },
      {
        "default": ""lib"",
        "docs": "Typescript  artifacts output directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "libdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "libdir",
        ],
        "simpleType": "string",
        "switch": "libdir",
      },
      {
        "default": ""Apache-2.0"",
        "docs": "License's SPDX identifier.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "license",
        ],
        "simpleType": "string",
        "switch": "license",
      },
      {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "licensed",
        ],
        "simpleType": "boolean",
        "switch": "licensed",
      },
      {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "featured": false,
        "fqn": "projen.LoggerOptions",
        "fullType": {
          "fqn": "projen.LoggerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "logging",
        ],
        "simpleType": "LoggerOptions",
        "switch": "logging",
      },
      {
        "default": "- Major version is not enforced.",
        "docs": "Major version to release from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "majorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "majorVersion",
        ],
        "simpleType": "number",
        "switch": "major-version",
      },
      {
        "default": "- no maximum version is enforced",
        "docs": "The maximum node version supported by this package. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "maxNodeVersion",
        ],
        "simpleType": "string",
        "switch": "max-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Whether mergify should be enabled on this repository or not.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mergify",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergify",
        ],
        "simpleType": "boolean",
        "switch": "mergify",
      },
      {
        "default": "- default options",
        "deprecated": true,
        "docs": "Options for mergify.",
        "featured": false,
        "fqn": "projen.github.MergifyOptions",
        "fullType": {
          "fqn": "projen.github.MergifyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergifyOptions",
        ],
        "simpleType": "MergifyOptions",
        "switch": "mergify-options",
      },
      {
        "default": "- No minimum version is being enforced",
        "docs": "Minimal Major version to release.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "minMajorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "minMajorVersion",
        ],
        "simpleType": "number",
        "switch": "min-major-version",
      },
      {
        "default": "- no minimum version is enforced",
        "docs": "The minimum node version required by this package to function. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "minNodeVersion",
        ],
        "simpleType": "string",
        "switch": "min-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "mutableBuild",
        ],
        "simpleType": "boolean",
        "switch": "mutable-build",
      },
      {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$BASEDIR",
        "jsonLike": true,
        "name": "name",
        "parent": "ProjectOptions",
        "path": [
          "name",
        ],
        "simpleType": "string",
        "switch": "name",
      },
      {
        "default": "- The next version will be determined based on the commit history and project settings.",
        "docs": "A shell command to control the next version to release.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "nextVersionCommand",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "nextVersionCommand",
        ],
        "simpleType": "string",
        "switch": "next-version-command",
      },
      {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "featured": false,
        "fqn": "projen.javascript.NpmAccess",
        "fullType": {
          "fqn": "projen.javascript.NpmAccess",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmAccess",
        ],
        "simpleType": "NpmAccess",
        "switch": "npm-access",
      },
      {
        "default": ""latest"",
        "docs": "The npmDistTag to use when publishing from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmDistTag",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "npmDistTag",
        ],
        "simpleType": "string",
        "switch": "npm-dist-tag",
      },
      {
        "deprecated": true,
        "docs": "Additional entries to .npmignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignore",
        ],
        "simpleType": "unknown",
        "switch": "npmignore",
      },
      {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignoreEnabled",
        ],
        "simpleType": "boolean",
        "switch": "npmignore-enabled",
      },
      {
        "docs": "Configuration options for .npmignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "npmIgnoreOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "npm-ignore-options",
      },
      {
        "default": "- true for public packages, false otherwise",
        "docs": "Should provenance statements be generated when the package is published.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmProvenance",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmProvenance",
        ],
        "simpleType": "boolean",
        "switch": "npm-provenance",
      },
      {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistry",
        ],
        "simpleType": "string",
        "switch": "npm-registry",
      },
      {
        "default": ""https://registry.npmjs.org"",
        "docs": "The base URL of the npm package registry.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistryUrl",
        ],
        "simpleType": "string",
        "switch": "npm-registry-url",
      },
      {
        "default": ""NPM_TOKEN"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmTokenSecret",
        ],
        "simpleType": "string",
        "switch": "npm-token-secret",
      },
      {
        "default": ""."",
        "docs": "The root directory of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "outdir",
        ],
        "simpleType": "string",
        "switch": "outdir",
      },
      {
        "default": "true",
        "docs": "Defines a \`package\` task that will produce an npm tarball under the artifacts directory (e.g. \`dist\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "package",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "package",
        ],
        "simpleType": "boolean",
        "switch": "package",
      },
      {
        "default": "NodePackageManager.YARN_CLASSIC",
        "docs": "The Node Package Manager used to execute scripts.",
        "featured": false,
        "fqn": "projen.javascript.NodePackageManager",
        "fullType": {
          "fqn": "projen.javascript.NodePackageManager",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageManager",
        ],
        "simpleType": "NodePackageManager",
        "switch": "package-manager",
      },
      {
        "default": "- defaults to project name",
        "docs": "The "name" in package.json.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageName",
        ],
        "simpleType": "string",
        "switch": "package-name",
      },
      {
        "docs": "The parent project, if this project is part of a bigger project.",
        "featured": false,
        "fqn": "projen.Project",
        "fullType": {
          "fqn": "projen.Project",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "parent",
        ],
        "simpleType": "Project",
        "switch": "parent",
      },
      {
        "docs": "Options for \`peerDeps\`.",
        "featured": false,
        "fqn": "projen.javascript.PeerDependencyOptions",
        "fullType": {
          "fqn": "projen.javascript.PeerDependencyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDependencyOptions",
        ],
        "simpleType": "PeerDependencyOptions",
        "switch": "peer-dependency-options",
      },
      {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDeps",
        ],
        "simpleType": "unknown",
        "switch": "peer-deps",
      },
      {
        "default": ""9"",
        "docs": "The version of PNPM to use if using PNPM as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "pnpmVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "pnpmVersion",
        ],
        "simpleType": "string",
        "switch": "pnpm-version",
      },
      {
        "default": "[]",
        "docs": "Steps to execute after build as part of the release workflow.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "postBuildSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "postBuildSteps",
        ],
        "simpleType": "unknown",
        "switch": "post-build-steps",
      },
      {
        "default": "- normal semantic versions",
        "docs": "Bump versions from the default branch as pre-releases (e.g. "beta", "alpha", "pre").",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "prerelease",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "prerelease",
        ],
        "simpleType": "string",
        "switch": "prerelease",
      },
      {
        "default": "false",
        "docs": "Setup prettier.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "prettier",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettier",
        ],
        "simpleType": "boolean",
        "switch": "prettier",
      },
      {
        "default": "- default options",
        "docs": "Prettier options.",
        "featured": false,
        "fqn": "projen.javascript.PrettierOptions",
        "fullType": {
          "fqn": "projen.javascript.PrettierOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "prettierOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettierOptions",
        ],
        "simpleType": "PrettierOptions",
        "switch": "prettier-options",
      },
      {
        "default": "ProjectType.UNKNOWN",
        "deprecated": true,
        "docs": "Which type of project this is (library/app).",
        "featured": false,
        "fqn": "projen.ProjectType",
        "fullType": {
          "fqn": "projen.ProjectType",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "projectType",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projectType",
        ],
        "simpleType": "ProjectType",
        "switch": "project-type",
      },
      {
        "default": ""npx projen"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenCommand",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenCommand",
        ],
        "simpleType": "string",
        "switch": "projen-command",
      },
      {
        "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
        "docs": "Choose a method of providing GitHub API access for projen workflows.",
        "featured": false,
        "fqn": "projen.github.GithubCredentials",
        "fullType": {
          "fqn": "projen.github.GithubCredentials",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "projenCredentials",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenCredentials",
        ],
        "simpleType": "GithubCredentials",
        "switch": "projen-credentials",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Indicates of "projen" should be installed as a devDependency.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenDevDependency",
        ],
        "simpleType": "boolean",
        "switch": "projen-dev-dependency",
      },
      {
        "default": "- true if projenrcJson is false",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-js",
      },
      {
        "default": "false",
        "docs": "Generate (once) .projenrc.json (in JSON). Set to \`false\` in order to disable .projenrc.json generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJson",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJson",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-json",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.json.",
        "featured": false,
        "fqn": "projen.ProjenrcJsonOptions",
        "fullType": {
          "fqn": "projen.ProjenrcJsonOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsonOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJsonOptions",
        ],
        "simpleType": "ProjenrcJsonOptions",
        "switch": "projenrc-json-options",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "featured": false,
        "fqn": "projen.javascript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.javascript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-js-options",
      },
      {
        "default": "false",
        "docs": "Use TypeScript for your projenrc file (\`.projenrc.ts\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "initialValue": "true",
        "jsonLike": true,
        "name": "projenrcTs",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "projenrcTs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-ts",
      },
      {
        "docs": "Options for .projenrc.ts.",
        "featured": false,
        "fqn": "projen.typescript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.typescript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "projenrcTsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-ts-options",
      },
      {
        "default": ""PROJEN_GITHUB_TOKEN"",
        "deprecated": true,
        "docs": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenTokenSecret",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenTokenSecret",
        ],
        "simpleType": "string",
        "switch": "projen-token-secret",
      },
      {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenVersion",
        ],
        "simpleType": "string",
        "switch": "projen-version",
      },
      {
        "default": "false",
        "docs": "Instead of actually publishing to package managers, just print the publishing command.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishDryRun",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishDryRun",
        ],
        "simpleType": "boolean",
        "switch": "publish-dry-run",
      },
      {
        "default": "false",
        "docs": "Define publishing tasks that can be executed manually as well as workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishTasks",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishTasks",
        ],
        "simpleType": "boolean",
        "switch": "publish-tasks",
      },
      {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplate",
        ],
        "simpleType": "boolean",
        "switch": "pull-request-template",
      },
      {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplateContents",
        ],
        "simpleType": "unknown",
        "switch": "pull-request-template-contents",
      },
      {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "featured": false,
        "fqn": "projen.SampleReadmeProps",
        "fullType": {
          "fqn": "projen.SampleReadmeProps",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "readme",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "readme",
        ],
        "simpleType": "SampleReadmeProps",
        "switch": "readme",
      },
      {
        "default": "ReleasableCommits.everyCommit()",
        "docs": "Find commits that should be considered releasable Used to decide if a release is required.",
        "featured": false,
        "fqn": "projen.ReleasableCommits",
        "fullType": {
          "fqn": "projen.ReleasableCommits",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releasableCommits",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releasableCommits",
        ],
        "simpleType": "ReleasableCommits",
        "switch": "releasable-commits",
      },
      {
        "default": "- true (false for subprojects)",
        "docs": "Add release management to this project.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "release",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "release",
        ],
        "simpleType": "boolean",
        "switch": "release",
      },
      {
        "default": "- no additional branches are used for release. you can use
\`addBranch()\` to add additional branches.",
        "docs": "Defines additional release branches.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.release.BranchOptions",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "releaseBranches",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseBranches",
        ],
        "simpleType": "unknown",
        "switch": "release-branches",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseEveryCommit",
        ],
        "simpleType": "boolean",
        "switch": "release-every-commit",
      },
      {
        "default": "false",
        "docs": "Create a github issue on every failed publishing task.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseFailureIssue",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssue",
        ],
        "simpleType": "boolean",
        "switch": "release-failure-issue",
      },
      {
        "default": ""failed-release"",
        "docs": "The label to apply to issues indicating publish failures.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseFailureIssueLabel",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssueLabel",
        ],
        "simpleType": "string",
        "switch": "release-failure-issue-label",
      },
      {
        "default": "- no scheduled releases",
        "deprecated": true,
        "docs": "CRON schedule to trigger new releases.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseSchedule",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseSchedule",
        ],
        "simpleType": "string",
        "switch": "release-schedule",
      },
      {
        "default": ""v"",
        "docs": "Automatically add the given prefix to release tags. Useful if you are releasing on multiple branches with overlapping version numbers.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseTagPrefix",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTagPrefix",
        ],
        "simpleType": "string",
        "switch": "release-tag-prefix",
      },
      {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseToNpm",
        ],
        "simpleType": "boolean",
        "switch": "release-to-npm",
      },
      {
        "default": "- Continuous releases (\`ReleaseTrigger.continuous()\`)",
        "docs": "The release trigger to use.",
        "featured": false,
        "fqn": "projen.release.ReleaseTrigger",
        "fullType": {
          "fqn": "projen.release.ReleaseTrigger",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releaseTrigger",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTrigger",
        ],
        "simpleType": "ReleaseTrigger",
        "switch": "release-trigger",
      },
      {
        "default": "- true if not a subproject",
        "deprecated": true,
        "docs": "DEPRECATED: renamed to \`release\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "release-workflow",
      },
      {
        "default": ""release"",
        "docs": "The name of the default release workflow.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseWorkflowName",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowName",
        ],
        "simpleType": "string",
        "switch": "release-workflow-name",
      },
      {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowSetupSteps",
        ],
        "simpleType": "unknown",
        "switch": "release-workflow-setup-steps",
      },
      {
        "default": "false",
        "docs": "Use renovatebot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "renovatebot",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebot",
        ],
        "simpleType": "boolean",
        "switch": "renovatebot",
      },
      {
        "default": "- default options",
        "docs": "Options for renovatebot.",
        "featured": false,
        "fqn": "projen.RenovatebotOptions",
        "fullType": {
          "fqn": "projen.RenovatebotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "renovatebotOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebotOptions",
        ],
        "simpleType": "RenovatebotOptions",
        "switch": "renovatebot-options",
      },
      {
        "docs": "The repository is the location where the actual code for your package lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repository",
        ],
        "simpleType": "string",
        "switch": "repository",
      },
      {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repositoryDirectory",
        ],
        "simpleType": "string",
        "switch": "repository-directory",
      },
      {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "sampleCode",
        ],
        "simpleType": "boolean",
        "switch": "sample-code",
      },
      {
        "default": "- fetch all scoped packages from the public npm registry",
        "docs": "Options for privately hosted scoped packages.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.javascript.ScopedPackagesOptions",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "scopedPackagesOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scopedPackagesOptions",
        ],
        "simpleType": "unknown",
        "switch": "scoped-packages-options",
      },
      {
        "default": "{}",
        "deprecated": true,
        "docs": "npm scripts to include.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scripts",
        ],
        "simpleType": "unknown",
        "switch": "scripts",
      },
      {
        "default": ""src"",
        "docs": "Typescript sources directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "srcdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "srcdir",
        ],
        "simpleType": "string",
        "switch": "srcdir",
      },
      {
        "docs": "Package's Stability.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "stability",
        ],
        "simpleType": "string",
        "switch": "stability",
      },
      {
        "default": "false",
        "docs": "Auto-close of stale issues and pull request.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "stale",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "stale",
        ],
        "simpleType": "boolean",
        "switch": "stale",
      },
      {
        "default": "- see defaults in \`StaleOptions\`",
        "docs": "Auto-close stale issues and pull requests.",
        "featured": false,
        "fqn": "projen.github.StaleOptions",
        "fullType": {
          "fqn": "projen.github.StaleOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "staleOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "staleOptions",
        ],
        "simpleType": "StaleOptions",
        "switch": "stale-options",
      },
      {
        "default": ""test"",
        "docs": "Jest tests directory. Tests files should be named \`xxx.test.ts\`.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "testdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "testdir",
        ],
        "simpleType": "string",
        "switch": "testdir",
      },
      {
        "default": "- default options",
        "docs": "Custom TSConfig.",
        "featured": false,
        "fqn": "projen.javascript.TypescriptConfigOptions",
        "fullType": {
          "fqn": "projen.javascript.TypescriptConfigOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfig",
        ],
        "simpleType": "TypescriptConfigOptions",
        "switch": "tsconfig",
      },
      {
        "default": "- use the production tsconfig options",
        "docs": "Custom tsconfig options for the development tsconfig.json file (used for testing).",
        "featured": false,
        "fqn": "projen.javascript.TypescriptConfigOptions",
        "fullType": {
          "fqn": "projen.javascript.TypescriptConfigOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsconfigDev",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfigDev",
        ],
        "simpleType": "TypescriptConfigOptions",
        "switch": "tsconfig-dev",
      },
      {
        "default": ""tsconfig.dev.json"",
        "docs": "The name of the development tsconfig.json file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "tsconfigDevFile",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfigDevFile",
        ],
        "simpleType": "string",
        "switch": "tsconfig-dev-file",
      },
      {
        "docs": "Options for ts-jest.",
        "featured": false,
        "fqn": "projen.typescript.TsJestOptions",
        "fullType": {
          "fqn": "projen.typescript.TsJestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsJestOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsJestOptions",
        ],
        "simpleType": "TsJestOptions",
        "switch": "ts-jest-options",
      },
      {
        "default": ""latest"",
        "docs": "TypeScript version to use.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "typescriptVersion",
        ],
        "simpleType": "string",
        "switch": "typescript-version",
      },
      {
        "default": "- standard configuration applicable for GitHub repositories",
        "docs": "Custom configuration used when creating changelog with commit-and-tag-version package.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "any",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "versionrcOptions",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "versionrcOptions",
        ],
        "simpleType": "unknown",
        "switch": "versionrc-options",
      },
      {
        "default": "true",
        "docs": "Enable VSCode integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "vscode",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "vscode",
        ],
        "simpleType": "boolean",
        "switch": "vscode",
      },
      {
        "default": ""yarn install --frozen-lockfile && yarn projen"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowBootstrapSteps",
        ],
        "simpleType": "unknown",
        "switch": "workflow-bootstrap-steps",
      },
      {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowContainerImage",
        ],
        "simpleType": "string",
        "switch": "workflow-container-image",
      },
      {
        "default": "- GitHub Actions",
        "docs": "The git identity to use in workflows.",
        "featured": false,
        "fqn": "projen.github.GitIdentity",
        "fullType": {
          "fqn": "projen.github.GitIdentity",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowGitIdentity",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowGitIdentity",
        ],
        "simpleType": "GitIdentity",
        "switch": "workflow-git-identity",
      },
      {
        "default": "- \`minNodeVersion\` if set, otherwise \`lts/*\`.",
        "docs": "The node version used in GitHub Actions workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowNodeVersion",
        ],
        "simpleType": "string",
        "switch": "workflow-node-version",
      },
      {
        "default": "false",
        "docs": "Enable Node.js package cache in GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "workflowPackageCache",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowPackageCache",
        ],
        "simpleType": "boolean",
        "switch": "workflow-package-cache",
      },
      {
        "default": "["ubuntu-latest"]",
        "docs": "Github Runner selection labels.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowRunsOn",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOn",
        ],
        "simpleType": "unknown",
        "switch": "workflow-runs-on",
      },
      {
        "docs": "Github Runner Group selection options.",
        "featured": false,
        "fqn": "projen.GroupRunnerOptions",
        "fullType": {
          "fqn": "projen.GroupRunnerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowRunsOnGroup",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOnGroup",
        ],
        "simpleType": "GroupRunnerOptions",
        "switch": "workflow-runs-on-group",
      },
      {
        "default": "- Yarn Berry v4 with all default options",
        "docs": "Options for Yarn Berry.",
        "featured": false,
        "fqn": "projen.javascript.YarnBerryOptions",
        "fullType": {
          "fqn": "projen.javascript.YarnBerryOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "yarnBerryOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "yarnBerryOptions",
        ],
        "simpleType": "YarnBerryOptions",
        "switch": "yarn-berry-options",
      },
    ],
    "pjid": "cdk8s-app-ts",
    "typename": "cdk8s.Cdk8sTypeScriptApp",
  },
  {
    "docs": "CDK8s construct library project.",
    "docsurl": "https://projen.io/docs/api/cdk8s#constructlibrarycdk8s-",
    "fqn": "projen.cdk8s.ConstructLibraryCdk8s",
    "moduleName": "projen",
    "options": [
      {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "allowLibraryDependencies",
        ],
        "simpleType": "boolean",
        "switch": "allow-library-dependencies",
      },
      {
        "default": ""dist"",
        "docs": "A directory which will contain build artifacts.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "artifactsDirectory",
        ],
        "simpleType": "string",
        "switch": "artifacts-directory",
      },
      {
        "default": "$GIT_USER_NAME",
        "docs": "The name of the library author.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$GIT_USER_NAME",
        "jsonLike": true,
        "name": "author",
        "parent": "JsiiProjectOptions",
        "path": [
          "author",
        ],
        "simpleType": "string",
        "switch": "author",
      },
      {
        "default": "$GIT_USER_EMAIL",
        "docs": "Email or URL of the library author.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$GIT_USER_EMAIL",
        "jsonLike": true,
        "name": "authorAddress",
        "parent": "JsiiProjectOptions",
        "path": [
          "authorAddress",
        ],
        "simpleType": "string",
        "switch": "author-address",
      },
      {
        "docs": "Author's e-mail.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorEmail",
        ],
        "simpleType": "string",
        "switch": "author-email",
      },
      {
        "docs": "Author's name.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorName",
        ],
        "simpleType": "string",
        "switch": "author-name",
      },
      {
        "docs": "Is the author an organization.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorOrganization",
        ],
        "simpleType": "boolean",
        "switch": "author-organization",
      },
      {
        "docs": "Author's URL / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorUrl",
        ],
        "simpleType": "string",
        "switch": "author-url",
      },
      {
        "default": "- auto approve is disabled",
        "docs": "Enable and configure the 'auto approve' workflow.",
        "featured": false,
        "fqn": "projen.github.AutoApproveOptions",
        "fullType": {
          "fqn": "projen.github.AutoApproveOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoApproveOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoApproveOptions",
        ],
        "simpleType": "AutoApproveOptions",
        "switch": "auto-approve-options",
      },
      {
        "default": "- true",
        "docs": "Automatically approve deps upgrade PRs, allowing them to be merged by mergify (if configued).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoApproveUpgrades",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "autoApproveUpgrades",
        ],
        "simpleType": "boolean",
        "switch": "auto-approve-upgrades",
      },
      {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "autoDetectBin",
        ],
        "simpleType": "boolean",
        "switch": "auto-detect-bin",
      },
      {
        "default": "true",
        "docs": "Enable automatic merging on GitHub.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoMerge",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMerge",
        ],
        "simpleType": "boolean",
        "switch": "auto-merge",
      },
      {
        "default": "- see defaults in \`AutoMergeOptions\`",
        "docs": "Configure options for automatic merging on GitHub.",
        "featured": false,
        "fqn": "projen.github.AutoMergeOptions",
        "fullType": {
          "fqn": "projen.github.AutoMergeOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoMergeOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMergeOptions",
        ],
        "simpleType": "AutoMergeOptions",
        "switch": "auto-merge-options",
      },
      {
        "docs": "Binary programs vended with your module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bin",
        ],
        "simpleType": "unknown",
        "switch": "bin",
      },
      {
        "docs": "The email address to which issues should be reported.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsEmail",
        ],
        "simpleType": "string",
        "switch": "bugs-email",
      },
      {
        "docs": "The url to your project's issue tracker.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsUrl",
        ],
        "simpleType": "string",
        "switch": "bugs-url",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "build-workflow",
      },
      {
        "docs": "Options for PR build workflow.",
        "featured": false,
        "fqn": "projen.javascript.BuildWorkflowOptions",
        "fullType": {
          "fqn": "projen.javascript.BuildWorkflowOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowOptions",
        ],
        "simpleType": "BuildWorkflowOptions",
        "switch": "build-workflow-options",
      },
      {
        "default": ""{ pullRequest: {}, workflowDispatch: {} }"",
        "deprecated": true,
        "docs": "Build workflow triggers.",
        "featured": false,
        "fqn": "projen.github.workflows.Triggers",
        "fullType": {
          "fqn": "projen.github.workflows.Triggers",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowTriggers",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowTriggers",
        ],
        "simpleType": "Triggers",
        "switch": "build-workflow-triggers",
      },
      {
        "default": "- A recent version of "commit-and-tag-version"",
        "docs": "The \`commit-and-tag-version\` compatible package used to bump the package version, as a dependency string.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bumpPackage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "bumpPackage",
        ],
        "simpleType": "string",
        "switch": "bump-package",
      },
      {
        "docs": "List of dependencies to bundle into this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bundledDeps",
        ],
        "simpleType": "unknown",
        "switch": "bundled-deps",
      },
      {
        "docs": "Options for \`Bundler\`.",
        "featured": false,
        "fqn": "projen.javascript.BundlerOptions",
        "fullType": {
          "fqn": "projen.javascript.BundlerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "bundlerOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "bundlerOptions",
        ],
        "simpleType": "BundlerOptions",
        "switch": "bundler-options",
      },
      {
        "default": ""latest"",
        "docs": "The version of Bun to use if using Bun as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bunVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bunVersion",
        ],
        "simpleType": "string",
        "switch": "bun-version",
      },
      {
        "default": "- new version will be announced",
        "docs": "Libraries will be picked up by the construct catalog when they are published to npm as jsii modules and will be published under:.",
        "featured": false,
        "fqn": "projen.cdk.Catalog",
        "fullType": {
          "fqn": "projen.cdk.Catalog",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "catalog",
        "optional": true,
        "parent": "ConstructLibraryOptions",
        "path": [
          "catalog",
        ],
        "simpleType": "Catalog",
        "switch": "catalog",
      },
      {
        "default": "false",
        "docs": "Use pinned version instead of caret version for cdk8s-plus-17.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdk8sPlusVersionPinning",
        "optional": true,
        "parent": "ConstructLibraryCdk8sOptions",
        "path": [
          "cdk8sPlusVersionPinning",
        ],
        "simpleType": "boolean",
        "switch": "cdk8s-plus-version-pinning",
      },
      {
        "default": ""1.4.10"",
        "docs": "Minimum target version this library is tested against.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""1.4.10"",
        "jsonLike": true,
        "name": "cdk8sVersion",
        "parent": "ConstructLibraryCdk8sOptions",
        "path": [
          "cdk8sVersion",
        ],
        "simpleType": "string",
        "switch": "cdk8s-version",
      },
      {
        "default": "false",
        "docs": "Use pinned version instead of caret version for CDK8s.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "cdk8sVersionPinning",
        "optional": true,
        "parent": "ConstructLibraryCdk8sOptions",
        "path": [
          "cdk8sVersionPinning",
        ],
        "simpleType": "boolean",
        "switch": "cdk8s-version-pinning",
      },
      {
        "default": "- no license checks are run during the build and all licenses will be accepted",
        "docs": "Configure which licenses should be deemed acceptable for use by dependencies.",
        "featured": false,
        "fqn": "projen.javascript.LicenseCheckerOptions",
        "fullType": {
          "fqn": "projen.javascript.LicenseCheckerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "checkLicenses",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "checkLicenses",
        ],
        "simpleType": "LicenseCheckerOptions",
        "switch": "check-licenses",
      },
      {
        "default": "- true, but false for subprojects",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "clobber",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "clobber",
        ],
        "simpleType": "boolean",
        "switch": "clobber",
      },
      {
        "default": "- undefined",
        "docs": "Options for npm packages using AWS CodeArtifact.",
        "featured": false,
        "fqn": "projen.javascript.CodeArtifactOptions",
        "fullType": {
          "fqn": "projen.javascript.CodeArtifactOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "codeArtifactOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "codeArtifactOptions",
        ],
        "simpleType": "CodeArtifactOptions",
        "switch": "code-artifact-options",
      },
      {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v4 A secret is required for private repos. Configured with \`@codeCovTokenSecret\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCov",
        ],
        "simpleType": "boolean",
        "switch": "code-cov",
      },
      {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCovTokenSecret",
        ],
        "simpleType": "string",
        "switch": "code-cov-token-secret",
      },
      {
        "default": "true",
        "docs": "Whether to commit the managed files by default.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "commitGenerated",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "commitGenerated",
        ],
        "simpleType": "boolean",
        "switch": "commit-generated",
      },
      {
        "default": "false",
        "docs": "Automatically run API compatibility test against the latest version published to npm after compilation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "compat",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "compat",
        ],
        "simpleType": "boolean",
        "switch": "compat",
      },
      {
        "default": "".compatignore"",
        "docs": "Name of the ignore file for API compatibility tests.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "compatIgnore",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "compatIgnore",
        ],
        "simpleType": "string",
        "switch": "compat-ignore",
      },
      {
        "default": "false",
        "docs": "Emit a compressed version of the assembly.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "compressAssembly",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "compressAssembly",
        ],
        "simpleType": "boolean",
        "switch": "compress-assembly",
      },
      {
        "default": ""3.3.196"",
        "docs": "constructs verion.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "constructsVersion",
        "optional": true,
        "parent": "ConstructLibraryCdk8sOptions",
        "path": [
          "constructsVersion",
        ],
        "simpleType": "string",
        "switch": "constructs-version",
      },
      {
        "default": "false",
        "docs": "Use pinned version instead of caret version for constructs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "constructsVersionPinning",
        "optional": true,
        "parent": "ConstructLibraryCdk8sOptions",
        "path": [
          "constructsVersionPinning",
        ],
        "simpleType": "boolean",
        "switch": "constructs-version-pinning",
      },
      {
        "default": "- defaults to the value of authorName or "" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightOwner",
        ],
        "simpleType": "string",
        "switch": "copyright-owner",
      },
      {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightPeriod",
        ],
        "simpleType": "string",
        "switch": "copyright-period",
      },
      {
        "default": ""main"",
        "docs": "The name of the main release branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""main"",
        "jsonLike": true,
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": [
          "defaultReleaseBranch",
        ],
        "simpleType": "string",
        "switch": "default-release-branch",
      },
      {
        "default": "false",
        "docs": "Use dependabot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabot",
        ],
        "simpleType": "boolean",
        "switch": "dependabot",
      },
      {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "featured": false,
        "fqn": "projen.github.DependabotOptions",
        "fullType": {
          "fqn": "projen.github.DependabotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabotOptions",
        ],
        "simpleType": "DependabotOptions",
        "switch": "dependabot-options",
      },
      {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "deps",
        ],
        "simpleType": "unknown",
        "switch": "deps",
      },
      {
        "default": "true",
        "docs": "Use tasks and github workflows to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "depsUpgrade",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgrade",
        ],
        "simpleType": "boolean",
        "switch": "deps-upgrade",
      },
      {
        "default": "- default options",
        "docs": "Options for \`UpgradeDependencies\`.",
        "featured": false,
        "fqn": "projen.javascript.UpgradeDependenciesOptions",
        "fullType": {
          "fqn": "projen.javascript.UpgradeDependenciesOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "depsUpgradeOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgradeOptions",
        ],
        "simpleType": "UpgradeDependenciesOptions",
        "switch": "deps-upgrade-options",
      },
      {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "description",
        ],
        "simpleType": "string",
        "switch": "description",
      },
      {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "devContainer",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "devContainer",
        ],
        "simpleType": "boolean",
        "switch": "dev-container",
      },
      {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "devDeps",
        ],
        "simpleType": "unknown",
        "switch": "dev-deps",
      },
      {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "disableTsconfig",
        ],
        "simpleType": "boolean",
        "switch": "disable-tsconfig",
      },
      {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.dev.json\` file.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "disableTsconfigDev",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "disableTsconfigDev",
        ],
        "simpleType": "boolean",
        "switch": "disable-tsconfig-dev",
      },
      {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "docgen",
        ],
        "simpleType": "boolean",
        "switch": "docgen",
      },
      {
        "default": ""API.md"",
        "docs": "File path for generated docs.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "docgenFilePath",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "docgenFilePath",
        ],
        "simpleType": "string",
        "switch": "docgen-file-path",
      },
      {
        "default": ""docs"",
        "docs": "Docs directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "docsDirectory",
        ],
        "simpleType": "string",
        "switch": "docs-directory",
      },
      {
        "deprecated": true,
        "featured": false,
        "fqn": "projen.cdk.JsiiDotNetTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiDotNetTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "dotnet",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "dotnet",
        ],
        "simpleType": "JsiiDotNetTarget",
        "switch": "dotnet",
      },
      {
        "default": ""lib/index.js"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "entrypoint",
        ],
        "simpleType": "string",
        "switch": "entrypoint",
      },
      {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "entrypointTypes",
        ],
        "simpleType": "string",
        "switch": "entrypoint-types",
      },
      {
        "default": "true",
        "docs": "Setup eslint.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "eslint",
        ],
        "simpleType": "boolean",
        "switch": "eslint",
      },
      {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "featured": false,
        "fqn": "projen.javascript.EslintOptions",
        "fullType": {
          "fqn": "projen.javascript.EslintOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "eslintOptions",
        ],
        "simpleType": "EslintOptions",
        "switch": "eslint-options",
      },
      {
        "docs": "Accepts a list of glob patterns.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "excludeTypescript",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "excludeTypescript",
        ],
        "simpleType": "unknown",
        "switch": "exclude-typescript",
      },
      {
        "default": "true",
        "docs": "Enable GitHub integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "github",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "github",
        ],
        "simpleType": "boolean",
        "switch": "github",
      },
      {
        "default": "- see GitHubOptions",
        "docs": "Options for GitHub integration.",
        "featured": false,
        "fqn": "projen.github.GitHubOptions",
        "fullType": {
          "fqn": "projen.github.GitHubOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "githubOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "githubOptions",
        ],
        "simpleType": "GitHubOptions",
        "switch": "github-options",
      },
      {
        "docs": "Additional entries to .gitignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "gitignore",
        ],
        "simpleType": "unknown",
        "switch": "gitignore",
      },
      {
        "docs": "Configuration options for .gitignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitIgnoreOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "git-ignore-options",
      },
      {
        "docs": "Configuration options for git.",
        "featured": false,
        "fqn": "projen.GitOptions",
        "fullType": {
          "fqn": "projen.GitOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitOptions",
        ],
        "simpleType": "GitOptions",
        "switch": "git-options",
      },
      {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "gitpod",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "gitpod",
        ],
        "simpleType": "boolean",
        "switch": "gitpod",
      },
      {
        "docs": "Package's Homepage / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "homepage",
        ],
        "simpleType": "string",
        "switch": "homepage",
      },
      {
        "default": "true",
        "docs": "Automatically adds an \`cdk8s.IntegrationTest\` for each \`.integ.ts\` app in your test directory. If this is disabled, you can manually add an \`cdk8s.AutoDiscover\` component to your project.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "integrationTestAutoDiscover",
        "optional": true,
        "parent": "ConstructLibraryCdk8sOptions",
        "path": [
          "integrationTestAutoDiscover",
        ],
        "simpleType": "boolean",
        "switch": "integration-test-auto-discover",
      },
      {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jest",
        ],
        "simpleType": "boolean",
        "switch": "jest",
      },
      {
        "default": "- default options",
        "docs": "Jest options.",
        "featured": false,
        "fqn": "projen.javascript.JestOptions",
        "fullType": {
          "fqn": "projen.javascript.JestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jestOptions",
        ],
        "simpleType": "JestOptions",
        "switch": "jest-options",
      },
      {
        "default": ""latest"",
        "docs": "Version requirement of \`publib\` which is used to publish modules to npm.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "jsiiReleaseVersion",
        ],
        "simpleType": "string",
        "switch": "jsii-release-version",
      },
      {
        "default": ""~5.6.0"",
        "docs": "Version of the jsii compiler to use.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""~5.7.0"",
        "jsonLike": true,
        "name": "jsiiVersion",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "jsiiVersion",
        ],
        "simpleType": "string",
        "switch": "jsii-version",
      },
      {
        "docs": "Keywords to include in \`package.json\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "keywords",
        ],
        "simpleType": "unknown",
        "switch": "keywords",
      },
      {
        "default": ""lib"",
        "docs": "Typescript  artifacts output directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "libdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "libdir",
        ],
        "simpleType": "string",
        "switch": "libdir",
      },
      {
        "default": ""Apache-2.0"",
        "docs": "License's SPDX identifier.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "license",
        ],
        "simpleType": "string",
        "switch": "license",
      },
      {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "licensed",
        ],
        "simpleType": "boolean",
        "switch": "licensed",
      },
      {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "featured": false,
        "fqn": "projen.LoggerOptions",
        "fullType": {
          "fqn": "projen.LoggerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "logging",
        ],
        "simpleType": "LoggerOptions",
        "switch": "logging",
      },
      {
        "default": "- Major version is not enforced.",
        "docs": "Major version to release from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "majorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "majorVersion",
        ],
        "simpleType": "number",
        "switch": "major-version",
      },
      {
        "default": "- no maximum version is enforced",
        "docs": "The maximum node version supported by this package. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "maxNodeVersion",
        ],
        "simpleType": "string",
        "switch": "max-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Whether mergify should be enabled on this repository or not.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mergify",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergify",
        ],
        "simpleType": "boolean",
        "switch": "mergify",
      },
      {
        "default": "- default options",
        "deprecated": true,
        "docs": "Options for mergify.",
        "featured": false,
        "fqn": "projen.github.MergifyOptions",
        "fullType": {
          "fqn": "projen.github.MergifyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergifyOptions",
        ],
        "simpleType": "MergifyOptions",
        "switch": "mergify-options",
      },
      {
        "default": "- No minimum version is being enforced",
        "docs": "Minimal Major version to release.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "minMajorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "minMajorVersion",
        ],
        "simpleType": "number",
        "switch": "min-major-version",
      },
      {
        "default": "- no minimum version is enforced",
        "docs": "The minimum node version required by this package to function. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "minNodeVersion",
        ],
        "simpleType": "string",
        "switch": "min-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "mutableBuild",
        ],
        "simpleType": "boolean",
        "switch": "mutable-build",
      },
      {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$BASEDIR",
        "jsonLike": true,
        "name": "name",
        "parent": "ProjectOptions",
        "path": [
          "name",
        ],
        "simpleType": "string",
        "switch": "name",
      },
      {
        "default": "- The next version will be determined based on the commit history and project settings.",
        "docs": "A shell command to control the next version to release.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "nextVersionCommand",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "nextVersionCommand",
        ],
        "simpleType": "string",
        "switch": "next-version-command",
      },
      {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "featured": false,
        "fqn": "projen.javascript.NpmAccess",
        "fullType": {
          "fqn": "projen.javascript.NpmAccess",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmAccess",
        ],
        "simpleType": "NpmAccess",
        "switch": "npm-access",
      },
      {
        "default": ""latest"",
        "docs": "The npmDistTag to use when publishing from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmDistTag",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "npmDistTag",
        ],
        "simpleType": "string",
        "switch": "npm-dist-tag",
      },
      {
        "deprecated": true,
        "docs": "Additional entries to .npmignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignore",
        ],
        "simpleType": "unknown",
        "switch": "npmignore",
      },
      {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignoreEnabled",
        ],
        "simpleType": "boolean",
        "switch": "npmignore-enabled",
      },
      {
        "docs": "Configuration options for .npmignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "npmIgnoreOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "npm-ignore-options",
      },
      {
        "default": "- true for public packages, false otherwise",
        "docs": "Should provenance statements be generated when the package is published.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmProvenance",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmProvenance",
        ],
        "simpleType": "boolean",
        "switch": "npm-provenance",
      },
      {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistry",
        ],
        "simpleType": "string",
        "switch": "npm-registry",
      },
      {
        "default": ""https://registry.npmjs.org"",
        "docs": "The base URL of the npm package registry.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistryUrl",
        ],
        "simpleType": "string",
        "switch": "npm-registry-url",
      },
      {
        "default": ""NPM_TOKEN"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmTokenSecret",
        ],
        "simpleType": "string",
        "switch": "npm-token-secret",
      },
      {
        "default": ""."",
        "docs": "The root directory of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "outdir",
        ],
        "simpleType": "string",
        "switch": "outdir",
      },
      {
        "default": "true",
        "docs": "Defines a \`package\` task that will produce an npm tarball under the artifacts directory (e.g. \`dist\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "package",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "package",
        ],
        "simpleType": "boolean",
        "switch": "package",
      },
      {
        "default": "NodePackageManager.YARN_CLASSIC",
        "docs": "The Node Package Manager used to execute scripts.",
        "featured": false,
        "fqn": "projen.javascript.NodePackageManager",
        "fullType": {
          "fqn": "projen.javascript.NodePackageManager",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageManager",
        ],
        "simpleType": "NodePackageManager",
        "switch": "package-manager",
      },
      {
        "default": "- defaults to project name",
        "docs": "The "name" in package.json.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageName",
        ],
        "simpleType": "string",
        "switch": "package-name",
      },
      {
        "docs": "The parent project, if this project is part of a bigger project.",
        "featured": false,
        "fqn": "projen.Project",
        "fullType": {
          "fqn": "projen.Project",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "parent",
        ],
        "simpleType": "Project",
        "switch": "parent",
      },
      {
        "docs": "Options for \`peerDeps\`.",
        "featured": false,
        "fqn": "projen.javascript.PeerDependencyOptions",
        "fullType": {
          "fqn": "projen.javascript.PeerDependencyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDependencyOptions",
        ],
        "simpleType": "PeerDependencyOptions",
        "switch": "peer-dependency-options",
      },
      {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDeps",
        ],
        "simpleType": "unknown",
        "switch": "peer-deps",
      },
      {
        "default": ""9"",
        "docs": "The version of PNPM to use if using PNPM as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "pnpmVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "pnpmVersion",
        ],
        "simpleType": "string",
        "switch": "pnpm-version",
      },
      {
        "default": "[]",
        "docs": "Steps to execute after build as part of the release workflow.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "postBuildSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "postBuildSteps",
        ],
        "simpleType": "unknown",
        "switch": "post-build-steps",
      },
      {
        "default": "- normal semantic versions",
        "docs": "Bump versions from the default branch as pre-releases (e.g. "beta", "alpha", "pre").",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "prerelease",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "prerelease",
        ],
        "simpleType": "string",
        "switch": "prerelease",
      },
      {
        "default": "false",
        "docs": "Setup prettier.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "prettier",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettier",
        ],
        "simpleType": "boolean",
        "switch": "prettier",
      },
      {
        "default": "- default options",
        "docs": "Prettier options.",
        "featured": false,
        "fqn": "projen.javascript.PrettierOptions",
        "fullType": {
          "fqn": "projen.javascript.PrettierOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "prettierOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettierOptions",
        ],
        "simpleType": "PrettierOptions",
        "switch": "prettier-options",
      },
      {
        "default": "ProjectType.UNKNOWN",
        "deprecated": true,
        "docs": "Which type of project this is (library/app).",
        "featured": false,
        "fqn": "projen.ProjectType",
        "fullType": {
          "fqn": "projen.ProjectType",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "projectType",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projectType",
        ],
        "simpleType": "ProjectType",
        "switch": "project-type",
      },
      {
        "default": ""npx projen"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenCommand",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenCommand",
        ],
        "simpleType": "string",
        "switch": "projen-command",
      },
      {
        "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
        "docs": "Choose a method of providing GitHub API access for projen workflows.",
        "featured": false,
        "fqn": "projen.github.GithubCredentials",
        "fullType": {
          "fqn": "projen.github.GithubCredentials",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "projenCredentials",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenCredentials",
        ],
        "simpleType": "GithubCredentials",
        "switch": "projen-credentials",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Indicates of "projen" should be installed as a devDependency.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenDevDependency",
        ],
        "simpleType": "boolean",
        "switch": "projen-dev-dependency",
      },
      {
        "default": "- true if projenrcJson is false",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-js",
      },
      {
        "default": "false",
        "docs": "Generate (once) .projenrc.json (in JSON). Set to \`false\` in order to disable .projenrc.json generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJson",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJson",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-json",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.json.",
        "featured": false,
        "fqn": "projen.ProjenrcJsonOptions",
        "fullType": {
          "fqn": "projen.ProjenrcJsonOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsonOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJsonOptions",
        ],
        "simpleType": "ProjenrcJsonOptions",
        "switch": "projenrc-json-options",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "featured": false,
        "fqn": "projen.javascript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.javascript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-js-options",
      },
      {
        "default": "false",
        "docs": "Use TypeScript for your projenrc file (\`.projenrc.ts\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "initialValue": "true",
        "jsonLike": true,
        "name": "projenrcTs",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "projenrcTs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-ts",
      },
      {
        "docs": "Options for .projenrc.ts.",
        "featured": false,
        "fqn": "projen.typescript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.typescript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "projenrcTsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-ts-options",
      },
      {
        "default": ""PROJEN_GITHUB_TOKEN"",
        "deprecated": true,
        "docs": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenTokenSecret",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenTokenSecret",
        ],
        "simpleType": "string",
        "switch": "projen-token-secret",
      },
      {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenVersion",
        ],
        "simpleType": "string",
        "switch": "projen-version",
      },
      {
        "default": "false",
        "docs": "Instead of actually publishing to package managers, just print the publishing command.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishDryRun",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishDryRun",
        ],
        "simpleType": "boolean",
        "switch": "publish-dry-run",
      },
      {
        "default": "false",
        "docs": "Define publishing tasks that can be executed manually as well as workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishTasks",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishTasks",
        ],
        "simpleType": "boolean",
        "switch": "publish-tasks",
      },
      {
        "default": "- no publishing",
        "docs": "Publish Go bindings to a git repository.",
        "featured": false,
        "fqn": "projen.cdk.JsiiGoTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiGoTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "publishToGo",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "publishToGo",
        ],
        "simpleType": "JsiiGoTarget",
        "switch": "publish-to-go",
      },
      {
        "default": "- no publishing",
        "docs": "Publish to maven.",
        "featured": false,
        "fqn": "projen.cdk.JsiiJavaTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiJavaTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "publishToMaven",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "publishToMaven",
        ],
        "simpleType": "JsiiJavaTarget",
        "switch": "publish-to-maven",
      },
      {
        "default": "- no publishing",
        "docs": "Publish to NuGet.",
        "featured": false,
        "fqn": "projen.cdk.JsiiDotNetTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiDotNetTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "publishToNuget",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "publishToNuget",
        ],
        "simpleType": "JsiiDotNetTarget",
        "switch": "publish-to-nuget",
      },
      {
        "default": "- no publishing",
        "docs": "Publish to pypi.",
        "featured": false,
        "fqn": "projen.cdk.JsiiPythonTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiPythonTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "publishToPypi",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "publishToPypi",
        ],
        "simpleType": "JsiiPythonTarget",
        "switch": "publish-to-pypi",
      },
      {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplate",
        ],
        "simpleType": "boolean",
        "switch": "pull-request-template",
      },
      {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplateContents",
        ],
        "simpleType": "unknown",
        "switch": "pull-request-template-contents",
      },
      {
        "deprecated": true,
        "featured": false,
        "fqn": "projen.cdk.JsiiPythonTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiPythonTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "python",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "python",
        ],
        "simpleType": "JsiiPythonTarget",
        "switch": "python",
      },
      {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "featured": false,
        "fqn": "projen.SampleReadmeProps",
        "fullType": {
          "fqn": "projen.SampleReadmeProps",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "readme",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "readme",
        ],
        "simpleType": "SampleReadmeProps",
        "switch": "readme",
      },
      {
        "default": "ReleasableCommits.everyCommit()",
        "docs": "Find commits that should be considered releasable Used to decide if a release is required.",
        "featured": false,
        "fqn": "projen.ReleasableCommits",
        "fullType": {
          "fqn": "projen.ReleasableCommits",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releasableCommits",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releasableCommits",
        ],
        "simpleType": "ReleasableCommits",
        "switch": "releasable-commits",
      },
      {
        "default": "- true (false for subprojects)",
        "docs": "Add release management to this project.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "release",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "release",
        ],
        "simpleType": "boolean",
        "switch": "release",
      },
      {
        "default": "- no additional branches are used for release. you can use
\`addBranch()\` to add additional branches.",
        "docs": "Defines additional release branches.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.release.BranchOptions",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "releaseBranches",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseBranches",
        ],
        "simpleType": "unknown",
        "switch": "release-branches",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseEveryCommit",
        ],
        "simpleType": "boolean",
        "switch": "release-every-commit",
      },
      {
        "default": "false",
        "docs": "Create a github issue on every failed publishing task.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseFailureIssue",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssue",
        ],
        "simpleType": "boolean",
        "switch": "release-failure-issue",
      },
      {
        "default": ""failed-release"",
        "docs": "The label to apply to issues indicating publish failures.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseFailureIssueLabel",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssueLabel",
        ],
        "simpleType": "string",
        "switch": "release-failure-issue-label",
      },
      {
        "default": "- no scheduled releases",
        "deprecated": true,
        "docs": "CRON schedule to trigger new releases.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseSchedule",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseSchedule",
        ],
        "simpleType": "string",
        "switch": "release-schedule",
      },
      {
        "default": ""v"",
        "docs": "Automatically add the given prefix to release tags. Useful if you are releasing on multiple branches with overlapping version numbers.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseTagPrefix",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTagPrefix",
        ],
        "simpleType": "string",
        "switch": "release-tag-prefix",
      },
      {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseToNpm",
        ],
        "simpleType": "boolean",
        "switch": "release-to-npm",
      },
      {
        "default": "- Continuous releases (\`ReleaseTrigger.continuous()\`)",
        "docs": "The release trigger to use.",
        "featured": false,
        "fqn": "projen.release.ReleaseTrigger",
        "fullType": {
          "fqn": "projen.release.ReleaseTrigger",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releaseTrigger",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTrigger",
        ],
        "simpleType": "ReleaseTrigger",
        "switch": "release-trigger",
      },
      {
        "default": "- true if not a subproject",
        "deprecated": true,
        "docs": "DEPRECATED: renamed to \`release\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "release-workflow",
      },
      {
        "default": ""release"",
        "docs": "The name of the default release workflow.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseWorkflowName",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowName",
        ],
        "simpleType": "string",
        "switch": "release-workflow-name",
      },
      {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowSetupSteps",
        ],
        "simpleType": "unknown",
        "switch": "release-workflow-setup-steps",
      },
      {
        "default": "false",
        "docs": "Use renovatebot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "renovatebot",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebot",
        ],
        "simpleType": "boolean",
        "switch": "renovatebot",
      },
      {
        "default": "- default options",
        "docs": "Options for renovatebot.",
        "featured": false,
        "fqn": "projen.RenovatebotOptions",
        "fullType": {
          "fqn": "projen.RenovatebotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "renovatebotOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebotOptions",
        ],
        "simpleType": "RenovatebotOptions",
        "switch": "renovatebot-options",
      },
      {
        "docs": "The repository is the location where the actual code for your package lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repository",
        ],
        "simpleType": "string",
        "switch": "repository",
      },
      {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repositoryDirectory",
        ],
        "simpleType": "string",
        "switch": "repository-directory",
      },
      {
        "default": "$GIT_REMOTE",
        "docs": "Git repository URL.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$GIT_REMOTE",
        "jsonLike": true,
        "name": "repositoryUrl",
        "parent": "JsiiProjectOptions",
        "path": [
          "repositoryUrl",
        ],
        "simpleType": "string",
        "switch": "repository-url",
      },
      {
        "default": ""."",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "rootdir",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "rootdir",
        ],
        "simpleType": "string",
        "switch": "rootdir",
      },
      {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "sampleCode",
        ],
        "simpleType": "boolean",
        "switch": "sample-code",
      },
      {
        "default": "- fetch all scoped packages from the public npm registry",
        "docs": "Options for privately hosted scoped packages.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.javascript.ScopedPackagesOptions",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "scopedPackagesOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scopedPackagesOptions",
        ],
        "simpleType": "unknown",
        "switch": "scoped-packages-options",
      },
      {
        "default": "{}",
        "deprecated": true,
        "docs": "npm scripts to include.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scripts",
        ],
        "simpleType": "unknown",
        "switch": "scripts",
      },
      {
        "default": ""src"",
        "docs": "Typescript sources directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "srcdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "srcdir",
        ],
        "simpleType": "string",
        "switch": "srcdir",
      },
      {
        "docs": "Package's Stability.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "stability",
        ],
        "simpleType": "string",
        "switch": "stability",
      },
      {
        "default": "false",
        "docs": "Auto-close of stale issues and pull request.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "stale",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "stale",
        ],
        "simpleType": "boolean",
        "switch": "stale",
      },
      {
        "default": "- see defaults in \`StaleOptions\`",
        "docs": "Auto-close stale issues and pull requests.",
        "featured": false,
        "fqn": "projen.github.StaleOptions",
        "fullType": {
          "fqn": "projen.github.StaleOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "staleOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "staleOptions",
        ],
        "simpleType": "StaleOptions",
        "switch": "stale-options",
      },
      {
        "default": ""test"",
        "docs": "Jest tests directory. Tests files should be named \`xxx.test.ts\`.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "testdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "testdir",
        ],
        "simpleType": "string",
        "switch": "testdir",
      },
      {
        "default": "- default options",
        "docs": "Custom TSConfig.",
        "featured": false,
        "fqn": "projen.javascript.TypescriptConfigOptions",
        "fullType": {
          "fqn": "projen.javascript.TypescriptConfigOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfig",
        ],
        "simpleType": "TypescriptConfigOptions",
        "switch": "tsconfig",
      },
      {
        "default": "- use the production tsconfig options",
        "docs": "Custom tsconfig options for the development tsconfig.json file (used for testing).",
        "featured": false,
        "fqn": "projen.javascript.TypescriptConfigOptions",
        "fullType": {
          "fqn": "projen.javascript.TypescriptConfigOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsconfigDev",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfigDev",
        ],
        "simpleType": "TypescriptConfigOptions",
        "switch": "tsconfig-dev",
      },
      {
        "default": ""tsconfig.dev.json"",
        "docs": "The name of the development tsconfig.json file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "tsconfigDevFile",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfigDevFile",
        ],
        "simpleType": "string",
        "switch": "tsconfig-dev-file",
      },
      {
        "docs": "Options for ts-jest.",
        "featured": false,
        "fqn": "projen.typescript.TsJestOptions",
        "fullType": {
          "fqn": "projen.typescript.TsJestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsJestOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsJestOptions",
        ],
        "simpleType": "TsJestOptions",
        "switch": "ts-jest-options",
      },
      {
        "default": ""latest"",
        "docs": "TypeScript version to use.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "typescriptVersion",
        ],
        "simpleType": "string",
        "switch": "typescript-version",
      },
      {
        "default": "- standard configuration applicable for GitHub repositories",
        "docs": "Custom configuration used when creating changelog with commit-and-tag-version package.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "any",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "versionrcOptions",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "versionrcOptions",
        ],
        "simpleType": "unknown",
        "switch": "versionrc-options",
      },
      {
        "default": "true",
        "docs": "Enable VSCode integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "vscode",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "vscode",
        ],
        "simpleType": "boolean",
        "switch": "vscode",
      },
      {
        "default": ""yarn install --frozen-lockfile && yarn projen"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowBootstrapSteps",
        ],
        "simpleType": "unknown",
        "switch": "workflow-bootstrap-steps",
      },
      {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowContainerImage",
        ],
        "simpleType": "string",
        "switch": "workflow-container-image",
      },
      {
        "default": "- GitHub Actions",
        "docs": "The git identity to use in workflows.",
        "featured": false,
        "fqn": "projen.github.GitIdentity",
        "fullType": {
          "fqn": "projen.github.GitIdentity",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowGitIdentity",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowGitIdentity",
        ],
        "simpleType": "GitIdentity",
        "switch": "workflow-git-identity",
      },
      {
        "default": "- \`minNodeVersion\` if set, otherwise \`lts/*\`.",
        "docs": "The node version used in GitHub Actions workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowNodeVersion",
        ],
        "simpleType": "string",
        "switch": "workflow-node-version",
      },
      {
        "default": "false",
        "docs": "Enable Node.js package cache in GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "workflowPackageCache",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowPackageCache",
        ],
        "simpleType": "boolean",
        "switch": "workflow-package-cache",
      },
      {
        "default": "["ubuntu-latest"]",
        "docs": "Github Runner selection labels.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowRunsOn",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOn",
        ],
        "simpleType": "unknown",
        "switch": "workflow-runs-on",
      },
      {
        "docs": "Github Runner Group selection options.",
        "featured": false,
        "fqn": "projen.GroupRunnerOptions",
        "fullType": {
          "fqn": "projen.GroupRunnerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowRunsOnGroup",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOnGroup",
        ],
        "simpleType": "GroupRunnerOptions",
        "switch": "workflow-runs-on-group",
      },
      {
        "default": "- Yarn Berry v4 with all default options",
        "docs": "Options for Yarn Berry.",
        "featured": false,
        "fqn": "projen.javascript.YarnBerryOptions",
        "fullType": {
          "fqn": "projen.javascript.YarnBerryOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "yarnBerryOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "yarnBerryOptions",
        ],
        "simpleType": "YarnBerryOptions",
        "switch": "yarn-berry-options",
      },
    ],
    "pjid": "cdk8s-construct",
    "typename": "cdk8s.ConstructLibraryCdk8s",
  },
  {
    "docs": "CDKTF construct library project.",
    "docsurl": "https://projen.io/docs/api/cdktf#constructlibrarycdktf-",
    "fqn": "projen.cdktf.ConstructLibraryCdktf",
    "moduleName": "projen",
    "options": [
      {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "allowLibraryDependencies",
        ],
        "simpleType": "boolean",
        "switch": "allow-library-dependencies",
      },
      {
        "default": ""dist"",
        "docs": "A directory which will contain build artifacts.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "artifactsDirectory",
        ],
        "simpleType": "string",
        "switch": "artifacts-directory",
      },
      {
        "default": "$GIT_USER_NAME",
        "docs": "The name of the library author.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$GIT_USER_NAME",
        "jsonLike": true,
        "name": "author",
        "parent": "JsiiProjectOptions",
        "path": [
          "author",
        ],
        "simpleType": "string",
        "switch": "author",
      },
      {
        "default": "$GIT_USER_EMAIL",
        "docs": "Email or URL of the library author.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$GIT_USER_EMAIL",
        "jsonLike": true,
        "name": "authorAddress",
        "parent": "JsiiProjectOptions",
        "path": [
          "authorAddress",
        ],
        "simpleType": "string",
        "switch": "author-address",
      },
      {
        "docs": "Author's e-mail.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorEmail",
        ],
        "simpleType": "string",
        "switch": "author-email",
      },
      {
        "docs": "Author's name.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorName",
        ],
        "simpleType": "string",
        "switch": "author-name",
      },
      {
        "docs": "Is the author an organization.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorOrganization",
        ],
        "simpleType": "boolean",
        "switch": "author-organization",
      },
      {
        "docs": "Author's URL / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorUrl",
        ],
        "simpleType": "string",
        "switch": "author-url",
      },
      {
        "default": "- auto approve is disabled",
        "docs": "Enable and configure the 'auto approve' workflow.",
        "featured": false,
        "fqn": "projen.github.AutoApproveOptions",
        "fullType": {
          "fqn": "projen.github.AutoApproveOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoApproveOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoApproveOptions",
        ],
        "simpleType": "AutoApproveOptions",
        "switch": "auto-approve-options",
      },
      {
        "default": "- true",
        "docs": "Automatically approve deps upgrade PRs, allowing them to be merged by mergify (if configued).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoApproveUpgrades",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "autoApproveUpgrades",
        ],
        "simpleType": "boolean",
        "switch": "auto-approve-upgrades",
      },
      {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "autoDetectBin",
        ],
        "simpleType": "boolean",
        "switch": "auto-detect-bin",
      },
      {
        "default": "true",
        "docs": "Enable automatic merging on GitHub.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoMerge",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMerge",
        ],
        "simpleType": "boolean",
        "switch": "auto-merge",
      },
      {
        "default": "- see defaults in \`AutoMergeOptions\`",
        "docs": "Configure options for automatic merging on GitHub.",
        "featured": false,
        "fqn": "projen.github.AutoMergeOptions",
        "fullType": {
          "fqn": "projen.github.AutoMergeOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoMergeOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMergeOptions",
        ],
        "simpleType": "AutoMergeOptions",
        "switch": "auto-merge-options",
      },
      {
        "docs": "Binary programs vended with your module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bin",
        ],
        "simpleType": "unknown",
        "switch": "bin",
      },
      {
        "docs": "The email address to which issues should be reported.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsEmail",
        ],
        "simpleType": "string",
        "switch": "bugs-email",
      },
      {
        "docs": "The url to your project's issue tracker.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsUrl",
        ],
        "simpleType": "string",
        "switch": "bugs-url",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "build-workflow",
      },
      {
        "docs": "Options for PR build workflow.",
        "featured": false,
        "fqn": "projen.javascript.BuildWorkflowOptions",
        "fullType": {
          "fqn": "projen.javascript.BuildWorkflowOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowOptions",
        ],
        "simpleType": "BuildWorkflowOptions",
        "switch": "build-workflow-options",
      },
      {
        "default": ""{ pullRequest: {}, workflowDispatch: {} }"",
        "deprecated": true,
        "docs": "Build workflow triggers.",
        "featured": false,
        "fqn": "projen.github.workflows.Triggers",
        "fullType": {
          "fqn": "projen.github.workflows.Triggers",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowTriggers",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowTriggers",
        ],
        "simpleType": "Triggers",
        "switch": "build-workflow-triggers",
      },
      {
        "default": "- A recent version of "commit-and-tag-version"",
        "docs": "The \`commit-and-tag-version\` compatible package used to bump the package version, as a dependency string.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bumpPackage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "bumpPackage",
        ],
        "simpleType": "string",
        "switch": "bump-package",
      },
      {
        "docs": "List of dependencies to bundle into this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bundledDeps",
        ],
        "simpleType": "unknown",
        "switch": "bundled-deps",
      },
      {
        "docs": "Options for \`Bundler\`.",
        "featured": false,
        "fqn": "projen.javascript.BundlerOptions",
        "fullType": {
          "fqn": "projen.javascript.BundlerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "bundlerOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "bundlerOptions",
        ],
        "simpleType": "BundlerOptions",
        "switch": "bundler-options",
      },
      {
        "default": ""latest"",
        "docs": "The version of Bun to use if using Bun as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bunVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bunVersion",
        ],
        "simpleType": "string",
        "switch": "bun-version",
      },
      {
        "default": "- new version will be announced",
        "docs": "Libraries will be picked up by the construct catalog when they are published to npm as jsii modules and will be published under:.",
        "featured": false,
        "fqn": "projen.cdk.Catalog",
        "fullType": {
          "fqn": "projen.cdk.Catalog",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "catalog",
        "optional": true,
        "parent": "ConstructLibraryOptions",
        "path": [
          "catalog",
        ],
        "simpleType": "Catalog",
        "switch": "catalog",
      },
      {
        "default": ""^0.13.0"",
        "docs": "Minimum target version this library is tested against.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""^0.13.0"",
        "jsonLike": true,
        "name": "cdktfVersion",
        "parent": "ConstructLibraryCdktfOptions",
        "path": [
          "cdktfVersion",
        ],
        "simpleType": "string",
        "switch": "cdktf-version",
      },
      {
        "default": "- no license checks are run during the build and all licenses will be accepted",
        "docs": "Configure which licenses should be deemed acceptable for use by dependencies.",
        "featured": false,
        "fqn": "projen.javascript.LicenseCheckerOptions",
        "fullType": {
          "fqn": "projen.javascript.LicenseCheckerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "checkLicenses",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "checkLicenses",
        ],
        "simpleType": "LicenseCheckerOptions",
        "switch": "check-licenses",
      },
      {
        "default": "- true, but false for subprojects",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "clobber",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "clobber",
        ],
        "simpleType": "boolean",
        "switch": "clobber",
      },
      {
        "default": "- undefined",
        "docs": "Options for npm packages using AWS CodeArtifact.",
        "featured": false,
        "fqn": "projen.javascript.CodeArtifactOptions",
        "fullType": {
          "fqn": "projen.javascript.CodeArtifactOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "codeArtifactOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "codeArtifactOptions",
        ],
        "simpleType": "CodeArtifactOptions",
        "switch": "code-artifact-options",
      },
      {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v4 A secret is required for private repos. Configured with \`@codeCovTokenSecret\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCov",
        ],
        "simpleType": "boolean",
        "switch": "code-cov",
      },
      {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCovTokenSecret",
        ],
        "simpleType": "string",
        "switch": "code-cov-token-secret",
      },
      {
        "default": "true",
        "docs": "Whether to commit the managed files by default.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "commitGenerated",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "commitGenerated",
        ],
        "simpleType": "boolean",
        "switch": "commit-generated",
      },
      {
        "default": "false",
        "docs": "Automatically run API compatibility test against the latest version published to npm after compilation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "compat",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "compat",
        ],
        "simpleType": "boolean",
        "switch": "compat",
      },
      {
        "default": "".compatignore"",
        "docs": "Name of the ignore file for API compatibility tests.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "compatIgnore",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "compatIgnore",
        ],
        "simpleType": "string",
        "switch": "compat-ignore",
      },
      {
        "default": "false",
        "docs": "Emit a compressed version of the assembly.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "compressAssembly",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "compressAssembly",
        ],
        "simpleType": "boolean",
        "switch": "compress-assembly",
      },
      {
        "default": ""^10.3.0"",
        "docs": "Construct version to use.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "constructsVersion",
        "optional": true,
        "parent": "ConstructLibraryCdktfOptions",
        "path": [
          "constructsVersion",
        ],
        "simpleType": "string",
        "switch": "constructs-version",
      },
      {
        "default": "- defaults to the value of authorName or "" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightOwner",
        ],
        "simpleType": "string",
        "switch": "copyright-owner",
      },
      {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightPeriod",
        ],
        "simpleType": "string",
        "switch": "copyright-period",
      },
      {
        "default": ""main"",
        "docs": "The name of the main release branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""main"",
        "jsonLike": true,
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": [
          "defaultReleaseBranch",
        ],
        "simpleType": "string",
        "switch": "default-release-branch",
      },
      {
        "default": "false",
        "docs": "Use dependabot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabot",
        ],
        "simpleType": "boolean",
        "switch": "dependabot",
      },
      {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "featured": false,
        "fqn": "projen.github.DependabotOptions",
        "fullType": {
          "fqn": "projen.github.DependabotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabotOptions",
        ],
        "simpleType": "DependabotOptions",
        "switch": "dependabot-options",
      },
      {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "deps",
        ],
        "simpleType": "unknown",
        "switch": "deps",
      },
      {
        "default": "true",
        "docs": "Use tasks and github workflows to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "depsUpgrade",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgrade",
        ],
        "simpleType": "boolean",
        "switch": "deps-upgrade",
      },
      {
        "default": "- default options",
        "docs": "Options for \`UpgradeDependencies\`.",
        "featured": false,
        "fqn": "projen.javascript.UpgradeDependenciesOptions",
        "fullType": {
          "fqn": "projen.javascript.UpgradeDependenciesOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "depsUpgradeOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgradeOptions",
        ],
        "simpleType": "UpgradeDependenciesOptions",
        "switch": "deps-upgrade-options",
      },
      {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "description",
        ],
        "simpleType": "string",
        "switch": "description",
      },
      {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "devContainer",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "devContainer",
        ],
        "simpleType": "boolean",
        "switch": "dev-container",
      },
      {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "devDeps",
        ],
        "simpleType": "unknown",
        "switch": "dev-deps",
      },
      {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "disableTsconfig",
        ],
        "simpleType": "boolean",
        "switch": "disable-tsconfig",
      },
      {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.dev.json\` file.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "disableTsconfigDev",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "disableTsconfigDev",
        ],
        "simpleType": "boolean",
        "switch": "disable-tsconfig-dev",
      },
      {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "docgen",
        ],
        "simpleType": "boolean",
        "switch": "docgen",
      },
      {
        "default": ""API.md"",
        "docs": "File path for generated docs.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "docgenFilePath",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "docgenFilePath",
        ],
        "simpleType": "string",
        "switch": "docgen-file-path",
      },
      {
        "default": ""docs"",
        "docs": "Docs directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "docsDirectory",
        ],
        "simpleType": "string",
        "switch": "docs-directory",
      },
      {
        "deprecated": true,
        "featured": false,
        "fqn": "projen.cdk.JsiiDotNetTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiDotNetTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "dotnet",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "dotnet",
        ],
        "simpleType": "JsiiDotNetTarget",
        "switch": "dotnet",
      },
      {
        "default": ""lib/index.js"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "entrypoint",
        ],
        "simpleType": "string",
        "switch": "entrypoint",
      },
      {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "entrypointTypes",
        ],
        "simpleType": "string",
        "switch": "entrypoint-types",
      },
      {
        "default": "true",
        "docs": "Setup eslint.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "eslint",
        ],
        "simpleType": "boolean",
        "switch": "eslint",
      },
      {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "featured": false,
        "fqn": "projen.javascript.EslintOptions",
        "fullType": {
          "fqn": "projen.javascript.EslintOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "eslintOptions",
        ],
        "simpleType": "EslintOptions",
        "switch": "eslint-options",
      },
      {
        "docs": "Accepts a list of glob patterns.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "excludeTypescript",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "excludeTypescript",
        ],
        "simpleType": "unknown",
        "switch": "exclude-typescript",
      },
      {
        "default": "true",
        "docs": "Enable GitHub integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "github",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "github",
        ],
        "simpleType": "boolean",
        "switch": "github",
      },
      {
        "default": "- see GitHubOptions",
        "docs": "Options for GitHub integration.",
        "featured": false,
        "fqn": "projen.github.GitHubOptions",
        "fullType": {
          "fqn": "projen.github.GitHubOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "githubOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "githubOptions",
        ],
        "simpleType": "GitHubOptions",
        "switch": "github-options",
      },
      {
        "docs": "Additional entries to .gitignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "gitignore",
        ],
        "simpleType": "unknown",
        "switch": "gitignore",
      },
      {
        "docs": "Configuration options for .gitignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitIgnoreOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "git-ignore-options",
      },
      {
        "docs": "Configuration options for git.",
        "featured": false,
        "fqn": "projen.GitOptions",
        "fullType": {
          "fqn": "projen.GitOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitOptions",
        ],
        "simpleType": "GitOptions",
        "switch": "git-options",
      },
      {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "gitpod",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "gitpod",
        ],
        "simpleType": "boolean",
        "switch": "gitpod",
      },
      {
        "docs": "Package's Homepage / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "homepage",
        ],
        "simpleType": "string",
        "switch": "homepage",
      },
      {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jest",
        ],
        "simpleType": "boolean",
        "switch": "jest",
      },
      {
        "default": "- default options",
        "docs": "Jest options.",
        "featured": false,
        "fqn": "projen.javascript.JestOptions",
        "fullType": {
          "fqn": "projen.javascript.JestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jestOptions",
        ],
        "simpleType": "JestOptions",
        "switch": "jest-options",
      },
      {
        "default": ""latest"",
        "docs": "Version requirement of \`publib\` which is used to publish modules to npm.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "jsiiReleaseVersion",
        ],
        "simpleType": "string",
        "switch": "jsii-release-version",
      },
      {
        "default": ""~5.6.0"",
        "docs": "Version of the jsii compiler to use.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""~5.7.0"",
        "jsonLike": true,
        "name": "jsiiVersion",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "jsiiVersion",
        ],
        "simpleType": "string",
        "switch": "jsii-version",
      },
      {
        "docs": "Keywords to include in \`package.json\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "keywords",
        ],
        "simpleType": "unknown",
        "switch": "keywords",
      },
      {
        "default": ""lib"",
        "docs": "Typescript  artifacts output directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "libdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "libdir",
        ],
        "simpleType": "string",
        "switch": "libdir",
      },
      {
        "default": ""Apache-2.0"",
        "docs": "License's SPDX identifier.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "license",
        ],
        "simpleType": "string",
        "switch": "license",
      },
      {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "licensed",
        ],
        "simpleType": "boolean",
        "switch": "licensed",
      },
      {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "featured": false,
        "fqn": "projen.LoggerOptions",
        "fullType": {
          "fqn": "projen.LoggerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "logging",
        ],
        "simpleType": "LoggerOptions",
        "switch": "logging",
      },
      {
        "default": "- Major version is not enforced.",
        "docs": "Major version to release from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "majorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "majorVersion",
        ],
        "simpleType": "number",
        "switch": "major-version",
      },
      {
        "default": "- no maximum version is enforced",
        "docs": "The maximum node version supported by this package. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "maxNodeVersion",
        ],
        "simpleType": "string",
        "switch": "max-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Whether mergify should be enabled on this repository or not.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mergify",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergify",
        ],
        "simpleType": "boolean",
        "switch": "mergify",
      },
      {
        "default": "- default options",
        "deprecated": true,
        "docs": "Options for mergify.",
        "featured": false,
        "fqn": "projen.github.MergifyOptions",
        "fullType": {
          "fqn": "projen.github.MergifyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergifyOptions",
        ],
        "simpleType": "MergifyOptions",
        "switch": "mergify-options",
      },
      {
        "default": "- No minimum version is being enforced",
        "docs": "Minimal Major version to release.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "minMajorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "minMajorVersion",
        ],
        "simpleType": "number",
        "switch": "min-major-version",
      },
      {
        "default": "- no minimum version is enforced",
        "docs": "The minimum node version required by this package to function. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "minNodeVersion",
        ],
        "simpleType": "string",
        "switch": "min-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "mutableBuild",
        ],
        "simpleType": "boolean",
        "switch": "mutable-build",
      },
      {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$BASEDIR",
        "jsonLike": true,
        "name": "name",
        "parent": "ProjectOptions",
        "path": [
          "name",
        ],
        "simpleType": "string",
        "switch": "name",
      },
      {
        "default": "- The next version will be determined based on the commit history and project settings.",
        "docs": "A shell command to control the next version to release.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "nextVersionCommand",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "nextVersionCommand",
        ],
        "simpleType": "string",
        "switch": "next-version-command",
      },
      {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "featured": false,
        "fqn": "projen.javascript.NpmAccess",
        "fullType": {
          "fqn": "projen.javascript.NpmAccess",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmAccess",
        ],
        "simpleType": "NpmAccess",
        "switch": "npm-access",
      },
      {
        "default": ""latest"",
        "docs": "The npmDistTag to use when publishing from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmDistTag",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "npmDistTag",
        ],
        "simpleType": "string",
        "switch": "npm-dist-tag",
      },
      {
        "deprecated": true,
        "docs": "Additional entries to .npmignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignore",
        ],
        "simpleType": "unknown",
        "switch": "npmignore",
      },
      {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignoreEnabled",
        ],
        "simpleType": "boolean",
        "switch": "npmignore-enabled",
      },
      {
        "docs": "Configuration options for .npmignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "npmIgnoreOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "npm-ignore-options",
      },
      {
        "default": "- true for public packages, false otherwise",
        "docs": "Should provenance statements be generated when the package is published.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmProvenance",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmProvenance",
        ],
        "simpleType": "boolean",
        "switch": "npm-provenance",
      },
      {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistry",
        ],
        "simpleType": "string",
        "switch": "npm-registry",
      },
      {
        "default": ""https://registry.npmjs.org"",
        "docs": "The base URL of the npm package registry.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistryUrl",
        ],
        "simpleType": "string",
        "switch": "npm-registry-url",
      },
      {
        "default": ""NPM_TOKEN"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmTokenSecret",
        ],
        "simpleType": "string",
        "switch": "npm-token-secret",
      },
      {
        "default": ""."",
        "docs": "The root directory of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "outdir",
        ],
        "simpleType": "string",
        "switch": "outdir",
      },
      {
        "default": "true",
        "docs": "Defines a \`package\` task that will produce an npm tarball under the artifacts directory (e.g. \`dist\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "package",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "package",
        ],
        "simpleType": "boolean",
        "switch": "package",
      },
      {
        "default": "NodePackageManager.YARN_CLASSIC",
        "docs": "The Node Package Manager used to execute scripts.",
        "featured": false,
        "fqn": "projen.javascript.NodePackageManager",
        "fullType": {
          "fqn": "projen.javascript.NodePackageManager",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageManager",
        ],
        "simpleType": "NodePackageManager",
        "switch": "package-manager",
      },
      {
        "default": "- defaults to project name",
        "docs": "The "name" in package.json.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageName",
        ],
        "simpleType": "string",
        "switch": "package-name",
      },
      {
        "docs": "The parent project, if this project is part of a bigger project.",
        "featured": false,
        "fqn": "projen.Project",
        "fullType": {
          "fqn": "projen.Project",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "parent",
        ],
        "simpleType": "Project",
        "switch": "parent",
      },
      {
        "docs": "Options for \`peerDeps\`.",
        "featured": false,
        "fqn": "projen.javascript.PeerDependencyOptions",
        "fullType": {
          "fqn": "projen.javascript.PeerDependencyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDependencyOptions",
        ],
        "simpleType": "PeerDependencyOptions",
        "switch": "peer-dependency-options",
      },
      {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDeps",
        ],
        "simpleType": "unknown",
        "switch": "peer-deps",
      },
      {
        "default": ""9"",
        "docs": "The version of PNPM to use if using PNPM as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "pnpmVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "pnpmVersion",
        ],
        "simpleType": "string",
        "switch": "pnpm-version",
      },
      {
        "default": "[]",
        "docs": "Steps to execute after build as part of the release workflow.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "postBuildSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "postBuildSteps",
        ],
        "simpleType": "unknown",
        "switch": "post-build-steps",
      },
      {
        "default": "- normal semantic versions",
        "docs": "Bump versions from the default branch as pre-releases (e.g. "beta", "alpha", "pre").",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "prerelease",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "prerelease",
        ],
        "simpleType": "string",
        "switch": "prerelease",
      },
      {
        "default": "false",
        "docs": "Setup prettier.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "prettier",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettier",
        ],
        "simpleType": "boolean",
        "switch": "prettier",
      },
      {
        "default": "- default options",
        "docs": "Prettier options.",
        "featured": false,
        "fqn": "projen.javascript.PrettierOptions",
        "fullType": {
          "fqn": "projen.javascript.PrettierOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "prettierOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettierOptions",
        ],
        "simpleType": "PrettierOptions",
        "switch": "prettier-options",
      },
      {
        "default": "ProjectType.UNKNOWN",
        "deprecated": true,
        "docs": "Which type of project this is (library/app).",
        "featured": false,
        "fqn": "projen.ProjectType",
        "fullType": {
          "fqn": "projen.ProjectType",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "projectType",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projectType",
        ],
        "simpleType": "ProjectType",
        "switch": "project-type",
      },
      {
        "default": ""npx projen"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenCommand",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenCommand",
        ],
        "simpleType": "string",
        "switch": "projen-command",
      },
      {
        "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
        "docs": "Choose a method of providing GitHub API access for projen workflows.",
        "featured": false,
        "fqn": "projen.github.GithubCredentials",
        "fullType": {
          "fqn": "projen.github.GithubCredentials",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "projenCredentials",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenCredentials",
        ],
        "simpleType": "GithubCredentials",
        "switch": "projen-credentials",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Indicates of "projen" should be installed as a devDependency.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenDevDependency",
        ],
        "simpleType": "boolean",
        "switch": "projen-dev-dependency",
      },
      {
        "default": "- true if projenrcJson is false",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-js",
      },
      {
        "default": "false",
        "docs": "Generate (once) .projenrc.json (in JSON). Set to \`false\` in order to disable .projenrc.json generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJson",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJson",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-json",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.json.",
        "featured": false,
        "fqn": "projen.ProjenrcJsonOptions",
        "fullType": {
          "fqn": "projen.ProjenrcJsonOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsonOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJsonOptions",
        ],
        "simpleType": "ProjenrcJsonOptions",
        "switch": "projenrc-json-options",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "featured": false,
        "fqn": "projen.javascript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.javascript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-js-options",
      },
      {
        "default": "false",
        "docs": "Use TypeScript for your projenrc file (\`.projenrc.ts\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "initialValue": "true",
        "jsonLike": true,
        "name": "projenrcTs",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "projenrcTs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-ts",
      },
      {
        "docs": "Options for .projenrc.ts.",
        "featured": false,
        "fqn": "projen.typescript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.typescript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "projenrcTsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-ts-options",
      },
      {
        "default": ""PROJEN_GITHUB_TOKEN"",
        "deprecated": true,
        "docs": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenTokenSecret",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenTokenSecret",
        ],
        "simpleType": "string",
        "switch": "projen-token-secret",
      },
      {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenVersion",
        ],
        "simpleType": "string",
        "switch": "projen-version",
      },
      {
        "default": "false",
        "docs": "Instead of actually publishing to package managers, just print the publishing command.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishDryRun",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishDryRun",
        ],
        "simpleType": "boolean",
        "switch": "publish-dry-run",
      },
      {
        "default": "false",
        "docs": "Define publishing tasks that can be executed manually as well as workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishTasks",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishTasks",
        ],
        "simpleType": "boolean",
        "switch": "publish-tasks",
      },
      {
        "default": "- no publishing",
        "docs": "Publish Go bindings to a git repository.",
        "featured": false,
        "fqn": "projen.cdk.JsiiGoTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiGoTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "publishToGo",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "publishToGo",
        ],
        "simpleType": "JsiiGoTarget",
        "switch": "publish-to-go",
      },
      {
        "default": "- no publishing",
        "docs": "Publish to maven.",
        "featured": false,
        "fqn": "projen.cdk.JsiiJavaTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiJavaTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "publishToMaven",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "publishToMaven",
        ],
        "simpleType": "JsiiJavaTarget",
        "switch": "publish-to-maven",
      },
      {
        "default": "- no publishing",
        "docs": "Publish to NuGet.",
        "featured": false,
        "fqn": "projen.cdk.JsiiDotNetTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiDotNetTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "publishToNuget",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "publishToNuget",
        ],
        "simpleType": "JsiiDotNetTarget",
        "switch": "publish-to-nuget",
      },
      {
        "default": "- no publishing",
        "docs": "Publish to pypi.",
        "featured": false,
        "fqn": "projen.cdk.JsiiPythonTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiPythonTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "publishToPypi",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "publishToPypi",
        ],
        "simpleType": "JsiiPythonTarget",
        "switch": "publish-to-pypi",
      },
      {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplate",
        ],
        "simpleType": "boolean",
        "switch": "pull-request-template",
      },
      {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplateContents",
        ],
        "simpleType": "unknown",
        "switch": "pull-request-template-contents",
      },
      {
        "deprecated": true,
        "featured": false,
        "fqn": "projen.cdk.JsiiPythonTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiPythonTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "python",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "python",
        ],
        "simpleType": "JsiiPythonTarget",
        "switch": "python",
      },
      {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "featured": false,
        "fqn": "projen.SampleReadmeProps",
        "fullType": {
          "fqn": "projen.SampleReadmeProps",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "readme",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "readme",
        ],
        "simpleType": "SampleReadmeProps",
        "switch": "readme",
      },
      {
        "default": "ReleasableCommits.everyCommit()",
        "docs": "Find commits that should be considered releasable Used to decide if a release is required.",
        "featured": false,
        "fqn": "projen.ReleasableCommits",
        "fullType": {
          "fqn": "projen.ReleasableCommits",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releasableCommits",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releasableCommits",
        ],
        "simpleType": "ReleasableCommits",
        "switch": "releasable-commits",
      },
      {
        "default": "- true (false for subprojects)",
        "docs": "Add release management to this project.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "release",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "release",
        ],
        "simpleType": "boolean",
        "switch": "release",
      },
      {
        "default": "- no additional branches are used for release. you can use
\`addBranch()\` to add additional branches.",
        "docs": "Defines additional release branches.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.release.BranchOptions",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "releaseBranches",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseBranches",
        ],
        "simpleType": "unknown",
        "switch": "release-branches",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseEveryCommit",
        ],
        "simpleType": "boolean",
        "switch": "release-every-commit",
      },
      {
        "default": "false",
        "docs": "Create a github issue on every failed publishing task.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseFailureIssue",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssue",
        ],
        "simpleType": "boolean",
        "switch": "release-failure-issue",
      },
      {
        "default": ""failed-release"",
        "docs": "The label to apply to issues indicating publish failures.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseFailureIssueLabel",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssueLabel",
        ],
        "simpleType": "string",
        "switch": "release-failure-issue-label",
      },
      {
        "default": "- no scheduled releases",
        "deprecated": true,
        "docs": "CRON schedule to trigger new releases.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseSchedule",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseSchedule",
        ],
        "simpleType": "string",
        "switch": "release-schedule",
      },
      {
        "default": ""v"",
        "docs": "Automatically add the given prefix to release tags. Useful if you are releasing on multiple branches with overlapping version numbers.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseTagPrefix",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTagPrefix",
        ],
        "simpleType": "string",
        "switch": "release-tag-prefix",
      },
      {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseToNpm",
        ],
        "simpleType": "boolean",
        "switch": "release-to-npm",
      },
      {
        "default": "- Continuous releases (\`ReleaseTrigger.continuous()\`)",
        "docs": "The release trigger to use.",
        "featured": false,
        "fqn": "projen.release.ReleaseTrigger",
        "fullType": {
          "fqn": "projen.release.ReleaseTrigger",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releaseTrigger",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTrigger",
        ],
        "simpleType": "ReleaseTrigger",
        "switch": "release-trigger",
      },
      {
        "default": "- true if not a subproject",
        "deprecated": true,
        "docs": "DEPRECATED: renamed to \`release\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "release-workflow",
      },
      {
        "default": ""release"",
        "docs": "The name of the default release workflow.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseWorkflowName",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowName",
        ],
        "simpleType": "string",
        "switch": "release-workflow-name",
      },
      {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowSetupSteps",
        ],
        "simpleType": "unknown",
        "switch": "release-workflow-setup-steps",
      },
      {
        "default": "false",
        "docs": "Use renovatebot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "renovatebot",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebot",
        ],
        "simpleType": "boolean",
        "switch": "renovatebot",
      },
      {
        "default": "- default options",
        "docs": "Options for renovatebot.",
        "featured": false,
        "fqn": "projen.RenovatebotOptions",
        "fullType": {
          "fqn": "projen.RenovatebotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "renovatebotOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebotOptions",
        ],
        "simpleType": "RenovatebotOptions",
        "switch": "renovatebot-options",
      },
      {
        "docs": "The repository is the location where the actual code for your package lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repository",
        ],
        "simpleType": "string",
        "switch": "repository",
      },
      {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repositoryDirectory",
        ],
        "simpleType": "string",
        "switch": "repository-directory",
      },
      {
        "default": "$GIT_REMOTE",
        "docs": "Git repository URL.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$GIT_REMOTE",
        "jsonLike": true,
        "name": "repositoryUrl",
        "parent": "JsiiProjectOptions",
        "path": [
          "repositoryUrl",
        ],
        "simpleType": "string",
        "switch": "repository-url",
      },
      {
        "default": ""."",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "rootdir",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "rootdir",
        ],
        "simpleType": "string",
        "switch": "rootdir",
      },
      {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "sampleCode",
        ],
        "simpleType": "boolean",
        "switch": "sample-code",
      },
      {
        "default": "- fetch all scoped packages from the public npm registry",
        "docs": "Options for privately hosted scoped packages.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.javascript.ScopedPackagesOptions",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "scopedPackagesOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scopedPackagesOptions",
        ],
        "simpleType": "unknown",
        "switch": "scoped-packages-options",
      },
      {
        "default": "{}",
        "deprecated": true,
        "docs": "npm scripts to include.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scripts",
        ],
        "simpleType": "unknown",
        "switch": "scripts",
      },
      {
        "default": ""src"",
        "docs": "Typescript sources directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "srcdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "srcdir",
        ],
        "simpleType": "string",
        "switch": "srcdir",
      },
      {
        "docs": "Package's Stability.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "stability",
        ],
        "simpleType": "string",
        "switch": "stability",
      },
      {
        "default": "false",
        "docs": "Auto-close of stale issues and pull request.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "stale",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "stale",
        ],
        "simpleType": "boolean",
        "switch": "stale",
      },
      {
        "default": "- see defaults in \`StaleOptions\`",
        "docs": "Auto-close stale issues and pull requests.",
        "featured": false,
        "fqn": "projen.github.StaleOptions",
        "fullType": {
          "fqn": "projen.github.StaleOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "staleOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "staleOptions",
        ],
        "simpleType": "StaleOptions",
        "switch": "stale-options",
      },
      {
        "default": ""test"",
        "docs": "Jest tests directory. Tests files should be named \`xxx.test.ts\`.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "testdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "testdir",
        ],
        "simpleType": "string",
        "switch": "testdir",
      },
      {
        "default": "- default options",
        "docs": "Custom TSConfig.",
        "featured": false,
        "fqn": "projen.javascript.TypescriptConfigOptions",
        "fullType": {
          "fqn": "projen.javascript.TypescriptConfigOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfig",
        ],
        "simpleType": "TypescriptConfigOptions",
        "switch": "tsconfig",
      },
      {
        "default": "- use the production tsconfig options",
        "docs": "Custom tsconfig options for the development tsconfig.json file (used for testing).",
        "featured": false,
        "fqn": "projen.javascript.TypescriptConfigOptions",
        "fullType": {
          "fqn": "projen.javascript.TypescriptConfigOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsconfigDev",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfigDev",
        ],
        "simpleType": "TypescriptConfigOptions",
        "switch": "tsconfig-dev",
      },
      {
        "default": ""tsconfig.dev.json"",
        "docs": "The name of the development tsconfig.json file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "tsconfigDevFile",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfigDevFile",
        ],
        "simpleType": "string",
        "switch": "tsconfig-dev-file",
      },
      {
        "docs": "Options for ts-jest.",
        "featured": false,
        "fqn": "projen.typescript.TsJestOptions",
        "fullType": {
          "fqn": "projen.typescript.TsJestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsJestOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsJestOptions",
        ],
        "simpleType": "TsJestOptions",
        "switch": "ts-jest-options",
      },
      {
        "default": ""latest"",
        "docs": "TypeScript version to use.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "typescriptVersion",
        ],
        "simpleType": "string",
        "switch": "typescript-version",
      },
      {
        "default": "- standard configuration applicable for GitHub repositories",
        "docs": "Custom configuration used when creating changelog with commit-and-tag-version package.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "any",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "versionrcOptions",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "versionrcOptions",
        ],
        "simpleType": "unknown",
        "switch": "versionrc-options",
      },
      {
        "default": "true",
        "docs": "Enable VSCode integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "vscode",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "vscode",
        ],
        "simpleType": "boolean",
        "switch": "vscode",
      },
      {
        "default": ""yarn install --frozen-lockfile && yarn projen"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowBootstrapSteps",
        ],
        "simpleType": "unknown",
        "switch": "workflow-bootstrap-steps",
      },
      {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowContainerImage",
        ],
        "simpleType": "string",
        "switch": "workflow-container-image",
      },
      {
        "default": "- GitHub Actions",
        "docs": "The git identity to use in workflows.",
        "featured": false,
        "fqn": "projen.github.GitIdentity",
        "fullType": {
          "fqn": "projen.github.GitIdentity",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowGitIdentity",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowGitIdentity",
        ],
        "simpleType": "GitIdentity",
        "switch": "workflow-git-identity",
      },
      {
        "default": "- \`minNodeVersion\` if set, otherwise \`lts/*\`.",
        "docs": "The node version used in GitHub Actions workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowNodeVersion",
        ],
        "simpleType": "string",
        "switch": "workflow-node-version",
      },
      {
        "default": "false",
        "docs": "Enable Node.js package cache in GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "workflowPackageCache",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowPackageCache",
        ],
        "simpleType": "boolean",
        "switch": "workflow-package-cache",
      },
      {
        "default": "["ubuntu-latest"]",
        "docs": "Github Runner selection labels.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowRunsOn",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOn",
        ],
        "simpleType": "unknown",
        "switch": "workflow-runs-on",
      },
      {
        "docs": "Github Runner Group selection options.",
        "featured": false,
        "fqn": "projen.GroupRunnerOptions",
        "fullType": {
          "fqn": "projen.GroupRunnerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowRunsOnGroup",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOnGroup",
        ],
        "simpleType": "GroupRunnerOptions",
        "switch": "workflow-runs-on-group",
      },
      {
        "default": "- Yarn Berry v4 with all default options",
        "docs": "Options for Yarn Berry.",
        "featured": false,
        "fqn": "projen.javascript.YarnBerryOptions",
        "fullType": {
          "fqn": "projen.javascript.YarnBerryOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "yarnBerryOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "yarnBerryOptions",
        ],
        "simpleType": "YarnBerryOptions",
        "switch": "yarn-berry-options",
      },
    ],
    "pjid": "cdktf-construct",
    "typename": "cdktf.ConstructLibraryCdktf",
  },
  {
    "docs": "Java project.",
    "docsurl": "https://projen.io/docs/api/java#javaproject-",
    "fqn": "projen.java.JavaProject",
    "moduleName": "projen",
    "options": [
      {
        "default": ""my-app"",
        "docs": "The artifactId is generally the name that the project is known by.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""my-app"",
        "jsonLike": true,
        "name": "artifactId",
        "parent": "PomOptions",
        "path": [
          "artifactId",
        ],
        "simpleType": "string",
        "switch": "artifact-id",
      },
      {
        "default": "- auto approve is disabled",
        "docs": "Enable and configure the 'auto approve' workflow.",
        "featured": false,
        "fqn": "projen.github.AutoApproveOptions",
        "fullType": {
          "fqn": "projen.github.AutoApproveOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoApproveOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoApproveOptions",
        ],
        "simpleType": "AutoApproveOptions",
        "switch": "auto-approve-options",
      },
      {
        "default": "true",
        "docs": "Enable automatic merging on GitHub.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoMerge",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMerge",
        ],
        "simpleType": "boolean",
        "switch": "auto-merge",
      },
      {
        "default": "- see defaults in \`AutoMergeOptions\`",
        "docs": "Configure options for automatic merging on GitHub.",
        "featured": false,
        "fqn": "projen.github.AutoMergeOptions",
        "fullType": {
          "fqn": "projen.github.AutoMergeOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoMergeOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMergeOptions",
        ],
        "simpleType": "AutoMergeOptions",
        "switch": "auto-merge-options",
      },
      {
        "default": "- true, but false for subprojects",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "clobber",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "clobber",
        ],
        "simpleType": "boolean",
        "switch": "clobber",
      },
      {
        "default": "true",
        "docs": "Whether to commit the managed files by default.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "commitGenerated",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "commitGenerated",
        ],
        "simpleType": "boolean",
        "switch": "commit-generated",
      },
      {
        "default": "- defaults",
        "docs": "Compile options.",
        "featured": false,
        "fqn": "projen.java.MavenCompileOptions",
        "fullType": {
          "fqn": "projen.java.MavenCompileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "compileOptions",
        "optional": true,
        "parent": "JavaProjectCommonOptions",
        "path": [
          "compileOptions",
        ],
        "simpleType": "MavenCompileOptions",
        "switch": "compile-options",
      },
      {
        "default": "[]",
        "docs": "List of runtime dependencies for this project.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "deps",
        "optional": true,
        "parent": "JavaProjectCommonOptions",
        "path": [
          "deps",
        ],
        "simpleType": "unknown",
        "switch": "deps",
      },
      {
        "docs": "Description of a project is always good.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "description",
        "optional": true,
        "parent": "PomOptions",
        "path": [
          "description",
        ],
        "simpleType": "string",
        "switch": "description",
      },
      {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "devContainer",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "devContainer",
        ],
        "simpleType": "boolean",
        "switch": "dev-container",
      },
      {
        "default": ""dist/java"",
        "docs": "Final artifact output directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "distdir",
        "optional": true,
        "parent": "JavaProjectCommonOptions",
        "path": [
          "distdir",
        ],
        "simpleType": "string",
        "switch": "distdir",
      },
      {
        "default": "true",
        "docs": "Enable GitHub integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "github",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "github",
        ],
        "simpleType": "boolean",
        "switch": "github",
      },
      {
        "default": "- see GitHubOptions",
        "docs": "Options for GitHub integration.",
        "featured": false,
        "fqn": "projen.github.GitHubOptions",
        "fullType": {
          "fqn": "projen.github.GitHubOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "githubOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "githubOptions",
        ],
        "simpleType": "GitHubOptions",
        "switch": "github-options",
      },
      {
        "docs": "Configuration options for .gitignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitIgnoreOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "git-ignore-options",
      },
      {
        "docs": "Configuration options for git.",
        "featured": false,
        "fqn": "projen.GitOptions",
        "fullType": {
          "fqn": "projen.GitOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitOptions",
        ],
        "simpleType": "GitOptions",
        "switch": "git-options",
      },
      {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "gitpod",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "gitpod",
        ],
        "simpleType": "boolean",
        "switch": "gitpod",
      },
      {
        "default": ""org.acme"",
        "docs": "This is generally unique amongst an organization or a project.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""org.acme"",
        "jsonLike": true,
        "name": "groupId",
        "parent": "PomOptions",
        "path": [
          "groupId",
        ],
        "simpleType": "string",
        "switch": "group-id",
      },
      {
        "default": "true",
        "docs": "Include junit tests.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "junit",
        "optional": true,
        "parent": "JavaProjectCommonOptions",
        "path": [
          "junit",
        ],
        "simpleType": "boolean",
        "switch": "junit",
      },
      {
        "default": "- defaults",
        "docs": "junit options.",
        "featured": false,
        "fqn": "projen.java.JunitOptions",
        "fullType": {
          "fqn": "projen.java.JunitOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "junitOptions",
        "optional": true,
        "parent": "JavaProjectCommonOptions",
        "path": [
          "junitOptions",
        ],
        "simpleType": "JunitOptions",
        "switch": "junit-options",
      },
      {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "featured": false,
        "fqn": "projen.LoggerOptions",
        "fullType": {
          "fqn": "projen.LoggerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "logging",
        ],
        "simpleType": "LoggerOptions",
        "switch": "logging",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Whether mergify should be enabled on this repository or not.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mergify",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergify",
        ],
        "simpleType": "boolean",
        "switch": "mergify",
      },
      {
        "default": "- default options",
        "deprecated": true,
        "docs": "Options for mergify.",
        "featured": false,
        "fqn": "projen.github.MergifyOptions",
        "fullType": {
          "fqn": "projen.github.MergifyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergifyOptions",
        ],
        "simpleType": "MergifyOptions",
        "switch": "mergify-options",
      },
      {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$BASEDIR",
        "jsonLike": true,
        "name": "name",
        "parent": "ProjectOptions",
        "path": [
          "name",
        ],
        "simpleType": "string",
        "switch": "name",
      },
      {
        "default": ""."",
        "docs": "The root directory of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "outdir",
        ],
        "simpleType": "string",
        "switch": "outdir",
      },
      {
        "default": ""jar"",
        "docs": "Project packaging format.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "packaging",
        "optional": true,
        "parent": "PomOptions",
        "path": [
          "packaging",
        ],
        "simpleType": "string",
        "switch": "packaging",
      },
      {
        "default": "- defaults",
        "docs": "Packaging options.",
        "featured": false,
        "fqn": "projen.java.MavenPackagingOptions",
        "fullType": {
          "fqn": "projen.java.MavenPackagingOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "packagingOptions",
        "optional": true,
        "parent": "JavaProjectCommonOptions",
        "path": [
          "packagingOptions",
        ],
        "simpleType": "MavenPackagingOptions",
        "switch": "packaging-options",
      },
      {
        "docs": "The parent project, if this project is part of a bigger project.",
        "featured": false,
        "fqn": "projen.Project",
        "fullType": {
          "fqn": "projen.Project",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "parent",
        ],
        "simpleType": "Project",
        "switch": "parent",
      },
      {
        "docs": "A Parent Pom can be used to have a child project inherit properties/plugins/ect in order to reduce duplication and keep standards across a large amount of repos.",
        "featured": true,
        "fqn": "projen.java.ParentPom",
        "fullType": {
          "fqn": "projen.java.ParentPom",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "parentPom",
        "optional": true,
        "parent": "PomOptions",
        "path": [
          "parentPom",
        ],
        "simpleType": "ParentPom",
        "switch": "parent-pom",
      },
      {
        "default": "ProjectType.UNKNOWN",
        "deprecated": true,
        "docs": "Which type of project this is (library/app).",
        "featured": false,
        "fqn": "projen.ProjectType",
        "fullType": {
          "fqn": "projen.ProjectType",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "projectType",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projectType",
        ],
        "simpleType": "ProjectType",
        "switch": "project-type",
      },
      {
        "default": ""npx projen"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenCommand",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenCommand",
        ],
        "simpleType": "string",
        "switch": "projen-command",
      },
      {
        "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
        "docs": "Choose a method of providing GitHub API access for projen workflows.",
        "featured": false,
        "fqn": "projen.github.GithubCredentials",
        "fullType": {
          "fqn": "projen.github.GithubCredentials",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "projenCredentials",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenCredentials",
        ],
        "simpleType": "GithubCredentials",
        "switch": "projen-credentials",
      },
      {
        "default": "true",
        "docs": "Use projenrc in java.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJava",
        "optional": true,
        "parent": "JavaProjectCommonOptions",
        "path": [
          "projenrcJava",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-java",
      },
      {
        "default": "- default options",
        "docs": "Options related to projenrc in java.",
        "featured": false,
        "fqn": "projen.java.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.java.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJavaOptions",
        "optional": true,
        "parent": "JavaProjectCommonOptions",
        "path": [
          "projenrcJavaOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-java-options",
      },
      {
        "default": "false",
        "docs": "Generate (once) .projenrc.json (in JSON). Set to \`false\` in order to disable .projenrc.json generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJson",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJson",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-json",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.json.",
        "featured": false,
        "fqn": "projen.ProjenrcJsonOptions",
        "fullType": {
          "fqn": "projen.ProjenrcJsonOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsonOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJsonOptions",
        ],
        "simpleType": "ProjenrcJsonOptions",
        "switch": "projenrc-json-options",
      },
      {
        "default": ""PROJEN_GITHUB_TOKEN"",
        "deprecated": true,
        "docs": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenTokenSecret",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenTokenSecret",
        ],
        "simpleType": "string",
        "switch": "projen-token-secret",
      },
      {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "featured": false,
        "fqn": "projen.SampleReadmeProps",
        "fullType": {
          "fqn": "projen.SampleReadmeProps",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "readme",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "readme",
        ],
        "simpleType": "SampleReadmeProps",
        "switch": "readme",
      },
      {
        "default": "false",
        "docs": "Use renovatebot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "renovatebot",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebot",
        ],
        "simpleType": "boolean",
        "switch": "renovatebot",
      },
      {
        "default": "- default options",
        "docs": "Options for renovatebot.",
        "featured": false,
        "fqn": "projen.RenovatebotOptions",
        "fullType": {
          "fqn": "projen.RenovatebotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "renovatebotOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebotOptions",
        ],
        "simpleType": "RenovatebotOptions",
        "switch": "renovatebot-options",
      },
      {
        "default": "true",
        "docs": "Include sample code and test if the relevant directories don't exist.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "sample",
        "optional": true,
        "parent": "JavaProjectOptions",
        "path": [
          "sample",
        ],
        "simpleType": "boolean",
        "switch": "sample",
      },
      {
        "default": ""org.acme"",
        "docs": "The java package to use for the code sample.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "sampleJavaPackage",
        "optional": true,
        "parent": "JavaProjectOptions",
        "path": [
          "sampleJavaPackage",
        ],
        "simpleType": "string",
        "switch": "sample-java-package",
      },
      {
        "default": "false",
        "docs": "Auto-close of stale issues and pull request.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "stale",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "stale",
        ],
        "simpleType": "boolean",
        "switch": "stale",
      },
      {
        "default": "- see defaults in \`StaleOptions\`",
        "docs": "Auto-close stale issues and pull requests.",
        "featured": false,
        "fqn": "projen.github.StaleOptions",
        "fullType": {
          "fqn": "projen.github.StaleOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "staleOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "staleOptions",
        ],
        "simpleType": "StaleOptions",
        "switch": "stale-options",
      },
      {
        "default": "[]",
        "docs": "List of test dependencies for this project.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "testDeps",
        "optional": true,
        "parent": "JavaProjectCommonOptions",
        "path": [
          "testDeps",
        ],
        "simpleType": "unknown",
        "switch": "test-deps",
      },
      {
        "docs": "The URL, like the name, is not required.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "url",
        "optional": true,
        "parent": "PomOptions",
        "path": [
          "url",
        ],
        "simpleType": "string",
        "switch": "url",
      },
      {
        "default": ""0.1.0"",
        "docs": "This is the last piece of the naming puzzle.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""0.1.0"",
        "jsonLike": true,
        "name": "version",
        "parent": "PomOptions",
        "path": [
          "version",
        ],
        "simpleType": "string",
        "switch": "version",
      },
      {
        "default": "true",
        "docs": "Enable VSCode integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "vscode",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "vscode",
        ],
        "simpleType": "boolean",
        "switch": "vscode",
      },
    ],
    "pjid": "java",
    "typename": "java.JavaProject",
  },
  {
    "docs": "Multi-language jsii library project.",
    "docsurl": "https://projen.io/docs/api/cdk#jsiiproject-",
    "fqn": "projen.cdk.JsiiProject",
    "moduleName": "projen",
    "options": [
      {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "allowLibraryDependencies",
        ],
        "simpleType": "boolean",
        "switch": "allow-library-dependencies",
      },
      {
        "default": ""dist"",
        "docs": "A directory which will contain build artifacts.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "artifactsDirectory",
        ],
        "simpleType": "string",
        "switch": "artifacts-directory",
      },
      {
        "default": "$GIT_USER_NAME",
        "docs": "The name of the library author.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$GIT_USER_NAME",
        "jsonLike": true,
        "name": "author",
        "parent": "JsiiProjectOptions",
        "path": [
          "author",
        ],
        "simpleType": "string",
        "switch": "author",
      },
      {
        "default": "$GIT_USER_EMAIL",
        "docs": "Email or URL of the library author.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$GIT_USER_EMAIL",
        "jsonLike": true,
        "name": "authorAddress",
        "parent": "JsiiProjectOptions",
        "path": [
          "authorAddress",
        ],
        "simpleType": "string",
        "switch": "author-address",
      },
      {
        "docs": "Author's e-mail.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorEmail",
        ],
        "simpleType": "string",
        "switch": "author-email",
      },
      {
        "docs": "Author's name.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorName",
        ],
        "simpleType": "string",
        "switch": "author-name",
      },
      {
        "docs": "Is the author an organization.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorOrganization",
        ],
        "simpleType": "boolean",
        "switch": "author-organization",
      },
      {
        "docs": "Author's URL / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorUrl",
        ],
        "simpleType": "string",
        "switch": "author-url",
      },
      {
        "default": "- auto approve is disabled",
        "docs": "Enable and configure the 'auto approve' workflow.",
        "featured": false,
        "fqn": "projen.github.AutoApproveOptions",
        "fullType": {
          "fqn": "projen.github.AutoApproveOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoApproveOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoApproveOptions",
        ],
        "simpleType": "AutoApproveOptions",
        "switch": "auto-approve-options",
      },
      {
        "default": "- true",
        "docs": "Automatically approve deps upgrade PRs, allowing them to be merged by mergify (if configued).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoApproveUpgrades",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "autoApproveUpgrades",
        ],
        "simpleType": "boolean",
        "switch": "auto-approve-upgrades",
      },
      {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "autoDetectBin",
        ],
        "simpleType": "boolean",
        "switch": "auto-detect-bin",
      },
      {
        "default": "true",
        "docs": "Enable automatic merging on GitHub.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoMerge",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMerge",
        ],
        "simpleType": "boolean",
        "switch": "auto-merge",
      },
      {
        "default": "- see defaults in \`AutoMergeOptions\`",
        "docs": "Configure options for automatic merging on GitHub.",
        "featured": false,
        "fqn": "projen.github.AutoMergeOptions",
        "fullType": {
          "fqn": "projen.github.AutoMergeOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoMergeOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMergeOptions",
        ],
        "simpleType": "AutoMergeOptions",
        "switch": "auto-merge-options",
      },
      {
        "docs": "Binary programs vended with your module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bin",
        ],
        "simpleType": "unknown",
        "switch": "bin",
      },
      {
        "docs": "The email address to which issues should be reported.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsEmail",
        ],
        "simpleType": "string",
        "switch": "bugs-email",
      },
      {
        "docs": "The url to your project's issue tracker.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsUrl",
        ],
        "simpleType": "string",
        "switch": "bugs-url",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "build-workflow",
      },
      {
        "docs": "Options for PR build workflow.",
        "featured": false,
        "fqn": "projen.javascript.BuildWorkflowOptions",
        "fullType": {
          "fqn": "projen.javascript.BuildWorkflowOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowOptions",
        ],
        "simpleType": "BuildWorkflowOptions",
        "switch": "build-workflow-options",
      },
      {
        "default": ""{ pullRequest: {}, workflowDispatch: {} }"",
        "deprecated": true,
        "docs": "Build workflow triggers.",
        "featured": false,
        "fqn": "projen.github.workflows.Triggers",
        "fullType": {
          "fqn": "projen.github.workflows.Triggers",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowTriggers",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowTriggers",
        ],
        "simpleType": "Triggers",
        "switch": "build-workflow-triggers",
      },
      {
        "default": "- A recent version of "commit-and-tag-version"",
        "docs": "The \`commit-and-tag-version\` compatible package used to bump the package version, as a dependency string.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bumpPackage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "bumpPackage",
        ],
        "simpleType": "string",
        "switch": "bump-package",
      },
      {
        "docs": "List of dependencies to bundle into this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bundledDeps",
        ],
        "simpleType": "unknown",
        "switch": "bundled-deps",
      },
      {
        "docs": "Options for \`Bundler\`.",
        "featured": false,
        "fqn": "projen.javascript.BundlerOptions",
        "fullType": {
          "fqn": "projen.javascript.BundlerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "bundlerOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "bundlerOptions",
        ],
        "simpleType": "BundlerOptions",
        "switch": "bundler-options",
      },
      {
        "default": ""latest"",
        "docs": "The version of Bun to use if using Bun as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bunVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bunVersion",
        ],
        "simpleType": "string",
        "switch": "bun-version",
      },
      {
        "default": "- no license checks are run during the build and all licenses will be accepted",
        "docs": "Configure which licenses should be deemed acceptable for use by dependencies.",
        "featured": false,
        "fqn": "projen.javascript.LicenseCheckerOptions",
        "fullType": {
          "fqn": "projen.javascript.LicenseCheckerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "checkLicenses",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "checkLicenses",
        ],
        "simpleType": "LicenseCheckerOptions",
        "switch": "check-licenses",
      },
      {
        "default": "- true, but false for subprojects",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "clobber",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "clobber",
        ],
        "simpleType": "boolean",
        "switch": "clobber",
      },
      {
        "default": "- undefined",
        "docs": "Options for npm packages using AWS CodeArtifact.",
        "featured": false,
        "fqn": "projen.javascript.CodeArtifactOptions",
        "fullType": {
          "fqn": "projen.javascript.CodeArtifactOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "codeArtifactOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "codeArtifactOptions",
        ],
        "simpleType": "CodeArtifactOptions",
        "switch": "code-artifact-options",
      },
      {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v4 A secret is required for private repos. Configured with \`@codeCovTokenSecret\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCov",
        ],
        "simpleType": "boolean",
        "switch": "code-cov",
      },
      {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCovTokenSecret",
        ],
        "simpleType": "string",
        "switch": "code-cov-token-secret",
      },
      {
        "default": "true",
        "docs": "Whether to commit the managed files by default.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "commitGenerated",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "commitGenerated",
        ],
        "simpleType": "boolean",
        "switch": "commit-generated",
      },
      {
        "default": "false",
        "docs": "Automatically run API compatibility test against the latest version published to npm after compilation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "compat",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "compat",
        ],
        "simpleType": "boolean",
        "switch": "compat",
      },
      {
        "default": "".compatignore"",
        "docs": "Name of the ignore file for API compatibility tests.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "compatIgnore",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "compatIgnore",
        ],
        "simpleType": "string",
        "switch": "compat-ignore",
      },
      {
        "default": "false",
        "docs": "Emit a compressed version of the assembly.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "compressAssembly",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "compressAssembly",
        ],
        "simpleType": "boolean",
        "switch": "compress-assembly",
      },
      {
        "default": "- defaults to the value of authorName or "" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightOwner",
        ],
        "simpleType": "string",
        "switch": "copyright-owner",
      },
      {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightPeriod",
        ],
        "simpleType": "string",
        "switch": "copyright-period",
      },
      {
        "default": ""main"",
        "docs": "The name of the main release branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""main"",
        "jsonLike": true,
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": [
          "defaultReleaseBranch",
        ],
        "simpleType": "string",
        "switch": "default-release-branch",
      },
      {
        "default": "false",
        "docs": "Use dependabot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabot",
        ],
        "simpleType": "boolean",
        "switch": "dependabot",
      },
      {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "featured": false,
        "fqn": "projen.github.DependabotOptions",
        "fullType": {
          "fqn": "projen.github.DependabotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabotOptions",
        ],
        "simpleType": "DependabotOptions",
        "switch": "dependabot-options",
      },
      {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "deps",
        ],
        "simpleType": "unknown",
        "switch": "deps",
      },
      {
        "default": "true",
        "docs": "Use tasks and github workflows to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "depsUpgrade",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgrade",
        ],
        "simpleType": "boolean",
        "switch": "deps-upgrade",
      },
      {
        "default": "- default options",
        "docs": "Options for \`UpgradeDependencies\`.",
        "featured": false,
        "fqn": "projen.javascript.UpgradeDependenciesOptions",
        "fullType": {
          "fqn": "projen.javascript.UpgradeDependenciesOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "depsUpgradeOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgradeOptions",
        ],
        "simpleType": "UpgradeDependenciesOptions",
        "switch": "deps-upgrade-options",
      },
      {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "description",
        ],
        "simpleType": "string",
        "switch": "description",
      },
      {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "devContainer",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "devContainer",
        ],
        "simpleType": "boolean",
        "switch": "dev-container",
      },
      {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "devDeps",
        ],
        "simpleType": "unknown",
        "switch": "dev-deps",
      },
      {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "disableTsconfig",
        ],
        "simpleType": "boolean",
        "switch": "disable-tsconfig",
      },
      {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.dev.json\` file.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "disableTsconfigDev",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "disableTsconfigDev",
        ],
        "simpleType": "boolean",
        "switch": "disable-tsconfig-dev",
      },
      {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "docgen",
        ],
        "simpleType": "boolean",
        "switch": "docgen",
      },
      {
        "default": ""API.md"",
        "docs": "File path for generated docs.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "docgenFilePath",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "docgenFilePath",
        ],
        "simpleType": "string",
        "switch": "docgen-file-path",
      },
      {
        "default": ""docs"",
        "docs": "Docs directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "docsDirectory",
        ],
        "simpleType": "string",
        "switch": "docs-directory",
      },
      {
        "deprecated": true,
        "featured": false,
        "fqn": "projen.cdk.JsiiDotNetTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiDotNetTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "dotnet",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "dotnet",
        ],
        "simpleType": "JsiiDotNetTarget",
        "switch": "dotnet",
      },
      {
        "default": ""lib/index.js"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "entrypoint",
        ],
        "simpleType": "string",
        "switch": "entrypoint",
      },
      {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "entrypointTypes",
        ],
        "simpleType": "string",
        "switch": "entrypoint-types",
      },
      {
        "default": "true",
        "docs": "Setup eslint.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "eslint",
        ],
        "simpleType": "boolean",
        "switch": "eslint",
      },
      {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "featured": false,
        "fqn": "projen.javascript.EslintOptions",
        "fullType": {
          "fqn": "projen.javascript.EslintOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "eslintOptions",
        ],
        "simpleType": "EslintOptions",
        "switch": "eslint-options",
      },
      {
        "docs": "Accepts a list of glob patterns.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "excludeTypescript",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "excludeTypescript",
        ],
        "simpleType": "unknown",
        "switch": "exclude-typescript",
      },
      {
        "default": "true",
        "docs": "Enable GitHub integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "github",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "github",
        ],
        "simpleType": "boolean",
        "switch": "github",
      },
      {
        "default": "- see GitHubOptions",
        "docs": "Options for GitHub integration.",
        "featured": false,
        "fqn": "projen.github.GitHubOptions",
        "fullType": {
          "fqn": "projen.github.GitHubOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "githubOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "githubOptions",
        ],
        "simpleType": "GitHubOptions",
        "switch": "github-options",
      },
      {
        "docs": "Additional entries to .gitignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "gitignore",
        ],
        "simpleType": "unknown",
        "switch": "gitignore",
      },
      {
        "docs": "Configuration options for .gitignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitIgnoreOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "git-ignore-options",
      },
      {
        "docs": "Configuration options for git.",
        "featured": false,
        "fqn": "projen.GitOptions",
        "fullType": {
          "fqn": "projen.GitOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitOptions",
        ],
        "simpleType": "GitOptions",
        "switch": "git-options",
      },
      {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "gitpod",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "gitpod",
        ],
        "simpleType": "boolean",
        "switch": "gitpod",
      },
      {
        "docs": "Package's Homepage / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "homepage",
        ],
        "simpleType": "string",
        "switch": "homepage",
      },
      {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jest",
        ],
        "simpleType": "boolean",
        "switch": "jest",
      },
      {
        "default": "- default options",
        "docs": "Jest options.",
        "featured": false,
        "fqn": "projen.javascript.JestOptions",
        "fullType": {
          "fqn": "projen.javascript.JestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jestOptions",
        ],
        "simpleType": "JestOptions",
        "switch": "jest-options",
      },
      {
        "default": ""latest"",
        "docs": "Version requirement of \`publib\` which is used to publish modules to npm.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "jsiiReleaseVersion",
        ],
        "simpleType": "string",
        "switch": "jsii-release-version",
      },
      {
        "default": ""~5.6.0"",
        "docs": "Version of the jsii compiler to use.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""~5.7.0"",
        "jsonLike": true,
        "name": "jsiiVersion",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "jsiiVersion",
        ],
        "simpleType": "string",
        "switch": "jsii-version",
      },
      {
        "docs": "Keywords to include in \`package.json\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "keywords",
        ],
        "simpleType": "unknown",
        "switch": "keywords",
      },
      {
        "default": ""lib"",
        "docs": "Typescript  artifacts output directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "libdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "libdir",
        ],
        "simpleType": "string",
        "switch": "libdir",
      },
      {
        "default": ""Apache-2.0"",
        "docs": "License's SPDX identifier.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "license",
        ],
        "simpleType": "string",
        "switch": "license",
      },
      {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "licensed",
        ],
        "simpleType": "boolean",
        "switch": "licensed",
      },
      {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "featured": false,
        "fqn": "projen.LoggerOptions",
        "fullType": {
          "fqn": "projen.LoggerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "logging",
        ],
        "simpleType": "LoggerOptions",
        "switch": "logging",
      },
      {
        "default": "- Major version is not enforced.",
        "docs": "Major version to release from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "majorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "majorVersion",
        ],
        "simpleType": "number",
        "switch": "major-version",
      },
      {
        "default": "- no maximum version is enforced",
        "docs": "The maximum node version supported by this package. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "maxNodeVersion",
        ],
        "simpleType": "string",
        "switch": "max-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Whether mergify should be enabled on this repository or not.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mergify",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergify",
        ],
        "simpleType": "boolean",
        "switch": "mergify",
      },
      {
        "default": "- default options",
        "deprecated": true,
        "docs": "Options for mergify.",
        "featured": false,
        "fqn": "projen.github.MergifyOptions",
        "fullType": {
          "fqn": "projen.github.MergifyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergifyOptions",
        ],
        "simpleType": "MergifyOptions",
        "switch": "mergify-options",
      },
      {
        "default": "- No minimum version is being enforced",
        "docs": "Minimal Major version to release.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "minMajorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "minMajorVersion",
        ],
        "simpleType": "number",
        "switch": "min-major-version",
      },
      {
        "default": "- no minimum version is enforced",
        "docs": "The minimum node version required by this package to function. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "minNodeVersion",
        ],
        "simpleType": "string",
        "switch": "min-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "mutableBuild",
        ],
        "simpleType": "boolean",
        "switch": "mutable-build",
      },
      {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$BASEDIR",
        "jsonLike": true,
        "name": "name",
        "parent": "ProjectOptions",
        "path": [
          "name",
        ],
        "simpleType": "string",
        "switch": "name",
      },
      {
        "default": "- The next version will be determined based on the commit history and project settings.",
        "docs": "A shell command to control the next version to release.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "nextVersionCommand",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "nextVersionCommand",
        ],
        "simpleType": "string",
        "switch": "next-version-command",
      },
      {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "featured": false,
        "fqn": "projen.javascript.NpmAccess",
        "fullType": {
          "fqn": "projen.javascript.NpmAccess",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmAccess",
        ],
        "simpleType": "NpmAccess",
        "switch": "npm-access",
      },
      {
        "default": ""latest"",
        "docs": "The npmDistTag to use when publishing from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmDistTag",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "npmDistTag",
        ],
        "simpleType": "string",
        "switch": "npm-dist-tag",
      },
      {
        "deprecated": true,
        "docs": "Additional entries to .npmignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignore",
        ],
        "simpleType": "unknown",
        "switch": "npmignore",
      },
      {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignoreEnabled",
        ],
        "simpleType": "boolean",
        "switch": "npmignore-enabled",
      },
      {
        "docs": "Configuration options for .npmignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "npmIgnoreOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "npm-ignore-options",
      },
      {
        "default": "- true for public packages, false otherwise",
        "docs": "Should provenance statements be generated when the package is published.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmProvenance",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmProvenance",
        ],
        "simpleType": "boolean",
        "switch": "npm-provenance",
      },
      {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistry",
        ],
        "simpleType": "string",
        "switch": "npm-registry",
      },
      {
        "default": ""https://registry.npmjs.org"",
        "docs": "The base URL of the npm package registry.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistryUrl",
        ],
        "simpleType": "string",
        "switch": "npm-registry-url",
      },
      {
        "default": ""NPM_TOKEN"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmTokenSecret",
        ],
        "simpleType": "string",
        "switch": "npm-token-secret",
      },
      {
        "default": ""."",
        "docs": "The root directory of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "outdir",
        ],
        "simpleType": "string",
        "switch": "outdir",
      },
      {
        "default": "true",
        "docs": "Defines a \`package\` task that will produce an npm tarball under the artifacts directory (e.g. \`dist\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "package",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "package",
        ],
        "simpleType": "boolean",
        "switch": "package",
      },
      {
        "default": "NodePackageManager.YARN_CLASSIC",
        "docs": "The Node Package Manager used to execute scripts.",
        "featured": false,
        "fqn": "projen.javascript.NodePackageManager",
        "fullType": {
          "fqn": "projen.javascript.NodePackageManager",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageManager",
        ],
        "simpleType": "NodePackageManager",
        "switch": "package-manager",
      },
      {
        "default": "- defaults to project name",
        "docs": "The "name" in package.json.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageName",
        ],
        "simpleType": "string",
        "switch": "package-name",
      },
      {
        "docs": "The parent project, if this project is part of a bigger project.",
        "featured": false,
        "fqn": "projen.Project",
        "fullType": {
          "fqn": "projen.Project",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "parent",
        ],
        "simpleType": "Project",
        "switch": "parent",
      },
      {
        "docs": "Options for \`peerDeps\`.",
        "featured": false,
        "fqn": "projen.javascript.PeerDependencyOptions",
        "fullType": {
          "fqn": "projen.javascript.PeerDependencyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDependencyOptions",
        ],
        "simpleType": "PeerDependencyOptions",
        "switch": "peer-dependency-options",
      },
      {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDeps",
        ],
        "simpleType": "unknown",
        "switch": "peer-deps",
      },
      {
        "default": ""9"",
        "docs": "The version of PNPM to use if using PNPM as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "pnpmVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "pnpmVersion",
        ],
        "simpleType": "string",
        "switch": "pnpm-version",
      },
      {
        "default": "[]",
        "docs": "Steps to execute after build as part of the release workflow.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "postBuildSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "postBuildSteps",
        ],
        "simpleType": "unknown",
        "switch": "post-build-steps",
      },
      {
        "default": "- normal semantic versions",
        "docs": "Bump versions from the default branch as pre-releases (e.g. "beta", "alpha", "pre").",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "prerelease",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "prerelease",
        ],
        "simpleType": "string",
        "switch": "prerelease",
      },
      {
        "default": "false",
        "docs": "Setup prettier.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "prettier",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettier",
        ],
        "simpleType": "boolean",
        "switch": "prettier",
      },
      {
        "default": "- default options",
        "docs": "Prettier options.",
        "featured": false,
        "fqn": "projen.javascript.PrettierOptions",
        "fullType": {
          "fqn": "projen.javascript.PrettierOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "prettierOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettierOptions",
        ],
        "simpleType": "PrettierOptions",
        "switch": "prettier-options",
      },
      {
        "default": "ProjectType.UNKNOWN",
        "deprecated": true,
        "docs": "Which type of project this is (library/app).",
        "featured": false,
        "fqn": "projen.ProjectType",
        "fullType": {
          "fqn": "projen.ProjectType",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "projectType",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projectType",
        ],
        "simpleType": "ProjectType",
        "switch": "project-type",
      },
      {
        "default": ""npx projen"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenCommand",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenCommand",
        ],
        "simpleType": "string",
        "switch": "projen-command",
      },
      {
        "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
        "docs": "Choose a method of providing GitHub API access for projen workflows.",
        "featured": false,
        "fqn": "projen.github.GithubCredentials",
        "fullType": {
          "fqn": "projen.github.GithubCredentials",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "projenCredentials",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenCredentials",
        ],
        "simpleType": "GithubCredentials",
        "switch": "projen-credentials",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Indicates of "projen" should be installed as a devDependency.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenDevDependency",
        ],
        "simpleType": "boolean",
        "switch": "projen-dev-dependency",
      },
      {
        "default": "- true if projenrcJson is false",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-js",
      },
      {
        "default": "false",
        "docs": "Generate (once) .projenrc.json (in JSON). Set to \`false\` in order to disable .projenrc.json generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJson",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJson",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-json",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.json.",
        "featured": false,
        "fqn": "projen.ProjenrcJsonOptions",
        "fullType": {
          "fqn": "projen.ProjenrcJsonOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsonOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJsonOptions",
        ],
        "simpleType": "ProjenrcJsonOptions",
        "switch": "projenrc-json-options",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "featured": false,
        "fqn": "projen.javascript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.javascript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-js-options",
      },
      {
        "default": "false",
        "docs": "Use TypeScript for your projenrc file (\`.projenrc.ts\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "initialValue": "true",
        "jsonLike": true,
        "name": "projenrcTs",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "projenrcTs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-ts",
      },
      {
        "docs": "Options for .projenrc.ts.",
        "featured": false,
        "fqn": "projen.typescript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.typescript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "projenrcTsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-ts-options",
      },
      {
        "default": ""PROJEN_GITHUB_TOKEN"",
        "deprecated": true,
        "docs": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenTokenSecret",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenTokenSecret",
        ],
        "simpleType": "string",
        "switch": "projen-token-secret",
      },
      {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenVersion",
        ],
        "simpleType": "string",
        "switch": "projen-version",
      },
      {
        "default": "false",
        "docs": "Instead of actually publishing to package managers, just print the publishing command.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishDryRun",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishDryRun",
        ],
        "simpleType": "boolean",
        "switch": "publish-dry-run",
      },
      {
        "default": "false",
        "docs": "Define publishing tasks that can be executed manually as well as workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishTasks",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishTasks",
        ],
        "simpleType": "boolean",
        "switch": "publish-tasks",
      },
      {
        "default": "- no publishing",
        "docs": "Publish Go bindings to a git repository.",
        "featured": false,
        "fqn": "projen.cdk.JsiiGoTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiGoTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "publishToGo",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "publishToGo",
        ],
        "simpleType": "JsiiGoTarget",
        "switch": "publish-to-go",
      },
      {
        "default": "- no publishing",
        "docs": "Publish to maven.",
        "featured": false,
        "fqn": "projen.cdk.JsiiJavaTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiJavaTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "publishToMaven",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "publishToMaven",
        ],
        "simpleType": "JsiiJavaTarget",
        "switch": "publish-to-maven",
      },
      {
        "default": "- no publishing",
        "docs": "Publish to NuGet.",
        "featured": false,
        "fqn": "projen.cdk.JsiiDotNetTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiDotNetTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "publishToNuget",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "publishToNuget",
        ],
        "simpleType": "JsiiDotNetTarget",
        "switch": "publish-to-nuget",
      },
      {
        "default": "- no publishing",
        "docs": "Publish to pypi.",
        "featured": false,
        "fqn": "projen.cdk.JsiiPythonTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiPythonTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "publishToPypi",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "publishToPypi",
        ],
        "simpleType": "JsiiPythonTarget",
        "switch": "publish-to-pypi",
      },
      {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplate",
        ],
        "simpleType": "boolean",
        "switch": "pull-request-template",
      },
      {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplateContents",
        ],
        "simpleType": "unknown",
        "switch": "pull-request-template-contents",
      },
      {
        "deprecated": true,
        "featured": false,
        "fqn": "projen.cdk.JsiiPythonTarget",
        "fullType": {
          "fqn": "projen.cdk.JsiiPythonTarget",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "python",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "python",
        ],
        "simpleType": "JsiiPythonTarget",
        "switch": "python",
      },
      {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "featured": false,
        "fqn": "projen.SampleReadmeProps",
        "fullType": {
          "fqn": "projen.SampleReadmeProps",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "readme",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "readme",
        ],
        "simpleType": "SampleReadmeProps",
        "switch": "readme",
      },
      {
        "default": "ReleasableCommits.everyCommit()",
        "docs": "Find commits that should be considered releasable Used to decide if a release is required.",
        "featured": false,
        "fqn": "projen.ReleasableCommits",
        "fullType": {
          "fqn": "projen.ReleasableCommits",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releasableCommits",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releasableCommits",
        ],
        "simpleType": "ReleasableCommits",
        "switch": "releasable-commits",
      },
      {
        "default": "- true (false for subprojects)",
        "docs": "Add release management to this project.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "release",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "release",
        ],
        "simpleType": "boolean",
        "switch": "release",
      },
      {
        "default": "- no additional branches are used for release. you can use
\`addBranch()\` to add additional branches.",
        "docs": "Defines additional release branches.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.release.BranchOptions",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "releaseBranches",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseBranches",
        ],
        "simpleType": "unknown",
        "switch": "release-branches",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseEveryCommit",
        ],
        "simpleType": "boolean",
        "switch": "release-every-commit",
      },
      {
        "default": "false",
        "docs": "Create a github issue on every failed publishing task.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseFailureIssue",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssue",
        ],
        "simpleType": "boolean",
        "switch": "release-failure-issue",
      },
      {
        "default": ""failed-release"",
        "docs": "The label to apply to issues indicating publish failures.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseFailureIssueLabel",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssueLabel",
        ],
        "simpleType": "string",
        "switch": "release-failure-issue-label",
      },
      {
        "default": "- no scheduled releases",
        "deprecated": true,
        "docs": "CRON schedule to trigger new releases.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseSchedule",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseSchedule",
        ],
        "simpleType": "string",
        "switch": "release-schedule",
      },
      {
        "default": ""v"",
        "docs": "Automatically add the given prefix to release tags. Useful if you are releasing on multiple branches with overlapping version numbers.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseTagPrefix",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTagPrefix",
        ],
        "simpleType": "string",
        "switch": "release-tag-prefix",
      },
      {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseToNpm",
        ],
        "simpleType": "boolean",
        "switch": "release-to-npm",
      },
      {
        "default": "- Continuous releases (\`ReleaseTrigger.continuous()\`)",
        "docs": "The release trigger to use.",
        "featured": false,
        "fqn": "projen.release.ReleaseTrigger",
        "fullType": {
          "fqn": "projen.release.ReleaseTrigger",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releaseTrigger",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTrigger",
        ],
        "simpleType": "ReleaseTrigger",
        "switch": "release-trigger",
      },
      {
        "default": "- true if not a subproject",
        "deprecated": true,
        "docs": "DEPRECATED: renamed to \`release\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "release-workflow",
      },
      {
        "default": ""release"",
        "docs": "The name of the default release workflow.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseWorkflowName",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowName",
        ],
        "simpleType": "string",
        "switch": "release-workflow-name",
      },
      {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowSetupSteps",
        ],
        "simpleType": "unknown",
        "switch": "release-workflow-setup-steps",
      },
      {
        "default": "false",
        "docs": "Use renovatebot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "renovatebot",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebot",
        ],
        "simpleType": "boolean",
        "switch": "renovatebot",
      },
      {
        "default": "- default options",
        "docs": "Options for renovatebot.",
        "featured": false,
        "fqn": "projen.RenovatebotOptions",
        "fullType": {
          "fqn": "projen.RenovatebotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "renovatebotOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebotOptions",
        ],
        "simpleType": "RenovatebotOptions",
        "switch": "renovatebot-options",
      },
      {
        "docs": "The repository is the location where the actual code for your package lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repository",
        ],
        "simpleType": "string",
        "switch": "repository",
      },
      {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repositoryDirectory",
        ],
        "simpleType": "string",
        "switch": "repository-directory",
      },
      {
        "default": "$GIT_REMOTE",
        "docs": "Git repository URL.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$GIT_REMOTE",
        "jsonLike": true,
        "name": "repositoryUrl",
        "parent": "JsiiProjectOptions",
        "path": [
          "repositoryUrl",
        ],
        "simpleType": "string",
        "switch": "repository-url",
      },
      {
        "default": ""."",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "rootdir",
        "optional": true,
        "parent": "JsiiProjectOptions",
        "path": [
          "rootdir",
        ],
        "simpleType": "string",
        "switch": "rootdir",
      },
      {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "sampleCode",
        ],
        "simpleType": "boolean",
        "switch": "sample-code",
      },
      {
        "default": "- fetch all scoped packages from the public npm registry",
        "docs": "Options for privately hosted scoped packages.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.javascript.ScopedPackagesOptions",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "scopedPackagesOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scopedPackagesOptions",
        ],
        "simpleType": "unknown",
        "switch": "scoped-packages-options",
      },
      {
        "default": "{}",
        "deprecated": true,
        "docs": "npm scripts to include.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scripts",
        ],
        "simpleType": "unknown",
        "switch": "scripts",
      },
      {
        "default": ""src"",
        "docs": "Typescript sources directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "srcdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "srcdir",
        ],
        "simpleType": "string",
        "switch": "srcdir",
      },
      {
        "docs": "Package's Stability.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "stability",
        ],
        "simpleType": "string",
        "switch": "stability",
      },
      {
        "default": "false",
        "docs": "Auto-close of stale issues and pull request.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "stale",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "stale",
        ],
        "simpleType": "boolean",
        "switch": "stale",
      },
      {
        "default": "- see defaults in \`StaleOptions\`",
        "docs": "Auto-close stale issues and pull requests.",
        "featured": false,
        "fqn": "projen.github.StaleOptions",
        "fullType": {
          "fqn": "projen.github.StaleOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "staleOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "staleOptions",
        ],
        "simpleType": "StaleOptions",
        "switch": "stale-options",
      },
      {
        "default": ""test"",
        "docs": "Jest tests directory. Tests files should be named \`xxx.test.ts\`.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "testdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "testdir",
        ],
        "simpleType": "string",
        "switch": "testdir",
      },
      {
        "default": "- default options",
        "docs": "Custom TSConfig.",
        "featured": false,
        "fqn": "projen.javascript.TypescriptConfigOptions",
        "fullType": {
          "fqn": "projen.javascript.TypescriptConfigOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfig",
        ],
        "simpleType": "TypescriptConfigOptions",
        "switch": "tsconfig",
      },
      {
        "default": "- use the production tsconfig options",
        "docs": "Custom tsconfig options for the development tsconfig.json file (used for testing).",
        "featured": false,
        "fqn": "projen.javascript.TypescriptConfigOptions",
        "fullType": {
          "fqn": "projen.javascript.TypescriptConfigOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsconfigDev",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfigDev",
        ],
        "simpleType": "TypescriptConfigOptions",
        "switch": "tsconfig-dev",
      },
      {
        "default": ""tsconfig.dev.json"",
        "docs": "The name of the development tsconfig.json file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "tsconfigDevFile",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfigDevFile",
        ],
        "simpleType": "string",
        "switch": "tsconfig-dev-file",
      },
      {
        "docs": "Options for ts-jest.",
        "featured": false,
        "fqn": "projen.typescript.TsJestOptions",
        "fullType": {
          "fqn": "projen.typescript.TsJestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsJestOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsJestOptions",
        ],
        "simpleType": "TsJestOptions",
        "switch": "ts-jest-options",
      },
      {
        "default": ""latest"",
        "docs": "TypeScript version to use.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "typescriptVersion",
        ],
        "simpleType": "string",
        "switch": "typescript-version",
      },
      {
        "default": "- standard configuration applicable for GitHub repositories",
        "docs": "Custom configuration used when creating changelog with commit-and-tag-version package.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "any",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "versionrcOptions",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "versionrcOptions",
        ],
        "simpleType": "unknown",
        "switch": "versionrc-options",
      },
      {
        "default": "true",
        "docs": "Enable VSCode integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "vscode",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "vscode",
        ],
        "simpleType": "boolean",
        "switch": "vscode",
      },
      {
        "default": ""yarn install --frozen-lockfile && yarn projen"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowBootstrapSteps",
        ],
        "simpleType": "unknown",
        "switch": "workflow-bootstrap-steps",
      },
      {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowContainerImage",
        ],
        "simpleType": "string",
        "switch": "workflow-container-image",
      },
      {
        "default": "- GitHub Actions",
        "docs": "The git identity to use in workflows.",
        "featured": false,
        "fqn": "projen.github.GitIdentity",
        "fullType": {
          "fqn": "projen.github.GitIdentity",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowGitIdentity",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowGitIdentity",
        ],
        "simpleType": "GitIdentity",
        "switch": "workflow-git-identity",
      },
      {
        "default": "- \`minNodeVersion\` if set, otherwise \`lts/*\`.",
        "docs": "The node version used in GitHub Actions workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowNodeVersion",
        ],
        "simpleType": "string",
        "switch": "workflow-node-version",
      },
      {
        "default": "false",
        "docs": "Enable Node.js package cache in GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "workflowPackageCache",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowPackageCache",
        ],
        "simpleType": "boolean",
        "switch": "workflow-package-cache",
      },
      {
        "default": "["ubuntu-latest"]",
        "docs": "Github Runner selection labels.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowRunsOn",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOn",
        ],
        "simpleType": "unknown",
        "switch": "workflow-runs-on",
      },
      {
        "docs": "Github Runner Group selection options.",
        "featured": false,
        "fqn": "projen.GroupRunnerOptions",
        "fullType": {
          "fqn": "projen.GroupRunnerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowRunsOnGroup",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOnGroup",
        ],
        "simpleType": "GroupRunnerOptions",
        "switch": "workflow-runs-on-group",
      },
      {
        "default": "- Yarn Berry v4 with all default options",
        "docs": "Options for Yarn Berry.",
        "featured": false,
        "fqn": "projen.javascript.YarnBerryOptions",
        "fullType": {
          "fqn": "projen.javascript.YarnBerryOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "yarnBerryOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "yarnBerryOptions",
        ],
        "simpleType": "YarnBerryOptions",
        "switch": "yarn-berry-options",
      },
    ],
    "pjid": "jsii",
    "typename": "cdk.JsiiProject",
  },
  {
    "docs": "Next.js project using JavaScript.",
    "docsurl": "https://projen.io/docs/api/web#nextjsproject-",
    "fqn": "projen.web.NextJsProject",
    "moduleName": "projen",
    "options": [
      {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "allowLibraryDependencies",
        ],
        "simpleType": "boolean",
        "switch": "allow-library-dependencies",
      },
      {
        "default": ""dist"",
        "docs": "A directory which will contain build artifacts.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "artifactsDirectory",
        ],
        "simpleType": "string",
        "switch": "artifacts-directory",
      },
      {
        "default": ""public"",
        "docs": "Assets directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "assetsdir",
        "optional": true,
        "parent": "NextJsCommonProjectOptions",
        "path": [
          "assetsdir",
        ],
        "simpleType": "string",
        "switch": "assetsdir",
      },
      {
        "docs": "Author's e-mail.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorEmail",
        ],
        "simpleType": "string",
        "switch": "author-email",
      },
      {
        "docs": "Author's name.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorName",
        ],
        "simpleType": "string",
        "switch": "author-name",
      },
      {
        "docs": "Is the author an organization.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorOrganization",
        ],
        "simpleType": "boolean",
        "switch": "author-organization",
      },
      {
        "docs": "Author's URL / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorUrl",
        ],
        "simpleType": "string",
        "switch": "author-url",
      },
      {
        "default": "- auto approve is disabled",
        "docs": "Enable and configure the 'auto approve' workflow.",
        "featured": false,
        "fqn": "projen.github.AutoApproveOptions",
        "fullType": {
          "fqn": "projen.github.AutoApproveOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoApproveOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoApproveOptions",
        ],
        "simpleType": "AutoApproveOptions",
        "switch": "auto-approve-options",
      },
      {
        "default": "- true",
        "docs": "Automatically approve deps upgrade PRs, allowing them to be merged by mergify (if configued).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoApproveUpgrades",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "autoApproveUpgrades",
        ],
        "simpleType": "boolean",
        "switch": "auto-approve-upgrades",
      },
      {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "autoDetectBin",
        ],
        "simpleType": "boolean",
        "switch": "auto-detect-bin",
      },
      {
        "default": "true",
        "docs": "Enable automatic merging on GitHub.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoMerge",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMerge",
        ],
        "simpleType": "boolean",
        "switch": "auto-merge",
      },
      {
        "default": "- see defaults in \`AutoMergeOptions\`",
        "docs": "Configure options for automatic merging on GitHub.",
        "featured": false,
        "fqn": "projen.github.AutoMergeOptions",
        "fullType": {
          "fqn": "projen.github.AutoMergeOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoMergeOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMergeOptions",
        ],
        "simpleType": "AutoMergeOptions",
        "switch": "auto-merge-options",
      },
      {
        "docs": "Binary programs vended with your module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bin",
        ],
        "simpleType": "unknown",
        "switch": "bin",
      },
      {
        "docs": "The email address to which issues should be reported.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsEmail",
        ],
        "simpleType": "string",
        "switch": "bugs-email",
      },
      {
        "docs": "The url to your project's issue tracker.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsUrl",
        ],
        "simpleType": "string",
        "switch": "bugs-url",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "build-workflow",
      },
      {
        "docs": "Options for PR build workflow.",
        "featured": false,
        "fqn": "projen.javascript.BuildWorkflowOptions",
        "fullType": {
          "fqn": "projen.javascript.BuildWorkflowOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowOptions",
        ],
        "simpleType": "BuildWorkflowOptions",
        "switch": "build-workflow-options",
      },
      {
        "default": ""{ pullRequest: {}, workflowDispatch: {} }"",
        "deprecated": true,
        "docs": "Build workflow triggers.",
        "featured": false,
        "fqn": "projen.github.workflows.Triggers",
        "fullType": {
          "fqn": "projen.github.workflows.Triggers",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowTriggers",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowTriggers",
        ],
        "simpleType": "Triggers",
        "switch": "build-workflow-triggers",
      },
      {
        "default": "- A recent version of "commit-and-tag-version"",
        "docs": "The \`commit-and-tag-version\` compatible package used to bump the package version, as a dependency string.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bumpPackage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "bumpPackage",
        ],
        "simpleType": "string",
        "switch": "bump-package",
      },
      {
        "docs": "List of dependencies to bundle into this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bundledDeps",
        ],
        "simpleType": "unknown",
        "switch": "bundled-deps",
      },
      {
        "docs": "Options for \`Bundler\`.",
        "featured": false,
        "fqn": "projen.javascript.BundlerOptions",
        "fullType": {
          "fqn": "projen.javascript.BundlerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "bundlerOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "bundlerOptions",
        ],
        "simpleType": "BundlerOptions",
        "switch": "bundler-options",
      },
      {
        "default": ""latest"",
        "docs": "The version of Bun to use if using Bun as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bunVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bunVersion",
        ],
        "simpleType": "string",
        "switch": "bun-version",
      },
      {
        "default": "- no license checks are run during the build and all licenses will be accepted",
        "docs": "Configure which licenses should be deemed acceptable for use by dependencies.",
        "featured": false,
        "fqn": "projen.javascript.LicenseCheckerOptions",
        "fullType": {
          "fqn": "projen.javascript.LicenseCheckerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "checkLicenses",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "checkLicenses",
        ],
        "simpleType": "LicenseCheckerOptions",
        "switch": "check-licenses",
      },
      {
        "default": "- true, but false for subprojects",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "clobber",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "clobber",
        ],
        "simpleType": "boolean",
        "switch": "clobber",
      },
      {
        "default": "- undefined",
        "docs": "Options for npm packages using AWS CodeArtifact.",
        "featured": false,
        "fqn": "projen.javascript.CodeArtifactOptions",
        "fullType": {
          "fqn": "projen.javascript.CodeArtifactOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "codeArtifactOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "codeArtifactOptions",
        ],
        "simpleType": "CodeArtifactOptions",
        "switch": "code-artifact-options",
      },
      {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v4 A secret is required for private repos. Configured with \`@codeCovTokenSecret\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCov",
        ],
        "simpleType": "boolean",
        "switch": "code-cov",
      },
      {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCovTokenSecret",
        ],
        "simpleType": "string",
        "switch": "code-cov-token-secret",
      },
      {
        "default": "true",
        "docs": "Whether to commit the managed files by default.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "commitGenerated",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "commitGenerated",
        ],
        "simpleType": "boolean",
        "switch": "commit-generated",
      },
      {
        "default": "- defaults to the value of authorName or "" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightOwner",
        ],
        "simpleType": "string",
        "switch": "copyright-owner",
      },
      {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightPeriod",
        ],
        "simpleType": "string",
        "switch": "copyright-period",
      },
      {
        "default": ""main"",
        "docs": "The name of the main release branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""main"",
        "jsonLike": true,
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": [
          "defaultReleaseBranch",
        ],
        "simpleType": "string",
        "switch": "default-release-branch",
      },
      {
        "default": "false",
        "docs": "Use dependabot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabot",
        ],
        "simpleType": "boolean",
        "switch": "dependabot",
      },
      {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "featured": false,
        "fqn": "projen.github.DependabotOptions",
        "fullType": {
          "fqn": "projen.github.DependabotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabotOptions",
        ],
        "simpleType": "DependabotOptions",
        "switch": "dependabot-options",
      },
      {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "deps",
        ],
        "simpleType": "unknown",
        "switch": "deps",
      },
      {
        "default": "true",
        "docs": "Use tasks and github workflows to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "depsUpgrade",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgrade",
        ],
        "simpleType": "boolean",
        "switch": "deps-upgrade",
      },
      {
        "default": "- default options",
        "docs": "Options for \`UpgradeDependencies\`.",
        "featured": false,
        "fqn": "projen.javascript.UpgradeDependenciesOptions",
        "fullType": {
          "fqn": "projen.javascript.UpgradeDependenciesOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "depsUpgradeOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgradeOptions",
        ],
        "simpleType": "UpgradeDependenciesOptions",
        "switch": "deps-upgrade-options",
      },
      {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "description",
        ],
        "simpleType": "string",
        "switch": "description",
      },
      {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "devContainer",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "devContainer",
        ],
        "simpleType": "boolean",
        "switch": "dev-container",
      },
      {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "devDeps",
        ],
        "simpleType": "unknown",
        "switch": "dev-deps",
      },
      {
        "default": ""lib/index.js"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "entrypoint",
        ],
        "simpleType": "string",
        "switch": "entrypoint",
      },
      {
        "default": "true",
        "docs": "Enable GitHub integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "github",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "github",
        ],
        "simpleType": "boolean",
        "switch": "github",
      },
      {
        "default": "- see GitHubOptions",
        "docs": "Options for GitHub integration.",
        "featured": false,
        "fqn": "projen.github.GitHubOptions",
        "fullType": {
          "fqn": "projen.github.GitHubOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "githubOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "githubOptions",
        ],
        "simpleType": "GitHubOptions",
        "switch": "github-options",
      },
      {
        "docs": "Additional entries to .gitignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "gitignore",
        ],
        "simpleType": "unknown",
        "switch": "gitignore",
      },
      {
        "docs": "Configuration options for .gitignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitIgnoreOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "git-ignore-options",
      },
      {
        "docs": "Configuration options for git.",
        "featured": false,
        "fqn": "projen.GitOptions",
        "fullType": {
          "fqn": "projen.GitOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitOptions",
        ],
        "simpleType": "GitOptions",
        "switch": "git-options",
      },
      {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "gitpod",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "gitpod",
        ],
        "simpleType": "boolean",
        "switch": "gitpod",
      },
      {
        "docs": "Package's Homepage / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "homepage",
        ],
        "simpleType": "string",
        "switch": "homepage",
      },
      {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jest",
        ],
        "simpleType": "boolean",
        "switch": "jest",
      },
      {
        "default": "- default options",
        "docs": "Jest options.",
        "featured": false,
        "fqn": "projen.javascript.JestOptions",
        "fullType": {
          "fqn": "projen.javascript.JestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jestOptions",
        ],
        "simpleType": "JestOptions",
        "switch": "jest-options",
      },
      {
        "default": ""latest"",
        "docs": "Version requirement of \`publib\` which is used to publish modules to npm.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "jsiiReleaseVersion",
        ],
        "simpleType": "string",
        "switch": "jsii-release-version",
      },
      {
        "docs": "Keywords to include in \`package.json\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "keywords",
        ],
        "simpleType": "unknown",
        "switch": "keywords",
      },
      {
        "default": ""Apache-2.0"",
        "docs": "License's SPDX identifier.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "license",
        ],
        "simpleType": "string",
        "switch": "license",
      },
      {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "licensed",
        ],
        "simpleType": "boolean",
        "switch": "licensed",
      },
      {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "featured": false,
        "fqn": "projen.LoggerOptions",
        "fullType": {
          "fqn": "projen.LoggerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "logging",
        ],
        "simpleType": "LoggerOptions",
        "switch": "logging",
      },
      {
        "default": "- Major version is not enforced.",
        "docs": "Major version to release from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "majorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "majorVersion",
        ],
        "simpleType": "number",
        "switch": "major-version",
      },
      {
        "default": "- no maximum version is enforced",
        "docs": "The maximum node version supported by this package. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "maxNodeVersion",
        ],
        "simpleType": "string",
        "switch": "max-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Whether mergify should be enabled on this repository or not.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mergify",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergify",
        ],
        "simpleType": "boolean",
        "switch": "mergify",
      },
      {
        "default": "- default options",
        "deprecated": true,
        "docs": "Options for mergify.",
        "featured": false,
        "fqn": "projen.github.MergifyOptions",
        "fullType": {
          "fqn": "projen.github.MergifyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergifyOptions",
        ],
        "simpleType": "MergifyOptions",
        "switch": "mergify-options",
      },
      {
        "default": "- No minimum version is being enforced",
        "docs": "Minimal Major version to release.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "minMajorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "minMajorVersion",
        ],
        "simpleType": "number",
        "switch": "min-major-version",
      },
      {
        "default": "- no minimum version is enforced",
        "docs": "The minimum node version required by this package to function. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "minNodeVersion",
        ],
        "simpleType": "string",
        "switch": "min-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "mutableBuild",
        ],
        "simpleType": "boolean",
        "switch": "mutable-build",
      },
      {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$BASEDIR",
        "jsonLike": true,
        "name": "name",
        "parent": "ProjectOptions",
        "path": [
          "name",
        ],
        "simpleType": "string",
        "switch": "name",
      },
      {
        "default": "- The next version will be determined based on the commit history and project settings.",
        "docs": "A shell command to control the next version to release.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "nextVersionCommand",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "nextVersionCommand",
        ],
        "simpleType": "string",
        "switch": "next-version-command",
      },
      {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "featured": false,
        "fqn": "projen.javascript.NpmAccess",
        "fullType": {
          "fqn": "projen.javascript.NpmAccess",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmAccess",
        ],
        "simpleType": "NpmAccess",
        "switch": "npm-access",
      },
      {
        "default": ""latest"",
        "docs": "The npmDistTag to use when publishing from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmDistTag",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "npmDistTag",
        ],
        "simpleType": "string",
        "switch": "npm-dist-tag",
      },
      {
        "deprecated": true,
        "docs": "Additional entries to .npmignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignore",
        ],
        "simpleType": "unknown",
        "switch": "npmignore",
      },
      {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignoreEnabled",
        ],
        "simpleType": "boolean",
        "switch": "npmignore-enabled",
      },
      {
        "docs": "Configuration options for .npmignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "npmIgnoreOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "npm-ignore-options",
      },
      {
        "default": "- true for public packages, false otherwise",
        "docs": "Should provenance statements be generated when the package is published.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmProvenance",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmProvenance",
        ],
        "simpleType": "boolean",
        "switch": "npm-provenance",
      },
      {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistry",
        ],
        "simpleType": "string",
        "switch": "npm-registry",
      },
      {
        "default": ""https://registry.npmjs.org"",
        "docs": "The base URL of the npm package registry.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistryUrl",
        ],
        "simpleType": "string",
        "switch": "npm-registry-url",
      },
      {
        "default": ""NPM_TOKEN"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmTokenSecret",
        ],
        "simpleType": "string",
        "switch": "npm-token-secret",
      },
      {
        "default": ""."",
        "docs": "The root directory of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "outdir",
        ],
        "simpleType": "string",
        "switch": "outdir",
      },
      {
        "default": "true",
        "docs": "Defines a \`package\` task that will produce an npm tarball under the artifacts directory (e.g. \`dist\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "package",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "package",
        ],
        "simpleType": "boolean",
        "switch": "package",
      },
      {
        "default": "NodePackageManager.YARN_CLASSIC",
        "docs": "The Node Package Manager used to execute scripts.",
        "featured": false,
        "fqn": "projen.javascript.NodePackageManager",
        "fullType": {
          "fqn": "projen.javascript.NodePackageManager",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageManager",
        ],
        "simpleType": "NodePackageManager",
        "switch": "package-manager",
      },
      {
        "default": "- defaults to project name",
        "docs": "The "name" in package.json.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageName",
        ],
        "simpleType": "string",
        "switch": "package-name",
      },
      {
        "docs": "The parent project, if this project is part of a bigger project.",
        "featured": false,
        "fqn": "projen.Project",
        "fullType": {
          "fqn": "projen.Project",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "parent",
        ],
        "simpleType": "Project",
        "switch": "parent",
      },
      {
        "docs": "Options for \`peerDeps\`.",
        "featured": false,
        "fqn": "projen.javascript.PeerDependencyOptions",
        "fullType": {
          "fqn": "projen.javascript.PeerDependencyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDependencyOptions",
        ],
        "simpleType": "PeerDependencyOptions",
        "switch": "peer-dependency-options",
      },
      {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDeps",
        ],
        "simpleType": "unknown",
        "switch": "peer-deps",
      },
      {
        "default": ""9"",
        "docs": "The version of PNPM to use if using PNPM as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "pnpmVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "pnpmVersion",
        ],
        "simpleType": "string",
        "switch": "pnpm-version",
      },
      {
        "default": "[]",
        "docs": "Steps to execute after build as part of the release workflow.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "postBuildSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "postBuildSteps",
        ],
        "simpleType": "unknown",
        "switch": "post-build-steps",
      },
      {
        "default": "- normal semantic versions",
        "docs": "Bump versions from the default branch as pre-releases (e.g. "beta", "alpha", "pre").",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "prerelease",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "prerelease",
        ],
        "simpleType": "string",
        "switch": "prerelease",
      },
      {
        "default": "false",
        "docs": "Setup prettier.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "prettier",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettier",
        ],
        "simpleType": "boolean",
        "switch": "prettier",
      },
      {
        "default": "- default options",
        "docs": "Prettier options.",
        "featured": false,
        "fqn": "projen.javascript.PrettierOptions",
        "fullType": {
          "fqn": "projen.javascript.PrettierOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "prettierOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettierOptions",
        ],
        "simpleType": "PrettierOptions",
        "switch": "prettier-options",
      },
      {
        "default": "ProjectType.UNKNOWN",
        "deprecated": true,
        "docs": "Which type of project this is (library/app).",
        "featured": false,
        "fqn": "projen.ProjectType",
        "fullType": {
          "fqn": "projen.ProjectType",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "projectType",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projectType",
        ],
        "simpleType": "ProjectType",
        "switch": "project-type",
      },
      {
        "default": ""npx projen"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenCommand",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenCommand",
        ],
        "simpleType": "string",
        "switch": "projen-command",
      },
      {
        "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
        "docs": "Choose a method of providing GitHub API access for projen workflows.",
        "featured": false,
        "fqn": "projen.github.GithubCredentials",
        "fullType": {
          "fqn": "projen.github.GithubCredentials",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "projenCredentials",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenCredentials",
        ],
        "simpleType": "GithubCredentials",
        "switch": "projen-credentials",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Indicates of "projen" should be installed as a devDependency.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenDevDependency",
        ],
        "simpleType": "boolean",
        "switch": "projen-dev-dependency",
      },
      {
        "default": "- true if projenrcJson is false",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-js",
      },
      {
        "default": "false",
        "docs": "Generate (once) .projenrc.json (in JSON). Set to \`false\` in order to disable .projenrc.json generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJson",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJson",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-json",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.json.",
        "featured": false,
        "fqn": "projen.ProjenrcJsonOptions",
        "fullType": {
          "fqn": "projen.ProjenrcJsonOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsonOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJsonOptions",
        ],
        "simpleType": "ProjenrcJsonOptions",
        "switch": "projenrc-json-options",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "featured": false,
        "fqn": "projen.javascript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.javascript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-js-options",
      },
      {
        "default": ""PROJEN_GITHUB_TOKEN"",
        "deprecated": true,
        "docs": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenTokenSecret",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenTokenSecret",
        ],
        "simpleType": "string",
        "switch": "projen-token-secret",
      },
      {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenVersion",
        ],
        "simpleType": "string",
        "switch": "projen-version",
      },
      {
        "default": "false",
        "docs": "Instead of actually publishing to package managers, just print the publishing command.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishDryRun",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishDryRun",
        ],
        "simpleType": "boolean",
        "switch": "publish-dry-run",
      },
      {
        "default": "false",
        "docs": "Define publishing tasks that can be executed manually as well as workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishTasks",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishTasks",
        ],
        "simpleType": "boolean",
        "switch": "publish-tasks",
      },
      {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplate",
        ],
        "simpleType": "boolean",
        "switch": "pull-request-template",
      },
      {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplateContents",
        ],
        "simpleType": "unknown",
        "switch": "pull-request-template-contents",
      },
      {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "featured": false,
        "fqn": "projen.SampleReadmeProps",
        "fullType": {
          "fqn": "projen.SampleReadmeProps",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "readme",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "readme",
        ],
        "simpleType": "SampleReadmeProps",
        "switch": "readme",
      },
      {
        "default": "ReleasableCommits.everyCommit()",
        "docs": "Find commits that should be considered releasable Used to decide if a release is required.",
        "featured": false,
        "fqn": "projen.ReleasableCommits",
        "fullType": {
          "fqn": "projen.ReleasableCommits",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releasableCommits",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releasableCommits",
        ],
        "simpleType": "ReleasableCommits",
        "switch": "releasable-commits",
      },
      {
        "default": "- true (false for subprojects)",
        "docs": "Add release management to this project.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "release",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "release",
        ],
        "simpleType": "boolean",
        "switch": "release",
      },
      {
        "default": "- no additional branches are used for release. you can use
\`addBranch()\` to add additional branches.",
        "docs": "Defines additional release branches.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.release.BranchOptions",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "releaseBranches",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseBranches",
        ],
        "simpleType": "unknown",
        "switch": "release-branches",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseEveryCommit",
        ],
        "simpleType": "boolean",
        "switch": "release-every-commit",
      },
      {
        "default": "false",
        "docs": "Create a github issue on every failed publishing task.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseFailureIssue",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssue",
        ],
        "simpleType": "boolean",
        "switch": "release-failure-issue",
      },
      {
        "default": ""failed-release"",
        "docs": "The label to apply to issues indicating publish failures.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseFailureIssueLabel",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssueLabel",
        ],
        "simpleType": "string",
        "switch": "release-failure-issue-label",
      },
      {
        "default": "- no scheduled releases",
        "deprecated": true,
        "docs": "CRON schedule to trigger new releases.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseSchedule",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseSchedule",
        ],
        "simpleType": "string",
        "switch": "release-schedule",
      },
      {
        "default": ""v"",
        "docs": "Automatically add the given prefix to release tags. Useful if you are releasing on multiple branches with overlapping version numbers.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseTagPrefix",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTagPrefix",
        ],
        "simpleType": "string",
        "switch": "release-tag-prefix",
      },
      {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseToNpm",
        ],
        "simpleType": "boolean",
        "switch": "release-to-npm",
      },
      {
        "default": "- Continuous releases (\`ReleaseTrigger.continuous()\`)",
        "docs": "The release trigger to use.",
        "featured": false,
        "fqn": "projen.release.ReleaseTrigger",
        "fullType": {
          "fqn": "projen.release.ReleaseTrigger",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releaseTrigger",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTrigger",
        ],
        "simpleType": "ReleaseTrigger",
        "switch": "release-trigger",
      },
      {
        "default": "- true if not a subproject",
        "deprecated": true,
        "docs": "DEPRECATED: renamed to \`release\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "release-workflow",
      },
      {
        "default": ""release"",
        "docs": "The name of the default release workflow.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseWorkflowName",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowName",
        ],
        "simpleType": "string",
        "switch": "release-workflow-name",
      },
      {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowSetupSteps",
        ],
        "simpleType": "unknown",
        "switch": "release-workflow-setup-steps",
      },
      {
        "default": "false",
        "docs": "Use renovatebot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "renovatebot",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebot",
        ],
        "simpleType": "boolean",
        "switch": "renovatebot",
      },
      {
        "default": "- default options",
        "docs": "Options for renovatebot.",
        "featured": false,
        "fqn": "projen.RenovatebotOptions",
        "fullType": {
          "fqn": "projen.RenovatebotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "renovatebotOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebotOptions",
        ],
        "simpleType": "RenovatebotOptions",
        "switch": "renovatebot-options",
      },
      {
        "docs": "The repository is the location where the actual code for your package lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repository",
        ],
        "simpleType": "string",
        "switch": "repository",
      },
      {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repositoryDirectory",
        ],
        "simpleType": "string",
        "switch": "repository-directory",
      },
      {
        "default": "true",
        "docs": "Generate one-time sample in \`pages/\` and \`public/\` if there are no files there.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "sampleCode",
        "optional": true,
        "parent": "NextJsProjectOptions",
        "path": [
          "sampleCode",
        ],
        "simpleType": "boolean",
        "switch": "sample-code",
      },
      {
        "default": "- fetch all scoped packages from the public npm registry",
        "docs": "Options for privately hosted scoped packages.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.javascript.ScopedPackagesOptions",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "scopedPackagesOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scopedPackagesOptions",
        ],
        "simpleType": "unknown",
        "switch": "scoped-packages-options",
      },
      {
        "default": "{}",
        "deprecated": true,
        "docs": "npm scripts to include.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scripts",
        ],
        "simpleType": "unknown",
        "switch": "scripts",
      },
      {
        "default": ""src"",
        "docs": "Typescript sources directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "srcdir",
        "optional": true,
        "parent": "NextJsProjectOptions",
        "path": [
          "srcdir",
        ],
        "simpleType": "string",
        "switch": "srcdir",
      },
      {
        "docs": "Package's Stability.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "stability",
        ],
        "simpleType": "string",
        "switch": "stability",
      },
      {
        "default": "false",
        "docs": "Auto-close of stale issues and pull request.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "stale",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "stale",
        ],
        "simpleType": "boolean",
        "switch": "stale",
      },
      {
        "default": "- see defaults in \`StaleOptions\`",
        "docs": "Auto-close stale issues and pull requests.",
        "featured": false,
        "fqn": "projen.github.StaleOptions",
        "fullType": {
          "fqn": "projen.github.StaleOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "staleOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "staleOptions",
        ],
        "simpleType": "StaleOptions",
        "switch": "stale-options",
      },
      {
        "default": "true",
        "docs": "Setup Tailwind CSS as a PostCSS plugin.",
        "featured": true,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "tailwind",
        "optional": true,
        "parent": "NextJsCommonProjectOptions",
        "path": [
          "tailwind",
        ],
        "simpleType": "boolean",
        "switch": "tailwind",
      },
      {
        "default": "- standard configuration applicable for GitHub repositories",
        "docs": "Custom configuration used when creating changelog with commit-and-tag-version package.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "any",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "versionrcOptions",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "versionrcOptions",
        ],
        "simpleType": "unknown",
        "switch": "versionrc-options",
      },
      {
        "default": "true",
        "docs": "Enable VSCode integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "vscode",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "vscode",
        ],
        "simpleType": "boolean",
        "switch": "vscode",
      },
      {
        "default": ""yarn install --frozen-lockfile && yarn projen"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowBootstrapSteps",
        ],
        "simpleType": "unknown",
        "switch": "workflow-bootstrap-steps",
      },
      {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowContainerImage",
        ],
        "simpleType": "string",
        "switch": "workflow-container-image",
      },
      {
        "default": "- GitHub Actions",
        "docs": "The git identity to use in workflows.",
        "featured": false,
        "fqn": "projen.github.GitIdentity",
        "fullType": {
          "fqn": "projen.github.GitIdentity",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowGitIdentity",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowGitIdentity",
        ],
        "simpleType": "GitIdentity",
        "switch": "workflow-git-identity",
      },
      {
        "default": "- \`minNodeVersion\` if set, otherwise \`lts/*\`.",
        "docs": "The node version used in GitHub Actions workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowNodeVersion",
        ],
        "simpleType": "string",
        "switch": "workflow-node-version",
      },
      {
        "default": "false",
        "docs": "Enable Node.js package cache in GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "workflowPackageCache",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowPackageCache",
        ],
        "simpleType": "boolean",
        "switch": "workflow-package-cache",
      },
      {
        "default": "["ubuntu-latest"]",
        "docs": "Github Runner selection labels.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowRunsOn",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOn",
        ],
        "simpleType": "unknown",
        "switch": "workflow-runs-on",
      },
      {
        "docs": "Github Runner Group selection options.",
        "featured": false,
        "fqn": "projen.GroupRunnerOptions",
        "fullType": {
          "fqn": "projen.GroupRunnerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowRunsOnGroup",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOnGroup",
        ],
        "simpleType": "GroupRunnerOptions",
        "switch": "workflow-runs-on-group",
      },
      {
        "default": "- Yarn Berry v4 with all default options",
        "docs": "Options for Yarn Berry.",
        "featured": false,
        "fqn": "projen.javascript.YarnBerryOptions",
        "fullType": {
          "fqn": "projen.javascript.YarnBerryOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "yarnBerryOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "yarnBerryOptions",
        ],
        "simpleType": "YarnBerryOptions",
        "switch": "yarn-berry-options",
      },
    ],
    "pjid": "nextjs",
    "typename": "web.NextJsProject",
  },
  {
    "docs": "Next.js project using TypeScript.",
    "docsurl": "https://projen.io/docs/api/web#nextjstypescriptproject-",
    "fqn": "projen.web.NextJsTypeScriptProject",
    "moduleName": "projen",
    "options": [
      {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "allowLibraryDependencies",
        ],
        "simpleType": "boolean",
        "switch": "allow-library-dependencies",
      },
      {
        "default": ""dist"",
        "docs": "A directory which will contain build artifacts.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "artifactsDirectory",
        ],
        "simpleType": "string",
        "switch": "artifacts-directory",
      },
      {
        "default": ""public"",
        "docs": "Assets directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "assetsdir",
        "optional": true,
        "parent": "NextJsCommonProjectOptions",
        "path": [
          "assetsdir",
        ],
        "simpleType": "string",
        "switch": "assetsdir",
      },
      {
        "docs": "Author's e-mail.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorEmail",
        ],
        "simpleType": "string",
        "switch": "author-email",
      },
      {
        "docs": "Author's name.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorName",
        ],
        "simpleType": "string",
        "switch": "author-name",
      },
      {
        "docs": "Is the author an organization.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorOrganization",
        ],
        "simpleType": "boolean",
        "switch": "author-organization",
      },
      {
        "docs": "Author's URL / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorUrl",
        ],
        "simpleType": "string",
        "switch": "author-url",
      },
      {
        "default": "- auto approve is disabled",
        "docs": "Enable and configure the 'auto approve' workflow.",
        "featured": false,
        "fqn": "projen.github.AutoApproveOptions",
        "fullType": {
          "fqn": "projen.github.AutoApproveOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoApproveOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoApproveOptions",
        ],
        "simpleType": "AutoApproveOptions",
        "switch": "auto-approve-options",
      },
      {
        "default": "- true",
        "docs": "Automatically approve deps upgrade PRs, allowing them to be merged by mergify (if configued).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoApproveUpgrades",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "autoApproveUpgrades",
        ],
        "simpleType": "boolean",
        "switch": "auto-approve-upgrades",
      },
      {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "autoDetectBin",
        ],
        "simpleType": "boolean",
        "switch": "auto-detect-bin",
      },
      {
        "default": "true",
        "docs": "Enable automatic merging on GitHub.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoMerge",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMerge",
        ],
        "simpleType": "boolean",
        "switch": "auto-merge",
      },
      {
        "default": "- see defaults in \`AutoMergeOptions\`",
        "docs": "Configure options for automatic merging on GitHub.",
        "featured": false,
        "fqn": "projen.github.AutoMergeOptions",
        "fullType": {
          "fqn": "projen.github.AutoMergeOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoMergeOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMergeOptions",
        ],
        "simpleType": "AutoMergeOptions",
        "switch": "auto-merge-options",
      },
      {
        "docs": "Binary programs vended with your module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bin",
        ],
        "simpleType": "unknown",
        "switch": "bin",
      },
      {
        "docs": "The email address to which issues should be reported.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsEmail",
        ],
        "simpleType": "string",
        "switch": "bugs-email",
      },
      {
        "docs": "The url to your project's issue tracker.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsUrl",
        ],
        "simpleType": "string",
        "switch": "bugs-url",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "build-workflow",
      },
      {
        "docs": "Options for PR build workflow.",
        "featured": false,
        "fqn": "projen.javascript.BuildWorkflowOptions",
        "fullType": {
          "fqn": "projen.javascript.BuildWorkflowOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowOptions",
        ],
        "simpleType": "BuildWorkflowOptions",
        "switch": "build-workflow-options",
      },
      {
        "default": ""{ pullRequest: {}, workflowDispatch: {} }"",
        "deprecated": true,
        "docs": "Build workflow triggers.",
        "featured": false,
        "fqn": "projen.github.workflows.Triggers",
        "fullType": {
          "fqn": "projen.github.workflows.Triggers",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowTriggers",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowTriggers",
        ],
        "simpleType": "Triggers",
        "switch": "build-workflow-triggers",
      },
      {
        "default": "- A recent version of "commit-and-tag-version"",
        "docs": "The \`commit-and-tag-version\` compatible package used to bump the package version, as a dependency string.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bumpPackage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "bumpPackage",
        ],
        "simpleType": "string",
        "switch": "bump-package",
      },
      {
        "docs": "List of dependencies to bundle into this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bundledDeps",
        ],
        "simpleType": "unknown",
        "switch": "bundled-deps",
      },
      {
        "docs": "Options for \`Bundler\`.",
        "featured": false,
        "fqn": "projen.javascript.BundlerOptions",
        "fullType": {
          "fqn": "projen.javascript.BundlerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "bundlerOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "bundlerOptions",
        ],
        "simpleType": "BundlerOptions",
        "switch": "bundler-options",
      },
      {
        "default": ""latest"",
        "docs": "The version of Bun to use if using Bun as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bunVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bunVersion",
        ],
        "simpleType": "string",
        "switch": "bun-version",
      },
      {
        "default": "- no license checks are run during the build and all licenses will be accepted",
        "docs": "Configure which licenses should be deemed acceptable for use by dependencies.",
        "featured": false,
        "fqn": "projen.javascript.LicenseCheckerOptions",
        "fullType": {
          "fqn": "projen.javascript.LicenseCheckerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "checkLicenses",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "checkLicenses",
        ],
        "simpleType": "LicenseCheckerOptions",
        "switch": "check-licenses",
      },
      {
        "default": "- true, but false for subprojects",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "clobber",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "clobber",
        ],
        "simpleType": "boolean",
        "switch": "clobber",
      },
      {
        "default": "- undefined",
        "docs": "Options for npm packages using AWS CodeArtifact.",
        "featured": false,
        "fqn": "projen.javascript.CodeArtifactOptions",
        "fullType": {
          "fqn": "projen.javascript.CodeArtifactOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "codeArtifactOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "codeArtifactOptions",
        ],
        "simpleType": "CodeArtifactOptions",
        "switch": "code-artifact-options",
      },
      {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v4 A secret is required for private repos. Configured with \`@codeCovTokenSecret\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCov",
        ],
        "simpleType": "boolean",
        "switch": "code-cov",
      },
      {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCovTokenSecret",
        ],
        "simpleType": "string",
        "switch": "code-cov-token-secret",
      },
      {
        "default": "true",
        "docs": "Whether to commit the managed files by default.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "commitGenerated",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "commitGenerated",
        ],
        "simpleType": "boolean",
        "switch": "commit-generated",
      },
      {
        "default": "- defaults to the value of authorName or "" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightOwner",
        ],
        "simpleType": "string",
        "switch": "copyright-owner",
      },
      {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightPeriod",
        ],
        "simpleType": "string",
        "switch": "copyright-period",
      },
      {
        "default": ""main"",
        "docs": "The name of the main release branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""main"",
        "jsonLike": true,
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": [
          "defaultReleaseBranch",
        ],
        "simpleType": "string",
        "switch": "default-release-branch",
      },
      {
        "default": "false",
        "docs": "Use dependabot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabot",
        ],
        "simpleType": "boolean",
        "switch": "dependabot",
      },
      {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "featured": false,
        "fqn": "projen.github.DependabotOptions",
        "fullType": {
          "fqn": "projen.github.DependabotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabotOptions",
        ],
        "simpleType": "DependabotOptions",
        "switch": "dependabot-options",
      },
      {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "deps",
        ],
        "simpleType": "unknown",
        "switch": "deps",
      },
      {
        "default": "true",
        "docs": "Use tasks and github workflows to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "depsUpgrade",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgrade",
        ],
        "simpleType": "boolean",
        "switch": "deps-upgrade",
      },
      {
        "default": "- default options",
        "docs": "Options for \`UpgradeDependencies\`.",
        "featured": false,
        "fqn": "projen.javascript.UpgradeDependenciesOptions",
        "fullType": {
          "fqn": "projen.javascript.UpgradeDependenciesOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "depsUpgradeOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgradeOptions",
        ],
        "simpleType": "UpgradeDependenciesOptions",
        "switch": "deps-upgrade-options",
      },
      {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "description",
        ],
        "simpleType": "string",
        "switch": "description",
      },
      {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "devContainer",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "devContainer",
        ],
        "simpleType": "boolean",
        "switch": "dev-container",
      },
      {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "devDeps",
        ],
        "simpleType": "unknown",
        "switch": "dev-deps",
      },
      {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "disableTsconfig",
        ],
        "simpleType": "boolean",
        "switch": "disable-tsconfig",
      },
      {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.dev.json\` file.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "disableTsconfigDev",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "disableTsconfigDev",
        ],
        "simpleType": "boolean",
        "switch": "disable-tsconfig-dev",
      },
      {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "docgen",
        ],
        "simpleType": "boolean",
        "switch": "docgen",
      },
      {
        "default": ""docs"",
        "docs": "Docs directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "docsDirectory",
        ],
        "simpleType": "string",
        "switch": "docs-directory",
      },
      {
        "default": ""lib/index.js"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "entrypoint",
        ],
        "simpleType": "string",
        "switch": "entrypoint",
      },
      {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "entrypointTypes",
        ],
        "simpleType": "string",
        "switch": "entrypoint-types",
      },
      {
        "default": "true",
        "docs": "Setup eslint.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "eslint",
        ],
        "simpleType": "boolean",
        "switch": "eslint",
      },
      {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "featured": false,
        "fqn": "projen.javascript.EslintOptions",
        "fullType": {
          "fqn": "projen.javascript.EslintOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "eslintOptions",
        ],
        "simpleType": "EslintOptions",
        "switch": "eslint-options",
      },
      {
        "default": "true",
        "docs": "Enable GitHub integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "github",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "github",
        ],
        "simpleType": "boolean",
        "switch": "github",
      },
      {
        "default": "- see GitHubOptions",
        "docs": "Options for GitHub integration.",
        "featured": false,
        "fqn": "projen.github.GitHubOptions",
        "fullType": {
          "fqn": "projen.github.GitHubOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "githubOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "githubOptions",
        ],
        "simpleType": "GitHubOptions",
        "switch": "github-options",
      },
      {
        "docs": "Additional entries to .gitignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "gitignore",
        ],
        "simpleType": "unknown",
        "switch": "gitignore",
      },
      {
        "docs": "Configuration options for .gitignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitIgnoreOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "git-ignore-options",
      },
      {
        "docs": "Configuration options for git.",
        "featured": false,
        "fqn": "projen.GitOptions",
        "fullType": {
          "fqn": "projen.GitOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitOptions",
        ],
        "simpleType": "GitOptions",
        "switch": "git-options",
      },
      {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "gitpod",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "gitpod",
        ],
        "simpleType": "boolean",
        "switch": "gitpod",
      },
      {
        "docs": "Package's Homepage / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "homepage",
        ],
        "simpleType": "string",
        "switch": "homepage",
      },
      {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jest",
        ],
        "simpleType": "boolean",
        "switch": "jest",
      },
      {
        "default": "- default options",
        "docs": "Jest options.",
        "featured": false,
        "fqn": "projen.javascript.JestOptions",
        "fullType": {
          "fqn": "projen.javascript.JestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jestOptions",
        ],
        "simpleType": "JestOptions",
        "switch": "jest-options",
      },
      {
        "default": ""latest"",
        "docs": "Version requirement of \`publib\` which is used to publish modules to npm.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "jsiiReleaseVersion",
        ],
        "simpleType": "string",
        "switch": "jsii-release-version",
      },
      {
        "docs": "Keywords to include in \`package.json\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "keywords",
        ],
        "simpleType": "unknown",
        "switch": "keywords",
      },
      {
        "default": ""lib"",
        "docs": "Typescript  artifacts output directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "libdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "libdir",
        ],
        "simpleType": "string",
        "switch": "libdir",
      },
      {
        "default": ""Apache-2.0"",
        "docs": "License's SPDX identifier.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "license",
        ],
        "simpleType": "string",
        "switch": "license",
      },
      {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "licensed",
        ],
        "simpleType": "boolean",
        "switch": "licensed",
      },
      {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "featured": false,
        "fqn": "projen.LoggerOptions",
        "fullType": {
          "fqn": "projen.LoggerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "logging",
        ],
        "simpleType": "LoggerOptions",
        "switch": "logging",
      },
      {
        "default": "- Major version is not enforced.",
        "docs": "Major version to release from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "majorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "majorVersion",
        ],
        "simpleType": "number",
        "switch": "major-version",
      },
      {
        "default": "- no maximum version is enforced",
        "docs": "The maximum node version supported by this package. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "maxNodeVersion",
        ],
        "simpleType": "string",
        "switch": "max-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Whether mergify should be enabled on this repository or not.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mergify",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergify",
        ],
        "simpleType": "boolean",
        "switch": "mergify",
      },
      {
        "default": "- default options",
        "deprecated": true,
        "docs": "Options for mergify.",
        "featured": false,
        "fqn": "projen.github.MergifyOptions",
        "fullType": {
          "fqn": "projen.github.MergifyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergifyOptions",
        ],
        "simpleType": "MergifyOptions",
        "switch": "mergify-options",
      },
      {
        "default": "- No minimum version is being enforced",
        "docs": "Minimal Major version to release.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "minMajorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "minMajorVersion",
        ],
        "simpleType": "number",
        "switch": "min-major-version",
      },
      {
        "default": "- no minimum version is enforced",
        "docs": "The minimum node version required by this package to function. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "minNodeVersion",
        ],
        "simpleType": "string",
        "switch": "min-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "mutableBuild",
        ],
        "simpleType": "boolean",
        "switch": "mutable-build",
      },
      {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$BASEDIR",
        "jsonLike": true,
        "name": "name",
        "parent": "ProjectOptions",
        "path": [
          "name",
        ],
        "simpleType": "string",
        "switch": "name",
      },
      {
        "default": "- The next version will be determined based on the commit history and project settings.",
        "docs": "A shell command to control the next version to release.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "nextVersionCommand",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "nextVersionCommand",
        ],
        "simpleType": "string",
        "switch": "next-version-command",
      },
      {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "featured": false,
        "fqn": "projen.javascript.NpmAccess",
        "fullType": {
          "fqn": "projen.javascript.NpmAccess",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmAccess",
        ],
        "simpleType": "NpmAccess",
        "switch": "npm-access",
      },
      {
        "default": ""latest"",
        "docs": "The npmDistTag to use when publishing from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmDistTag",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "npmDistTag",
        ],
        "simpleType": "string",
        "switch": "npm-dist-tag",
      },
      {
        "deprecated": true,
        "docs": "Additional entries to .npmignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignore",
        ],
        "simpleType": "unknown",
        "switch": "npmignore",
      },
      {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignoreEnabled",
        ],
        "simpleType": "boolean",
        "switch": "npmignore-enabled",
      },
      {
        "docs": "Configuration options for .npmignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "npmIgnoreOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "npm-ignore-options",
      },
      {
        "default": "- true for public packages, false otherwise",
        "docs": "Should provenance statements be generated when the package is published.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmProvenance",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmProvenance",
        ],
        "simpleType": "boolean",
        "switch": "npm-provenance",
      },
      {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistry",
        ],
        "simpleType": "string",
        "switch": "npm-registry",
      },
      {
        "default": ""https://registry.npmjs.org"",
        "docs": "The base URL of the npm package registry.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistryUrl",
        ],
        "simpleType": "string",
        "switch": "npm-registry-url",
      },
      {
        "default": ""NPM_TOKEN"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmTokenSecret",
        ],
        "simpleType": "string",
        "switch": "npm-token-secret",
      },
      {
        "default": ""."",
        "docs": "The root directory of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "outdir",
        ],
        "simpleType": "string",
        "switch": "outdir",
      },
      {
        "default": "true",
        "docs": "Defines a \`package\` task that will produce an npm tarball under the artifacts directory (e.g. \`dist\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "package",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "package",
        ],
        "simpleType": "boolean",
        "switch": "package",
      },
      {
        "default": "NodePackageManager.YARN_CLASSIC",
        "docs": "The Node Package Manager used to execute scripts.",
        "featured": false,
        "fqn": "projen.javascript.NodePackageManager",
        "fullType": {
          "fqn": "projen.javascript.NodePackageManager",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageManager",
        ],
        "simpleType": "NodePackageManager",
        "switch": "package-manager",
      },
      {
        "default": "- defaults to project name",
        "docs": "The "name" in package.json.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageName",
        ],
        "simpleType": "string",
        "switch": "package-name",
      },
      {
        "docs": "The parent project, if this project is part of a bigger project.",
        "featured": false,
        "fqn": "projen.Project",
        "fullType": {
          "fqn": "projen.Project",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "parent",
        ],
        "simpleType": "Project",
        "switch": "parent",
      },
      {
        "docs": "Options for \`peerDeps\`.",
        "featured": false,
        "fqn": "projen.javascript.PeerDependencyOptions",
        "fullType": {
          "fqn": "projen.javascript.PeerDependencyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDependencyOptions",
        ],
        "simpleType": "PeerDependencyOptions",
        "switch": "peer-dependency-options",
      },
      {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDeps",
        ],
        "simpleType": "unknown",
        "switch": "peer-deps",
      },
      {
        "default": ""9"",
        "docs": "The version of PNPM to use if using PNPM as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "pnpmVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "pnpmVersion",
        ],
        "simpleType": "string",
        "switch": "pnpm-version",
      },
      {
        "default": "[]",
        "docs": "Steps to execute after build as part of the release workflow.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "postBuildSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "postBuildSteps",
        ],
        "simpleType": "unknown",
        "switch": "post-build-steps",
      },
      {
        "default": "- normal semantic versions",
        "docs": "Bump versions from the default branch as pre-releases (e.g. "beta", "alpha", "pre").",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "prerelease",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "prerelease",
        ],
        "simpleType": "string",
        "switch": "prerelease",
      },
      {
        "default": "false",
        "docs": "Setup prettier.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "prettier",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettier",
        ],
        "simpleType": "boolean",
        "switch": "prettier",
      },
      {
        "default": "- default options",
        "docs": "Prettier options.",
        "featured": false,
        "fqn": "projen.javascript.PrettierOptions",
        "fullType": {
          "fqn": "projen.javascript.PrettierOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "prettierOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettierOptions",
        ],
        "simpleType": "PrettierOptions",
        "switch": "prettier-options",
      },
      {
        "default": "ProjectType.UNKNOWN",
        "deprecated": true,
        "docs": "Which type of project this is (library/app).",
        "featured": false,
        "fqn": "projen.ProjectType",
        "fullType": {
          "fqn": "projen.ProjectType",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "projectType",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projectType",
        ],
        "simpleType": "ProjectType",
        "switch": "project-type",
      },
      {
        "default": ""npx projen"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenCommand",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenCommand",
        ],
        "simpleType": "string",
        "switch": "projen-command",
      },
      {
        "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
        "docs": "Choose a method of providing GitHub API access for projen workflows.",
        "featured": false,
        "fqn": "projen.github.GithubCredentials",
        "fullType": {
          "fqn": "projen.github.GithubCredentials",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "projenCredentials",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenCredentials",
        ],
        "simpleType": "GithubCredentials",
        "switch": "projen-credentials",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Indicates of "projen" should be installed as a devDependency.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenDevDependency",
        ],
        "simpleType": "boolean",
        "switch": "projen-dev-dependency",
      },
      {
        "default": "- true if projenrcJson is false",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-js",
      },
      {
        "default": "false",
        "docs": "Generate (once) .projenrc.json (in JSON). Set to \`false\` in order to disable .projenrc.json generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJson",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJson",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-json",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.json.",
        "featured": false,
        "fqn": "projen.ProjenrcJsonOptions",
        "fullType": {
          "fqn": "projen.ProjenrcJsonOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsonOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJsonOptions",
        ],
        "simpleType": "ProjenrcJsonOptions",
        "switch": "projenrc-json-options",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "featured": false,
        "fqn": "projen.javascript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.javascript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-js-options",
      },
      {
        "default": "false",
        "docs": "Use TypeScript for your projenrc file (\`.projenrc.ts\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "initialValue": "true",
        "jsonLike": true,
        "name": "projenrcTs",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "projenrcTs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-ts",
      },
      {
        "docs": "Options for .projenrc.ts.",
        "featured": false,
        "fqn": "projen.typescript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.typescript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "projenrcTsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-ts-options",
      },
      {
        "default": ""PROJEN_GITHUB_TOKEN"",
        "deprecated": true,
        "docs": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenTokenSecret",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenTokenSecret",
        ],
        "simpleType": "string",
        "switch": "projen-token-secret",
      },
      {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenVersion",
        ],
        "simpleType": "string",
        "switch": "projen-version",
      },
      {
        "default": "false",
        "docs": "Instead of actually publishing to package managers, just print the publishing command.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishDryRun",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishDryRun",
        ],
        "simpleType": "boolean",
        "switch": "publish-dry-run",
      },
      {
        "default": "false",
        "docs": "Define publishing tasks that can be executed manually as well as workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishTasks",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishTasks",
        ],
        "simpleType": "boolean",
        "switch": "publish-tasks",
      },
      {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplate",
        ],
        "simpleType": "boolean",
        "switch": "pull-request-template",
      },
      {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplateContents",
        ],
        "simpleType": "unknown",
        "switch": "pull-request-template-contents",
      },
      {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "featured": false,
        "fqn": "projen.SampleReadmeProps",
        "fullType": {
          "fqn": "projen.SampleReadmeProps",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "readme",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "readme",
        ],
        "simpleType": "SampleReadmeProps",
        "switch": "readme",
      },
      {
        "default": "ReleasableCommits.everyCommit()",
        "docs": "Find commits that should be considered releasable Used to decide if a release is required.",
        "featured": false,
        "fqn": "projen.ReleasableCommits",
        "fullType": {
          "fqn": "projen.ReleasableCommits",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releasableCommits",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releasableCommits",
        ],
        "simpleType": "ReleasableCommits",
        "switch": "releasable-commits",
      },
      {
        "default": "- true (false for subprojects)",
        "docs": "Add release management to this project.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "release",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "release",
        ],
        "simpleType": "boolean",
        "switch": "release",
      },
      {
        "default": "- no additional branches are used for release. you can use
\`addBranch()\` to add additional branches.",
        "docs": "Defines additional release branches.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.release.BranchOptions",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "releaseBranches",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseBranches",
        ],
        "simpleType": "unknown",
        "switch": "release-branches",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseEveryCommit",
        ],
        "simpleType": "boolean",
        "switch": "release-every-commit",
      },
      {
        "default": "false",
        "docs": "Create a github issue on every failed publishing task.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseFailureIssue",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssue",
        ],
        "simpleType": "boolean",
        "switch": "release-failure-issue",
      },
      {
        "default": ""failed-release"",
        "docs": "The label to apply to issues indicating publish failures.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseFailureIssueLabel",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssueLabel",
        ],
        "simpleType": "string",
        "switch": "release-failure-issue-label",
      },
      {
        "default": "- no scheduled releases",
        "deprecated": true,
        "docs": "CRON schedule to trigger new releases.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseSchedule",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseSchedule",
        ],
        "simpleType": "string",
        "switch": "release-schedule",
      },
      {
        "default": ""v"",
        "docs": "Automatically add the given prefix to release tags. Useful if you are releasing on multiple branches with overlapping version numbers.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseTagPrefix",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTagPrefix",
        ],
        "simpleType": "string",
        "switch": "release-tag-prefix",
      },
      {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseToNpm",
        ],
        "simpleType": "boolean",
        "switch": "release-to-npm",
      },
      {
        "default": "- Continuous releases (\`ReleaseTrigger.continuous()\`)",
        "docs": "The release trigger to use.",
        "featured": false,
        "fqn": "projen.release.ReleaseTrigger",
        "fullType": {
          "fqn": "projen.release.ReleaseTrigger",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releaseTrigger",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTrigger",
        ],
        "simpleType": "ReleaseTrigger",
        "switch": "release-trigger",
      },
      {
        "default": "- true if not a subproject",
        "deprecated": true,
        "docs": "DEPRECATED: renamed to \`release\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "release-workflow",
      },
      {
        "default": ""release"",
        "docs": "The name of the default release workflow.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseWorkflowName",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowName",
        ],
        "simpleType": "string",
        "switch": "release-workflow-name",
      },
      {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowSetupSteps",
        ],
        "simpleType": "unknown",
        "switch": "release-workflow-setup-steps",
      },
      {
        "default": "false",
        "docs": "Use renovatebot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "renovatebot",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebot",
        ],
        "simpleType": "boolean",
        "switch": "renovatebot",
      },
      {
        "default": "- default options",
        "docs": "Options for renovatebot.",
        "featured": false,
        "fqn": "projen.RenovatebotOptions",
        "fullType": {
          "fqn": "projen.RenovatebotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "renovatebotOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebotOptions",
        ],
        "simpleType": "RenovatebotOptions",
        "switch": "renovatebot-options",
      },
      {
        "docs": "The repository is the location where the actual code for your package lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repository",
        ],
        "simpleType": "string",
        "switch": "repository",
      },
      {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repositoryDirectory",
        ],
        "simpleType": "string",
        "switch": "repository-directory",
      },
      {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "sampleCode",
        ],
        "simpleType": "boolean",
        "switch": "sample-code",
      },
      {
        "default": "- fetch all scoped packages from the public npm registry",
        "docs": "Options for privately hosted scoped packages.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.javascript.ScopedPackagesOptions",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "scopedPackagesOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scopedPackagesOptions",
        ],
        "simpleType": "unknown",
        "switch": "scoped-packages-options",
      },
      {
        "default": "{}",
        "deprecated": true,
        "docs": "npm scripts to include.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scripts",
        ],
        "simpleType": "unknown",
        "switch": "scripts",
      },
      {
        "default": ""src"",
        "docs": "Typescript sources directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "srcdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "srcdir",
        ],
        "simpleType": "string",
        "switch": "srcdir",
      },
      {
        "docs": "Package's Stability.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "stability",
        ],
        "simpleType": "string",
        "switch": "stability",
      },
      {
        "default": "false",
        "docs": "Auto-close of stale issues and pull request.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "stale",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "stale",
        ],
        "simpleType": "boolean",
        "switch": "stale",
      },
      {
        "default": "- see defaults in \`StaleOptions\`",
        "docs": "Auto-close stale issues and pull requests.",
        "featured": false,
        "fqn": "projen.github.StaleOptions",
        "fullType": {
          "fqn": "projen.github.StaleOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "staleOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "staleOptions",
        ],
        "simpleType": "StaleOptions",
        "switch": "stale-options",
      },
      {
        "default": "true",
        "docs": "Setup Tailwind CSS as a PostCSS plugin.",
        "featured": true,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "tailwind",
        "optional": true,
        "parent": "NextJsCommonProjectOptions",
        "path": [
          "tailwind",
        ],
        "simpleType": "boolean",
        "switch": "tailwind",
      },
      {
        "default": ""test"",
        "docs": "Jest tests directory. Tests files should be named \`xxx.test.ts\`.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "testdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "testdir",
        ],
        "simpleType": "string",
        "switch": "testdir",
      },
      {
        "default": "- default options",
        "docs": "Custom TSConfig.",
        "featured": false,
        "fqn": "projen.javascript.TypescriptConfigOptions",
        "fullType": {
          "fqn": "projen.javascript.TypescriptConfigOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfig",
        ],
        "simpleType": "TypescriptConfigOptions",
        "switch": "tsconfig",
      },
      {
        "default": "- use the production tsconfig options",
        "docs": "Custom tsconfig options for the development tsconfig.json file (used for testing).",
        "featured": false,
        "fqn": "projen.javascript.TypescriptConfigOptions",
        "fullType": {
          "fqn": "projen.javascript.TypescriptConfigOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsconfigDev",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfigDev",
        ],
        "simpleType": "TypescriptConfigOptions",
        "switch": "tsconfig-dev",
      },
      {
        "default": ""tsconfig.dev.json"",
        "docs": "The name of the development tsconfig.json file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "tsconfigDevFile",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfigDevFile",
        ],
        "simpleType": "string",
        "switch": "tsconfig-dev-file",
      },
      {
        "docs": "Options for ts-jest.",
        "featured": false,
        "fqn": "projen.typescript.TsJestOptions",
        "fullType": {
          "fqn": "projen.typescript.TsJestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsJestOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsJestOptions",
        ],
        "simpleType": "TsJestOptions",
        "switch": "ts-jest-options",
      },
      {
        "default": ""latest"",
        "docs": "TypeScript version to use.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "typescriptVersion",
        ],
        "simpleType": "string",
        "switch": "typescript-version",
      },
      {
        "default": "- standard configuration applicable for GitHub repositories",
        "docs": "Custom configuration used when creating changelog with commit-and-tag-version package.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "any",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "versionrcOptions",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "versionrcOptions",
        ],
        "simpleType": "unknown",
        "switch": "versionrc-options",
      },
      {
        "default": "true",
        "docs": "Enable VSCode integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "vscode",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "vscode",
        ],
        "simpleType": "boolean",
        "switch": "vscode",
      },
      {
        "default": ""yarn install --frozen-lockfile && yarn projen"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowBootstrapSteps",
        ],
        "simpleType": "unknown",
        "switch": "workflow-bootstrap-steps",
      },
      {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowContainerImage",
        ],
        "simpleType": "string",
        "switch": "workflow-container-image",
      },
      {
        "default": "- GitHub Actions",
        "docs": "The git identity to use in workflows.",
        "featured": false,
        "fqn": "projen.github.GitIdentity",
        "fullType": {
          "fqn": "projen.github.GitIdentity",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowGitIdentity",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowGitIdentity",
        ],
        "simpleType": "GitIdentity",
        "switch": "workflow-git-identity",
      },
      {
        "default": "- \`minNodeVersion\` if set, otherwise \`lts/*\`.",
        "docs": "The node version used in GitHub Actions workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowNodeVersion",
        ],
        "simpleType": "string",
        "switch": "workflow-node-version",
      },
      {
        "default": "false",
        "docs": "Enable Node.js package cache in GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "workflowPackageCache",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowPackageCache",
        ],
        "simpleType": "boolean",
        "switch": "workflow-package-cache",
      },
      {
        "default": "["ubuntu-latest"]",
        "docs": "Github Runner selection labels.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowRunsOn",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOn",
        ],
        "simpleType": "unknown",
        "switch": "workflow-runs-on",
      },
      {
        "docs": "Github Runner Group selection options.",
        "featured": false,
        "fqn": "projen.GroupRunnerOptions",
        "fullType": {
          "fqn": "projen.GroupRunnerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowRunsOnGroup",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOnGroup",
        ],
        "simpleType": "GroupRunnerOptions",
        "switch": "workflow-runs-on-group",
      },
      {
        "default": "- Yarn Berry v4 with all default options",
        "docs": "Options for Yarn Berry.",
        "featured": false,
        "fqn": "projen.javascript.YarnBerryOptions",
        "fullType": {
          "fqn": "projen.javascript.YarnBerryOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "yarnBerryOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "yarnBerryOptions",
        ],
        "simpleType": "YarnBerryOptions",
        "switch": "yarn-berry-options",
      },
    ],
    "pjid": "nextjs-ts",
    "typename": "web.NextJsTypeScriptProject",
  },
  {
    "docs": "Node.js project.",
    "docsurl": "https://projen.io/docs/api/javascript#nodeproject-",
    "fqn": "projen.javascript.NodeProject",
    "moduleName": "projen",
    "options": [
      {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "allowLibraryDependencies",
        ],
        "simpleType": "boolean",
        "switch": "allow-library-dependencies",
      },
      {
        "default": ""dist"",
        "docs": "A directory which will contain build artifacts.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "artifactsDirectory",
        ],
        "simpleType": "string",
        "switch": "artifacts-directory",
      },
      {
        "docs": "Author's e-mail.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorEmail",
        ],
        "simpleType": "string",
        "switch": "author-email",
      },
      {
        "docs": "Author's name.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorName",
        ],
        "simpleType": "string",
        "switch": "author-name",
      },
      {
        "docs": "Is the author an organization.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorOrganization",
        ],
        "simpleType": "boolean",
        "switch": "author-organization",
      },
      {
        "docs": "Author's URL / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorUrl",
        ],
        "simpleType": "string",
        "switch": "author-url",
      },
      {
        "default": "- auto approve is disabled",
        "docs": "Enable and configure the 'auto approve' workflow.",
        "featured": false,
        "fqn": "projen.github.AutoApproveOptions",
        "fullType": {
          "fqn": "projen.github.AutoApproveOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoApproveOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoApproveOptions",
        ],
        "simpleType": "AutoApproveOptions",
        "switch": "auto-approve-options",
      },
      {
        "default": "- true",
        "docs": "Automatically approve deps upgrade PRs, allowing them to be merged by mergify (if configued).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoApproveUpgrades",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "autoApproveUpgrades",
        ],
        "simpleType": "boolean",
        "switch": "auto-approve-upgrades",
      },
      {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "autoDetectBin",
        ],
        "simpleType": "boolean",
        "switch": "auto-detect-bin",
      },
      {
        "default": "true",
        "docs": "Enable automatic merging on GitHub.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoMerge",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMerge",
        ],
        "simpleType": "boolean",
        "switch": "auto-merge",
      },
      {
        "default": "- see defaults in \`AutoMergeOptions\`",
        "docs": "Configure options for automatic merging on GitHub.",
        "featured": false,
        "fqn": "projen.github.AutoMergeOptions",
        "fullType": {
          "fqn": "projen.github.AutoMergeOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoMergeOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMergeOptions",
        ],
        "simpleType": "AutoMergeOptions",
        "switch": "auto-merge-options",
      },
      {
        "docs": "Binary programs vended with your module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bin",
        ],
        "simpleType": "unknown",
        "switch": "bin",
      },
      {
        "docs": "The email address to which issues should be reported.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsEmail",
        ],
        "simpleType": "string",
        "switch": "bugs-email",
      },
      {
        "docs": "The url to your project's issue tracker.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsUrl",
        ],
        "simpleType": "string",
        "switch": "bugs-url",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "build-workflow",
      },
      {
        "docs": "Options for PR build workflow.",
        "featured": false,
        "fqn": "projen.javascript.BuildWorkflowOptions",
        "fullType": {
          "fqn": "projen.javascript.BuildWorkflowOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowOptions",
        ],
        "simpleType": "BuildWorkflowOptions",
        "switch": "build-workflow-options",
      },
      {
        "default": ""{ pullRequest: {}, workflowDispatch: {} }"",
        "deprecated": true,
        "docs": "Build workflow triggers.",
        "featured": false,
        "fqn": "projen.github.workflows.Triggers",
        "fullType": {
          "fqn": "projen.github.workflows.Triggers",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowTriggers",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowTriggers",
        ],
        "simpleType": "Triggers",
        "switch": "build-workflow-triggers",
      },
      {
        "default": "- A recent version of "commit-and-tag-version"",
        "docs": "The \`commit-and-tag-version\` compatible package used to bump the package version, as a dependency string.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bumpPackage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "bumpPackage",
        ],
        "simpleType": "string",
        "switch": "bump-package",
      },
      {
        "docs": "List of dependencies to bundle into this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bundledDeps",
        ],
        "simpleType": "unknown",
        "switch": "bundled-deps",
      },
      {
        "docs": "Options for \`Bundler\`.",
        "featured": false,
        "fqn": "projen.javascript.BundlerOptions",
        "fullType": {
          "fqn": "projen.javascript.BundlerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "bundlerOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "bundlerOptions",
        ],
        "simpleType": "BundlerOptions",
        "switch": "bundler-options",
      },
      {
        "default": ""latest"",
        "docs": "The version of Bun to use if using Bun as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bunVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bunVersion",
        ],
        "simpleType": "string",
        "switch": "bun-version",
      },
      {
        "default": "- no license checks are run during the build and all licenses will be accepted",
        "docs": "Configure which licenses should be deemed acceptable for use by dependencies.",
        "featured": false,
        "fqn": "projen.javascript.LicenseCheckerOptions",
        "fullType": {
          "fqn": "projen.javascript.LicenseCheckerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "checkLicenses",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "checkLicenses",
        ],
        "simpleType": "LicenseCheckerOptions",
        "switch": "check-licenses",
      },
      {
        "default": "- true, but false for subprojects",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "clobber",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "clobber",
        ],
        "simpleType": "boolean",
        "switch": "clobber",
      },
      {
        "default": "- undefined",
        "docs": "Options for npm packages using AWS CodeArtifact.",
        "featured": false,
        "fqn": "projen.javascript.CodeArtifactOptions",
        "fullType": {
          "fqn": "projen.javascript.CodeArtifactOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "codeArtifactOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "codeArtifactOptions",
        ],
        "simpleType": "CodeArtifactOptions",
        "switch": "code-artifact-options",
      },
      {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v4 A secret is required for private repos. Configured with \`@codeCovTokenSecret\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCov",
        ],
        "simpleType": "boolean",
        "switch": "code-cov",
      },
      {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCovTokenSecret",
        ],
        "simpleType": "string",
        "switch": "code-cov-token-secret",
      },
      {
        "default": "true",
        "docs": "Whether to commit the managed files by default.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "commitGenerated",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "commitGenerated",
        ],
        "simpleType": "boolean",
        "switch": "commit-generated",
      },
      {
        "default": "- defaults to the value of authorName or "" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightOwner",
        ],
        "simpleType": "string",
        "switch": "copyright-owner",
      },
      {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightPeriod",
        ],
        "simpleType": "string",
        "switch": "copyright-period",
      },
      {
        "default": ""main"",
        "docs": "The name of the main release branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""main"",
        "jsonLike": true,
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": [
          "defaultReleaseBranch",
        ],
        "simpleType": "string",
        "switch": "default-release-branch",
      },
      {
        "default": "false",
        "docs": "Use dependabot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabot",
        ],
        "simpleType": "boolean",
        "switch": "dependabot",
      },
      {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "featured": false,
        "fqn": "projen.github.DependabotOptions",
        "fullType": {
          "fqn": "projen.github.DependabotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabotOptions",
        ],
        "simpleType": "DependabotOptions",
        "switch": "dependabot-options",
      },
      {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "deps",
        ],
        "simpleType": "unknown",
        "switch": "deps",
      },
      {
        "default": "true",
        "docs": "Use tasks and github workflows to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "depsUpgrade",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgrade",
        ],
        "simpleType": "boolean",
        "switch": "deps-upgrade",
      },
      {
        "default": "- default options",
        "docs": "Options for \`UpgradeDependencies\`.",
        "featured": false,
        "fqn": "projen.javascript.UpgradeDependenciesOptions",
        "fullType": {
          "fqn": "projen.javascript.UpgradeDependenciesOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "depsUpgradeOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgradeOptions",
        ],
        "simpleType": "UpgradeDependenciesOptions",
        "switch": "deps-upgrade-options",
      },
      {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "description",
        ],
        "simpleType": "string",
        "switch": "description",
      },
      {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "devContainer",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "devContainer",
        ],
        "simpleType": "boolean",
        "switch": "dev-container",
      },
      {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "devDeps",
        ],
        "simpleType": "unknown",
        "switch": "dev-deps",
      },
      {
        "default": ""lib/index.js"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "entrypoint",
        ],
        "simpleType": "string",
        "switch": "entrypoint",
      },
      {
        "default": "true",
        "docs": "Enable GitHub integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "github",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "github",
        ],
        "simpleType": "boolean",
        "switch": "github",
      },
      {
        "default": "- see GitHubOptions",
        "docs": "Options for GitHub integration.",
        "featured": false,
        "fqn": "projen.github.GitHubOptions",
        "fullType": {
          "fqn": "projen.github.GitHubOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "githubOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "githubOptions",
        ],
        "simpleType": "GitHubOptions",
        "switch": "github-options",
      },
      {
        "docs": "Additional entries to .gitignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "gitignore",
        ],
        "simpleType": "unknown",
        "switch": "gitignore",
      },
      {
        "docs": "Configuration options for .gitignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitIgnoreOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "git-ignore-options",
      },
      {
        "docs": "Configuration options for git.",
        "featured": false,
        "fqn": "projen.GitOptions",
        "fullType": {
          "fqn": "projen.GitOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitOptions",
        ],
        "simpleType": "GitOptions",
        "switch": "git-options",
      },
      {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "gitpod",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "gitpod",
        ],
        "simpleType": "boolean",
        "switch": "gitpod",
      },
      {
        "docs": "Package's Homepage / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "homepage",
        ],
        "simpleType": "string",
        "switch": "homepage",
      },
      {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jest",
        ],
        "simpleType": "boolean",
        "switch": "jest",
      },
      {
        "default": "- default options",
        "docs": "Jest options.",
        "featured": false,
        "fqn": "projen.javascript.JestOptions",
        "fullType": {
          "fqn": "projen.javascript.JestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jestOptions",
        ],
        "simpleType": "JestOptions",
        "switch": "jest-options",
      },
      {
        "default": ""latest"",
        "docs": "Version requirement of \`publib\` which is used to publish modules to npm.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "jsiiReleaseVersion",
        ],
        "simpleType": "string",
        "switch": "jsii-release-version",
      },
      {
        "docs": "Keywords to include in \`package.json\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "keywords",
        ],
        "simpleType": "unknown",
        "switch": "keywords",
      },
      {
        "default": ""Apache-2.0"",
        "docs": "License's SPDX identifier.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "license",
        ],
        "simpleType": "string",
        "switch": "license",
      },
      {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "licensed",
        ],
        "simpleType": "boolean",
        "switch": "licensed",
      },
      {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "featured": false,
        "fqn": "projen.LoggerOptions",
        "fullType": {
          "fqn": "projen.LoggerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "logging",
        ],
        "simpleType": "LoggerOptions",
        "switch": "logging",
      },
      {
        "default": "- Major version is not enforced.",
        "docs": "Major version to release from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "majorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "majorVersion",
        ],
        "simpleType": "number",
        "switch": "major-version",
      },
      {
        "default": "- no maximum version is enforced",
        "docs": "The maximum node version supported by this package. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "maxNodeVersion",
        ],
        "simpleType": "string",
        "switch": "max-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Whether mergify should be enabled on this repository or not.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mergify",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergify",
        ],
        "simpleType": "boolean",
        "switch": "mergify",
      },
      {
        "default": "- default options",
        "deprecated": true,
        "docs": "Options for mergify.",
        "featured": false,
        "fqn": "projen.github.MergifyOptions",
        "fullType": {
          "fqn": "projen.github.MergifyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergifyOptions",
        ],
        "simpleType": "MergifyOptions",
        "switch": "mergify-options",
      },
      {
        "default": "- No minimum version is being enforced",
        "docs": "Minimal Major version to release.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "minMajorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "minMajorVersion",
        ],
        "simpleType": "number",
        "switch": "min-major-version",
      },
      {
        "default": "- no minimum version is enforced",
        "docs": "The minimum node version required by this package to function. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "minNodeVersion",
        ],
        "simpleType": "string",
        "switch": "min-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "mutableBuild",
        ],
        "simpleType": "boolean",
        "switch": "mutable-build",
      },
      {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$BASEDIR",
        "jsonLike": true,
        "name": "name",
        "parent": "ProjectOptions",
        "path": [
          "name",
        ],
        "simpleType": "string",
        "switch": "name",
      },
      {
        "default": "- The next version will be determined based on the commit history and project settings.",
        "docs": "A shell command to control the next version to release.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "nextVersionCommand",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "nextVersionCommand",
        ],
        "simpleType": "string",
        "switch": "next-version-command",
      },
      {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "featured": false,
        "fqn": "projen.javascript.NpmAccess",
        "fullType": {
          "fqn": "projen.javascript.NpmAccess",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmAccess",
        ],
        "simpleType": "NpmAccess",
        "switch": "npm-access",
      },
      {
        "default": ""latest"",
        "docs": "The npmDistTag to use when publishing from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmDistTag",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "npmDistTag",
        ],
        "simpleType": "string",
        "switch": "npm-dist-tag",
      },
      {
        "deprecated": true,
        "docs": "Additional entries to .npmignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignore",
        ],
        "simpleType": "unknown",
        "switch": "npmignore",
      },
      {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignoreEnabled",
        ],
        "simpleType": "boolean",
        "switch": "npmignore-enabled",
      },
      {
        "docs": "Configuration options for .npmignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "npmIgnoreOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "npm-ignore-options",
      },
      {
        "default": "- true for public packages, false otherwise",
        "docs": "Should provenance statements be generated when the package is published.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmProvenance",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmProvenance",
        ],
        "simpleType": "boolean",
        "switch": "npm-provenance",
      },
      {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistry",
        ],
        "simpleType": "string",
        "switch": "npm-registry",
      },
      {
        "default": ""https://registry.npmjs.org"",
        "docs": "The base URL of the npm package registry.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistryUrl",
        ],
        "simpleType": "string",
        "switch": "npm-registry-url",
      },
      {
        "default": ""NPM_TOKEN"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmTokenSecret",
        ],
        "simpleType": "string",
        "switch": "npm-token-secret",
      },
      {
        "default": ""."",
        "docs": "The root directory of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "outdir",
        ],
        "simpleType": "string",
        "switch": "outdir",
      },
      {
        "default": "true",
        "docs": "Defines a \`package\` task that will produce an npm tarball under the artifacts directory (e.g. \`dist\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "package",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "package",
        ],
        "simpleType": "boolean",
        "switch": "package",
      },
      {
        "default": "NodePackageManager.YARN_CLASSIC",
        "docs": "The Node Package Manager used to execute scripts.",
        "featured": false,
        "fqn": "projen.javascript.NodePackageManager",
        "fullType": {
          "fqn": "projen.javascript.NodePackageManager",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageManager",
        ],
        "simpleType": "NodePackageManager",
        "switch": "package-manager",
      },
      {
        "default": "- defaults to project name",
        "docs": "The "name" in package.json.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageName",
        ],
        "simpleType": "string",
        "switch": "package-name",
      },
      {
        "docs": "The parent project, if this project is part of a bigger project.",
        "featured": false,
        "fqn": "projen.Project",
        "fullType": {
          "fqn": "projen.Project",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "parent",
        ],
        "simpleType": "Project",
        "switch": "parent",
      },
      {
        "docs": "Options for \`peerDeps\`.",
        "featured": false,
        "fqn": "projen.javascript.PeerDependencyOptions",
        "fullType": {
          "fqn": "projen.javascript.PeerDependencyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDependencyOptions",
        ],
        "simpleType": "PeerDependencyOptions",
        "switch": "peer-dependency-options",
      },
      {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDeps",
        ],
        "simpleType": "unknown",
        "switch": "peer-deps",
      },
      {
        "default": ""9"",
        "docs": "The version of PNPM to use if using PNPM as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "pnpmVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "pnpmVersion",
        ],
        "simpleType": "string",
        "switch": "pnpm-version",
      },
      {
        "default": "[]",
        "docs": "Steps to execute after build as part of the release workflow.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "postBuildSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "postBuildSteps",
        ],
        "simpleType": "unknown",
        "switch": "post-build-steps",
      },
      {
        "default": "- normal semantic versions",
        "docs": "Bump versions from the default branch as pre-releases (e.g. "beta", "alpha", "pre").",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "prerelease",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "prerelease",
        ],
        "simpleType": "string",
        "switch": "prerelease",
      },
      {
        "default": "false",
        "docs": "Setup prettier.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "prettier",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettier",
        ],
        "simpleType": "boolean",
        "switch": "prettier",
      },
      {
        "default": "- default options",
        "docs": "Prettier options.",
        "featured": false,
        "fqn": "projen.javascript.PrettierOptions",
        "fullType": {
          "fqn": "projen.javascript.PrettierOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "prettierOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettierOptions",
        ],
        "simpleType": "PrettierOptions",
        "switch": "prettier-options",
      },
      {
        "default": "ProjectType.UNKNOWN",
        "deprecated": true,
        "docs": "Which type of project this is (library/app).",
        "featured": false,
        "fqn": "projen.ProjectType",
        "fullType": {
          "fqn": "projen.ProjectType",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "projectType",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projectType",
        ],
        "simpleType": "ProjectType",
        "switch": "project-type",
      },
      {
        "default": ""npx projen"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenCommand",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenCommand",
        ],
        "simpleType": "string",
        "switch": "projen-command",
      },
      {
        "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
        "docs": "Choose a method of providing GitHub API access for projen workflows.",
        "featured": false,
        "fqn": "projen.github.GithubCredentials",
        "fullType": {
          "fqn": "projen.github.GithubCredentials",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "projenCredentials",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenCredentials",
        ],
        "simpleType": "GithubCredentials",
        "switch": "projen-credentials",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Indicates of "projen" should be installed as a devDependency.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenDevDependency",
        ],
        "simpleType": "boolean",
        "switch": "projen-dev-dependency",
      },
      {
        "default": "- true if projenrcJson is false",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-js",
      },
      {
        "default": "false",
        "docs": "Generate (once) .projenrc.json (in JSON). Set to \`false\` in order to disable .projenrc.json generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJson",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJson",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-json",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.json.",
        "featured": false,
        "fqn": "projen.ProjenrcJsonOptions",
        "fullType": {
          "fqn": "projen.ProjenrcJsonOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsonOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJsonOptions",
        ],
        "simpleType": "ProjenrcJsonOptions",
        "switch": "projenrc-json-options",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "featured": false,
        "fqn": "projen.javascript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.javascript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-js-options",
      },
      {
        "default": ""PROJEN_GITHUB_TOKEN"",
        "deprecated": true,
        "docs": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenTokenSecret",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenTokenSecret",
        ],
        "simpleType": "string",
        "switch": "projen-token-secret",
      },
      {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenVersion",
        ],
        "simpleType": "string",
        "switch": "projen-version",
      },
      {
        "default": "false",
        "docs": "Instead of actually publishing to package managers, just print the publishing command.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishDryRun",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishDryRun",
        ],
        "simpleType": "boolean",
        "switch": "publish-dry-run",
      },
      {
        "default": "false",
        "docs": "Define publishing tasks that can be executed manually as well as workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishTasks",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishTasks",
        ],
        "simpleType": "boolean",
        "switch": "publish-tasks",
      },
      {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplate",
        ],
        "simpleType": "boolean",
        "switch": "pull-request-template",
      },
      {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplateContents",
        ],
        "simpleType": "unknown",
        "switch": "pull-request-template-contents",
      },
      {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "featured": false,
        "fqn": "projen.SampleReadmeProps",
        "fullType": {
          "fqn": "projen.SampleReadmeProps",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "readme",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "readme",
        ],
        "simpleType": "SampleReadmeProps",
        "switch": "readme",
      },
      {
        "default": "ReleasableCommits.everyCommit()",
        "docs": "Find commits that should be considered releasable Used to decide if a release is required.",
        "featured": false,
        "fqn": "projen.ReleasableCommits",
        "fullType": {
          "fqn": "projen.ReleasableCommits",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releasableCommits",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releasableCommits",
        ],
        "simpleType": "ReleasableCommits",
        "switch": "releasable-commits",
      },
      {
        "default": "- true (false for subprojects)",
        "docs": "Add release management to this project.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "release",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "release",
        ],
        "simpleType": "boolean",
        "switch": "release",
      },
      {
        "default": "- no additional branches are used for release. you can use
\`addBranch()\` to add additional branches.",
        "docs": "Defines additional release branches.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.release.BranchOptions",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "releaseBranches",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseBranches",
        ],
        "simpleType": "unknown",
        "switch": "release-branches",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseEveryCommit",
        ],
        "simpleType": "boolean",
        "switch": "release-every-commit",
      },
      {
        "default": "false",
        "docs": "Create a github issue on every failed publishing task.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseFailureIssue",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssue",
        ],
        "simpleType": "boolean",
        "switch": "release-failure-issue",
      },
      {
        "default": ""failed-release"",
        "docs": "The label to apply to issues indicating publish failures.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseFailureIssueLabel",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssueLabel",
        ],
        "simpleType": "string",
        "switch": "release-failure-issue-label",
      },
      {
        "default": "- no scheduled releases",
        "deprecated": true,
        "docs": "CRON schedule to trigger new releases.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseSchedule",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseSchedule",
        ],
        "simpleType": "string",
        "switch": "release-schedule",
      },
      {
        "default": ""v"",
        "docs": "Automatically add the given prefix to release tags. Useful if you are releasing on multiple branches with overlapping version numbers.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseTagPrefix",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTagPrefix",
        ],
        "simpleType": "string",
        "switch": "release-tag-prefix",
      },
      {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseToNpm",
        ],
        "simpleType": "boolean",
        "switch": "release-to-npm",
      },
      {
        "default": "- Continuous releases (\`ReleaseTrigger.continuous()\`)",
        "docs": "The release trigger to use.",
        "featured": false,
        "fqn": "projen.release.ReleaseTrigger",
        "fullType": {
          "fqn": "projen.release.ReleaseTrigger",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releaseTrigger",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTrigger",
        ],
        "simpleType": "ReleaseTrigger",
        "switch": "release-trigger",
      },
      {
        "default": "- true if not a subproject",
        "deprecated": true,
        "docs": "DEPRECATED: renamed to \`release\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "release-workflow",
      },
      {
        "default": ""release"",
        "docs": "The name of the default release workflow.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseWorkflowName",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowName",
        ],
        "simpleType": "string",
        "switch": "release-workflow-name",
      },
      {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowSetupSteps",
        ],
        "simpleType": "unknown",
        "switch": "release-workflow-setup-steps",
      },
      {
        "default": "false",
        "docs": "Use renovatebot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "renovatebot",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebot",
        ],
        "simpleType": "boolean",
        "switch": "renovatebot",
      },
      {
        "default": "- default options",
        "docs": "Options for renovatebot.",
        "featured": false,
        "fqn": "projen.RenovatebotOptions",
        "fullType": {
          "fqn": "projen.RenovatebotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "renovatebotOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebotOptions",
        ],
        "simpleType": "RenovatebotOptions",
        "switch": "renovatebot-options",
      },
      {
        "docs": "The repository is the location where the actual code for your package lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repository",
        ],
        "simpleType": "string",
        "switch": "repository",
      },
      {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repositoryDirectory",
        ],
        "simpleType": "string",
        "switch": "repository-directory",
      },
      {
        "default": "- fetch all scoped packages from the public npm registry",
        "docs": "Options for privately hosted scoped packages.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.javascript.ScopedPackagesOptions",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "scopedPackagesOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scopedPackagesOptions",
        ],
        "simpleType": "unknown",
        "switch": "scoped-packages-options",
      },
      {
        "default": "{}",
        "deprecated": true,
        "docs": "npm scripts to include.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scripts",
        ],
        "simpleType": "unknown",
        "switch": "scripts",
      },
      {
        "docs": "Package's Stability.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "stability",
        ],
        "simpleType": "string",
        "switch": "stability",
      },
      {
        "default": "false",
        "docs": "Auto-close of stale issues and pull request.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "stale",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "stale",
        ],
        "simpleType": "boolean",
        "switch": "stale",
      },
      {
        "default": "- see defaults in \`StaleOptions\`",
        "docs": "Auto-close stale issues and pull requests.",
        "featured": false,
        "fqn": "projen.github.StaleOptions",
        "fullType": {
          "fqn": "projen.github.StaleOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "staleOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "staleOptions",
        ],
        "simpleType": "StaleOptions",
        "switch": "stale-options",
      },
      {
        "default": "- standard configuration applicable for GitHub repositories",
        "docs": "Custom configuration used when creating changelog with commit-and-tag-version package.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "any",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "versionrcOptions",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "versionrcOptions",
        ],
        "simpleType": "unknown",
        "switch": "versionrc-options",
      },
      {
        "default": "true",
        "docs": "Enable VSCode integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "vscode",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "vscode",
        ],
        "simpleType": "boolean",
        "switch": "vscode",
      },
      {
        "default": ""yarn install --frozen-lockfile && yarn projen"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowBootstrapSteps",
        ],
        "simpleType": "unknown",
        "switch": "workflow-bootstrap-steps",
      },
      {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowContainerImage",
        ],
        "simpleType": "string",
        "switch": "workflow-container-image",
      },
      {
        "default": "- GitHub Actions",
        "docs": "The git identity to use in workflows.",
        "featured": false,
        "fqn": "projen.github.GitIdentity",
        "fullType": {
          "fqn": "projen.github.GitIdentity",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowGitIdentity",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowGitIdentity",
        ],
        "simpleType": "GitIdentity",
        "switch": "workflow-git-identity",
      },
      {
        "default": "- \`minNodeVersion\` if set, otherwise \`lts/*\`.",
        "docs": "The node version used in GitHub Actions workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowNodeVersion",
        ],
        "simpleType": "string",
        "switch": "workflow-node-version",
      },
      {
        "default": "false",
        "docs": "Enable Node.js package cache in GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "workflowPackageCache",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowPackageCache",
        ],
        "simpleType": "boolean",
        "switch": "workflow-package-cache",
      },
      {
        "default": "["ubuntu-latest"]",
        "docs": "Github Runner selection labels.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowRunsOn",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOn",
        ],
        "simpleType": "unknown",
        "switch": "workflow-runs-on",
      },
      {
        "docs": "Github Runner Group selection options.",
        "featured": false,
        "fqn": "projen.GroupRunnerOptions",
        "fullType": {
          "fqn": "projen.GroupRunnerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowRunsOnGroup",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOnGroup",
        ],
        "simpleType": "GroupRunnerOptions",
        "switch": "workflow-runs-on-group",
      },
      {
        "default": "- Yarn Berry v4 with all default options",
        "docs": "Options for Yarn Berry.",
        "featured": false,
        "fqn": "projen.javascript.YarnBerryOptions",
        "fullType": {
          "fqn": "projen.javascript.YarnBerryOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "yarnBerryOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "yarnBerryOptions",
        ],
        "simpleType": "YarnBerryOptions",
        "switch": "yarn-berry-options",
      },
    ],
    "pjid": "node",
    "typename": "javascript.NodeProject",
  },
  {
    "docs": "Base project.",
    "docsurl": "https://projen.io/docs/api/projen#project-",
    "fqn": "projen.Project",
    "moduleName": "projen",
    "options": [
      {
        "default": "true",
        "docs": "Whether to commit the managed files by default.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "commitGenerated",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "commitGenerated",
        ],
        "simpleType": "boolean",
        "switch": "commit-generated",
      },
      {
        "docs": "Configuration options for .gitignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitIgnoreOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "git-ignore-options",
      },
      {
        "docs": "Configuration options for git.",
        "featured": false,
        "fqn": "projen.GitOptions",
        "fullType": {
          "fqn": "projen.GitOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitOptions",
        ],
        "simpleType": "GitOptions",
        "switch": "git-options",
      },
      {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "featured": false,
        "fqn": "projen.LoggerOptions",
        "fullType": {
          "fqn": "projen.LoggerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "logging",
        ],
        "simpleType": "LoggerOptions",
        "switch": "logging",
      },
      {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$BASEDIR",
        "jsonLike": true,
        "name": "name",
        "parent": "ProjectOptions",
        "path": [
          "name",
        ],
        "simpleType": "string",
        "switch": "name",
      },
      {
        "default": ""."",
        "docs": "The root directory of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "outdir",
        ],
        "simpleType": "string",
        "switch": "outdir",
      },
      {
        "docs": "The parent project, if this project is part of a bigger project.",
        "featured": false,
        "fqn": "projen.Project",
        "fullType": {
          "fqn": "projen.Project",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "parent",
        ],
        "simpleType": "Project",
        "switch": "parent",
      },
      {
        "default": ""npx projen"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenCommand",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenCommand",
        ],
        "simpleType": "string",
        "switch": "projen-command",
      },
      {
        "default": "false",
        "docs": "Generate (once) .projenrc.json (in JSON). Set to \`false\` in order to disable .projenrc.json generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJson",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJson",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-json",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.json.",
        "featured": false,
        "fqn": "projen.ProjenrcJsonOptions",
        "fullType": {
          "fqn": "projen.ProjenrcJsonOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsonOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJsonOptions",
        ],
        "simpleType": "ProjenrcJsonOptions",
        "switch": "projenrc-json-options",
      },
      {
        "default": "false",
        "docs": "Use renovatebot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "renovatebot",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebot",
        ],
        "simpleType": "boolean",
        "switch": "renovatebot",
      },
      {
        "default": "- default options",
        "docs": "Options for renovatebot.",
        "featured": false,
        "fqn": "projen.RenovatebotOptions",
        "fullType": {
          "fqn": "projen.RenovatebotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "renovatebotOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebotOptions",
        ],
        "simpleType": "RenovatebotOptions",
        "switch": "renovatebot-options",
      },
    ],
    "pjid": "project",
    "typename": "Project",
  },
  {
    "docs": "Python project.",
    "docsurl": "https://projen.io/docs/api/python#pythonproject-",
    "fqn": "projen.python.PythonProject",
    "moduleName": "projen",
    "options": [
      {
        "default": "$GIT_USER_EMAIL",
        "docs": "Author's e-mail.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$GIT_USER_EMAIL",
        "jsonLike": true,
        "name": "authorEmail",
        "parent": "PythonPackagingOptions",
        "path": [
          "authorEmail",
        ],
        "simpleType": "string",
        "switch": "author-email",
      },
      {
        "default": "$GIT_USER_NAME",
        "docs": "Author's name.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$GIT_USER_NAME",
        "jsonLike": true,
        "name": "authorName",
        "parent": "PythonPackagingOptions",
        "path": [
          "authorName",
        ],
        "simpleType": "string",
        "switch": "author-name",
      },
      {
        "default": "- auto approve is disabled",
        "docs": "Enable and configure the 'auto approve' workflow.",
        "featured": false,
        "fqn": "projen.github.AutoApproveOptions",
        "fullType": {
          "fqn": "projen.github.AutoApproveOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoApproveOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoApproveOptions",
        ],
        "simpleType": "AutoApproveOptions",
        "switch": "auto-approve-options",
      },
      {
        "default": "true",
        "docs": "Enable automatic merging on GitHub.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoMerge",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMerge",
        ],
        "simpleType": "boolean",
        "switch": "auto-merge",
      },
      {
        "default": "- see defaults in \`AutoMergeOptions\`",
        "docs": "Configure options for automatic merging on GitHub.",
        "featured": false,
        "fqn": "projen.github.AutoMergeOptions",
        "fullType": {
          "fqn": "projen.github.AutoMergeOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoMergeOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMergeOptions",
        ],
        "simpleType": "AutoMergeOptions",
        "switch": "auto-merge-options",
      },
      {
        "docs": "A list of PyPI trove classifiers that describe the project.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "classifiers",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": [
          "classifiers",
        ],
        "simpleType": "unknown",
        "switch": "classifiers",
      },
      {
        "default": "- true, but false for subprojects",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "clobber",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "clobber",
        ],
        "simpleType": "boolean",
        "switch": "clobber",
      },
      {
        "default": "true",
        "docs": "Whether to commit the managed files by default.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "commitGenerated",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "commitGenerated",
        ],
        "simpleType": "boolean",
        "switch": "commit-generated",
      },
      {
        "default": "[]",
        "docs": "List of runtime dependencies for this project.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "deps",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "deps",
        ],
        "simpleType": "unknown",
        "switch": "deps",
      },
      {
        "docs": "A short description of the package.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "description",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": [
          "description",
        ],
        "simpleType": "string",
        "switch": "description",
      },
      {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "devContainer",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "devContainer",
        ],
        "simpleType": "boolean",
        "switch": "dev-container",
      },
      {
        "default": "[]",
        "docs": "List of dev dependencies for this project.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "devDeps",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "devDeps",
        ],
        "simpleType": "unknown",
        "switch": "dev-deps",
      },
      {
        "default": "true",
        "docs": "Enable GitHub integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "github",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "github",
        ],
        "simpleType": "boolean",
        "switch": "github",
      },
      {
        "default": "- see GitHubOptions",
        "docs": "Options for GitHub integration.",
        "featured": false,
        "fqn": "projen.github.GitHubOptions",
        "fullType": {
          "fqn": "projen.github.GitHubOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "githubOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "githubOptions",
        ],
        "simpleType": "GitHubOptions",
        "switch": "github-options",
      },
      {
        "docs": "Configuration options for .gitignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitIgnoreOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "git-ignore-options",
      },
      {
        "docs": "Configuration options for git.",
        "featured": false,
        "fqn": "projen.GitOptions",
        "fullType": {
          "fqn": "projen.GitOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitOptions",
        ],
        "simpleType": "GitOptions",
        "switch": "git-options",
      },
      {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "gitpod",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "gitpod",
        ],
        "simpleType": "boolean",
        "switch": "gitpod",
      },
      {
        "docs": "A URL to the website of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "homepage",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": [
          "homepage",
        ],
        "simpleType": "string",
        "switch": "homepage",
      },
      {
        "docs": "License of this package as an SPDX identifier.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "license",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": [
          "license",
        ],
        "simpleType": "string",
        "switch": "license",
      },
      {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "featured": false,
        "fqn": "projen.LoggerOptions",
        "fullType": {
          "fqn": "projen.LoggerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "logging",
        ],
        "simpleType": "LoggerOptions",
        "switch": "logging",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Whether mergify should be enabled on this repository or not.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mergify",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergify",
        ],
        "simpleType": "boolean",
        "switch": "mergify",
      },
      {
        "default": "- default options",
        "deprecated": true,
        "docs": "Options for mergify.",
        "featured": false,
        "fqn": "projen.github.MergifyOptions",
        "fullType": {
          "fqn": "projen.github.MergifyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergifyOptions",
        ],
        "simpleType": "MergifyOptions",
        "switch": "mergify-options",
      },
      {
        "default": "$PYTHON_MODULE_NAME",
        "docs": "Name of the python package as used in imports and filenames.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$PYTHON_MODULE_NAME",
        "jsonLike": true,
        "name": "moduleName",
        "parent": "PythonProjectOptions",
        "path": [
          "moduleName",
        ],
        "simpleType": "string",
        "switch": "module-name",
      },
      {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$BASEDIR",
        "jsonLike": true,
        "name": "name",
        "parent": "ProjectOptions",
        "path": [
          "name",
        ],
        "simpleType": "string",
        "switch": "name",
      },
      {
        "default": ""."",
        "docs": "The root directory of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "outdir",
        ],
        "simpleType": "string",
        "switch": "outdir",
      },
      {
        "docs": "Package name.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "packageName",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": [
          "packageName",
        ],
        "simpleType": "string",
        "switch": "package-name",
      },
      {
        "docs": "The parent project, if this project is part of a bigger project.",
        "featured": false,
        "fqn": "projen.Project",
        "fullType": {
          "fqn": "projen.Project",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "parent",
        ],
        "simpleType": "Project",
        "switch": "parent",
      },
      {
        "default": "- true, unless poetry is true, then false",
        "docs": "Use pip with a requirements.txt file to track project dependencies.",
        "featured": true,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "pip",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "pip",
        ],
        "simpleType": "boolean",
        "switch": "pip",
      },
      {
        "default": "false",
        "docs": "Use poetry to manage your project dependencies, virtual environment, and (optional) packaging/publishing.",
        "featured": true,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "poetry",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "poetry",
        ],
        "simpleType": "boolean",
        "switch": "poetry",
      },
      {
        "docs": "Additional options to set for poetry if using poetry.",
        "featured": false,
        "fqn": "projen.python.PoetryPyprojectOptionsWithoutDeps",
        "fullType": {
          "fqn": "projen.python.PoetryPyprojectOptionsWithoutDeps",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "poetryOptions",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": [
          "poetryOptions",
        ],
        "simpleType": "PoetryPyprojectOptionsWithoutDeps",
        "switch": "poetry-options",
      },
      {
        "default": "ProjectType.UNKNOWN",
        "deprecated": true,
        "docs": "Which type of project this is (library/app).",
        "featured": false,
        "fqn": "projen.ProjectType",
        "fullType": {
          "fqn": "projen.ProjectType",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "projectType",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projectType",
        ],
        "simpleType": "ProjectType",
        "switch": "project-type",
      },
      {
        "default": ""npx projen"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenCommand",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenCommand",
        ],
        "simpleType": "string",
        "switch": "projen-command",
      },
      {
        "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
        "docs": "Choose a method of providing GitHub API access for projen workflows.",
        "featured": false,
        "fqn": "projen.github.GithubCredentials",
        "fullType": {
          "fqn": "projen.github.GithubCredentials",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "projenCredentials",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenCredentials",
        ],
        "simpleType": "GithubCredentials",
        "switch": "projen-credentials",
      },
      {
        "default": "false",
        "docs": "Use projenrc in javascript.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJs",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "projenrcJs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-js",
      },
      {
        "default": "false",
        "docs": "Generate (once) .projenrc.json (in JSON). Set to \`false\` in order to disable .projenrc.json generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJson",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJson",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-json",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.json.",
        "featured": false,
        "fqn": "projen.ProjenrcJsonOptions",
        "fullType": {
          "fqn": "projen.ProjenrcJsonOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsonOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJsonOptions",
        ],
        "simpleType": "ProjenrcJsonOptions",
        "switch": "projenrc-json-options",
      },
      {
        "default": "- default options",
        "docs": "Options related to projenrc in JavaScript.",
        "featured": false,
        "fqn": "projen.javascript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.javascript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "projenrcJsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-js-options",
      },
      {
        "default": "true",
        "docs": "Use projenrc in Python.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcPython",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "projenrcPython",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-python",
      },
      {
        "default": "- default options",
        "docs": "Options related to projenrc in python.",
        "featured": false,
        "fqn": "projen.python.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.python.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcPythonOptions",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "projenrcPythonOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-python-options",
      },
      {
        "default": "false",
        "docs": "Use projenrc in TypeScript.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcTs",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "projenrcTs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-ts",
      },
      {
        "default": "- default options",
        "docs": "Options related to projenrc in TypeScript.",
        "featured": false,
        "fqn": "projen.typescript.ProjenrcTsOptions",
        "fullType": {
          "fqn": "projen.typescript.ProjenrcTsOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "projenrcTsOptions",
        ],
        "simpleType": "ProjenrcTsOptions",
        "switch": "projenrc-ts-options",
      },
      {
        "default": ""PROJEN_GITHUB_TOKEN"",
        "deprecated": true,
        "docs": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenTokenSecret",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenTokenSecret",
        ],
        "simpleType": "string",
        "switch": "projen-token-secret",
      },
      {
        "default": "true",
        "docs": "Include pytest tests.",
        "featured": true,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "pytest",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "pytest",
        ],
        "simpleType": "boolean",
        "switch": "pytest",
      },
      {
        "default": "- defaults",
        "docs": "pytest options.",
        "featured": false,
        "fqn": "projen.python.PytestOptions",
        "fullType": {
          "fqn": "projen.python.PytestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "pytestOptions",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "pytestOptions",
        ],
        "simpleType": "PytestOptions",
        "switch": "pytest-options",
      },
      {
        "default": ""python"",
        "docs": "Path to the python executable to use.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "pythonExec",
        "optional": true,
        "parent": "PythonExecutableOptions",
        "path": [
          "pythonExec",
        ],
        "simpleType": "string",
        "switch": "python-exec",
      },
      {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "featured": false,
        "fqn": "projen.SampleReadmeProps",
        "fullType": {
          "fqn": "projen.SampleReadmeProps",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "readme",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "readme",
        ],
        "simpleType": "SampleReadmeProps",
        "switch": "readme",
      },
      {
        "default": "false",
        "docs": "Use renovatebot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "renovatebot",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebot",
        ],
        "simpleType": "boolean",
        "switch": "renovatebot",
      },
      {
        "default": "- default options",
        "docs": "Options for renovatebot.",
        "featured": false,
        "fqn": "projen.RenovatebotOptions",
        "fullType": {
          "fqn": "projen.RenovatebotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "renovatebotOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebotOptions",
        ],
        "simpleType": "RenovatebotOptions",
        "switch": "renovatebot-options",
      },
      {
        "default": "true",
        "docs": "Include sample code and test if the relevant directories don't exist.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "sample",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "sample",
        ],
        "simpleType": "boolean",
        "switch": "sample",
      },
      {
        "default": ""tests"",
        "docs": "Location of sample tests.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "sampleTestdir",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "sampleTestdir",
        ],
        "simpleType": "string",
        "switch": "sample-testdir",
      },
      {
        "docs": "Additional fields to pass in the setup() function if using setuptools.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "any",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "setupConfig",
        "optional": true,
        "parent": "PythonPackagingOptions",
        "path": [
          "setupConfig",
        ],
        "simpleType": "unknown",
        "switch": "setup-config",
      },
      {
        "default": "- true, unless poetry is true, then false",
        "docs": "Use setuptools with a setup.py script for packaging and publishing.",
        "featured": true,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "setuptools",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "setuptools",
        ],
        "simpleType": "boolean",
        "switch": "setuptools",
      },
      {
        "default": "false",
        "docs": "Auto-close of stale issues and pull request.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "stale",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "stale",
        ],
        "simpleType": "boolean",
        "switch": "stale",
      },
      {
        "default": "- see defaults in \`StaleOptions\`",
        "docs": "Auto-close stale issues and pull requests.",
        "featured": false,
        "fqn": "projen.github.StaleOptions",
        "fullType": {
          "fqn": "projen.github.StaleOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "staleOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "staleOptions",
        ],
        "simpleType": "StaleOptions",
        "switch": "stale-options",
      },
      {
        "default": "- true, unless poetry is true, then false",
        "docs": "Use venv to manage a virtual environment for installing dependencies inside.",
        "featured": true,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "venv",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "venv",
        ],
        "simpleType": "boolean",
        "switch": "venv",
      },
      {
        "default": "- defaults",
        "docs": "Venv options.",
        "featured": false,
        "fqn": "projen.python.VenvOptions",
        "fullType": {
          "fqn": "projen.python.VenvOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "venvOptions",
        "optional": true,
        "parent": "PythonProjectOptions",
        "path": [
          "venvOptions",
        ],
        "simpleType": "VenvOptions",
        "switch": "venv-options",
      },
      {
        "default": ""0.1.0"",
        "docs": "Version of the package.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""0.1.0"",
        "jsonLike": true,
        "name": "version",
        "parent": "PythonPackagingOptions",
        "path": [
          "version",
        ],
        "simpleType": "string",
        "switch": "version",
      },
      {
        "default": "true",
        "docs": "Enable VSCode integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "vscode",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "vscode",
        ],
        "simpleType": "boolean",
        "switch": "vscode",
      },
    ],
    "pjid": "python",
    "typename": "python.PythonProject",
  },
  {
    "docs": "React project using JavaScript.",
    "docsurl": "https://projen.io/docs/api/web#reactproject-",
    "fqn": "projen.web.ReactProject",
    "moduleName": "projen",
    "options": [
      {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "allowLibraryDependencies",
        ],
        "simpleType": "boolean",
        "switch": "allow-library-dependencies",
      },
      {
        "default": ""dist"",
        "docs": "A directory which will contain build artifacts.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "artifactsDirectory",
        ],
        "simpleType": "string",
        "switch": "artifacts-directory",
      },
      {
        "docs": "Author's e-mail.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorEmail",
        ],
        "simpleType": "string",
        "switch": "author-email",
      },
      {
        "docs": "Author's name.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorName",
        ],
        "simpleType": "string",
        "switch": "author-name",
      },
      {
        "docs": "Is the author an organization.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorOrganization",
        ],
        "simpleType": "boolean",
        "switch": "author-organization",
      },
      {
        "docs": "Author's URL / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorUrl",
        ],
        "simpleType": "string",
        "switch": "author-url",
      },
      {
        "default": "- auto approve is disabled",
        "docs": "Enable and configure the 'auto approve' workflow.",
        "featured": false,
        "fqn": "projen.github.AutoApproveOptions",
        "fullType": {
          "fqn": "projen.github.AutoApproveOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoApproveOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoApproveOptions",
        ],
        "simpleType": "AutoApproveOptions",
        "switch": "auto-approve-options",
      },
      {
        "default": "- true",
        "docs": "Automatically approve deps upgrade PRs, allowing them to be merged by mergify (if configued).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoApproveUpgrades",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "autoApproveUpgrades",
        ],
        "simpleType": "boolean",
        "switch": "auto-approve-upgrades",
      },
      {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "autoDetectBin",
        ],
        "simpleType": "boolean",
        "switch": "auto-detect-bin",
      },
      {
        "default": "true",
        "docs": "Enable automatic merging on GitHub.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoMerge",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMerge",
        ],
        "simpleType": "boolean",
        "switch": "auto-merge",
      },
      {
        "default": "- see defaults in \`AutoMergeOptions\`",
        "docs": "Configure options for automatic merging on GitHub.",
        "featured": false,
        "fqn": "projen.github.AutoMergeOptions",
        "fullType": {
          "fqn": "projen.github.AutoMergeOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoMergeOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMergeOptions",
        ],
        "simpleType": "AutoMergeOptions",
        "switch": "auto-merge-options",
      },
      {
        "docs": "Binary programs vended with your module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bin",
        ],
        "simpleType": "unknown",
        "switch": "bin",
      },
      {
        "docs": "The email address to which issues should be reported.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsEmail",
        ],
        "simpleType": "string",
        "switch": "bugs-email",
      },
      {
        "docs": "The url to your project's issue tracker.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsUrl",
        ],
        "simpleType": "string",
        "switch": "bugs-url",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "build-workflow",
      },
      {
        "docs": "Options for PR build workflow.",
        "featured": false,
        "fqn": "projen.javascript.BuildWorkflowOptions",
        "fullType": {
          "fqn": "projen.javascript.BuildWorkflowOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowOptions",
        ],
        "simpleType": "BuildWorkflowOptions",
        "switch": "build-workflow-options",
      },
      {
        "default": ""{ pullRequest: {}, workflowDispatch: {} }"",
        "deprecated": true,
        "docs": "Build workflow triggers.",
        "featured": false,
        "fqn": "projen.github.workflows.Triggers",
        "fullType": {
          "fqn": "projen.github.workflows.Triggers",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowTriggers",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowTriggers",
        ],
        "simpleType": "Triggers",
        "switch": "build-workflow-triggers",
      },
      {
        "default": "- A recent version of "commit-and-tag-version"",
        "docs": "The \`commit-and-tag-version\` compatible package used to bump the package version, as a dependency string.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bumpPackage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "bumpPackage",
        ],
        "simpleType": "string",
        "switch": "bump-package",
      },
      {
        "docs": "List of dependencies to bundle into this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bundledDeps",
        ],
        "simpleType": "unknown",
        "switch": "bundled-deps",
      },
      {
        "docs": "Options for \`Bundler\`.",
        "featured": false,
        "fqn": "projen.javascript.BundlerOptions",
        "fullType": {
          "fqn": "projen.javascript.BundlerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "bundlerOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "bundlerOptions",
        ],
        "simpleType": "BundlerOptions",
        "switch": "bundler-options",
      },
      {
        "default": ""latest"",
        "docs": "The version of Bun to use if using Bun as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bunVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bunVersion",
        ],
        "simpleType": "string",
        "switch": "bun-version",
      },
      {
        "default": "- no license checks are run during the build and all licenses will be accepted",
        "docs": "Configure which licenses should be deemed acceptable for use by dependencies.",
        "featured": false,
        "fqn": "projen.javascript.LicenseCheckerOptions",
        "fullType": {
          "fqn": "projen.javascript.LicenseCheckerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "checkLicenses",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "checkLicenses",
        ],
        "simpleType": "LicenseCheckerOptions",
        "switch": "check-licenses",
      },
      {
        "default": "- true, but false for subprojects",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "clobber",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "clobber",
        ],
        "simpleType": "boolean",
        "switch": "clobber",
      },
      {
        "default": "- undefined",
        "docs": "Options for npm packages using AWS CodeArtifact.",
        "featured": false,
        "fqn": "projen.javascript.CodeArtifactOptions",
        "fullType": {
          "fqn": "projen.javascript.CodeArtifactOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "codeArtifactOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "codeArtifactOptions",
        ],
        "simpleType": "CodeArtifactOptions",
        "switch": "code-artifact-options",
      },
      {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v4 A secret is required for private repos. Configured with \`@codeCovTokenSecret\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCov",
        ],
        "simpleType": "boolean",
        "switch": "code-cov",
      },
      {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCovTokenSecret",
        ],
        "simpleType": "string",
        "switch": "code-cov-token-secret",
      },
      {
        "default": "true",
        "docs": "Whether to commit the managed files by default.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "commitGenerated",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "commitGenerated",
        ],
        "simpleType": "boolean",
        "switch": "commit-generated",
      },
      {
        "default": "- defaults to the value of authorName or "" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightOwner",
        ],
        "simpleType": "string",
        "switch": "copyright-owner",
      },
      {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightPeriod",
        ],
        "simpleType": "string",
        "switch": "copyright-period",
      },
      {
        "default": ""main"",
        "docs": "The name of the main release branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""main"",
        "jsonLike": true,
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": [
          "defaultReleaseBranch",
        ],
        "simpleType": "string",
        "switch": "default-release-branch",
      },
      {
        "default": "false",
        "docs": "Use dependabot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabot",
        ],
        "simpleType": "boolean",
        "switch": "dependabot",
      },
      {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "featured": false,
        "fqn": "projen.github.DependabotOptions",
        "fullType": {
          "fqn": "projen.github.DependabotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabotOptions",
        ],
        "simpleType": "DependabotOptions",
        "switch": "dependabot-options",
      },
      {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "deps",
        ],
        "simpleType": "unknown",
        "switch": "deps",
      },
      {
        "default": "true",
        "docs": "Use tasks and github workflows to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "depsUpgrade",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgrade",
        ],
        "simpleType": "boolean",
        "switch": "deps-upgrade",
      },
      {
        "default": "- default options",
        "docs": "Options for \`UpgradeDependencies\`.",
        "featured": false,
        "fqn": "projen.javascript.UpgradeDependenciesOptions",
        "fullType": {
          "fqn": "projen.javascript.UpgradeDependenciesOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "depsUpgradeOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgradeOptions",
        ],
        "simpleType": "UpgradeDependenciesOptions",
        "switch": "deps-upgrade-options",
      },
      {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "description",
        ],
        "simpleType": "string",
        "switch": "description",
      },
      {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "devContainer",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "devContainer",
        ],
        "simpleType": "boolean",
        "switch": "dev-container",
      },
      {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "devDeps",
        ],
        "simpleType": "unknown",
        "switch": "dev-deps",
      },
      {
        "default": ""lib/index.js"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "entrypoint",
        ],
        "simpleType": "string",
        "switch": "entrypoint",
      },
      {
        "default": "true",
        "docs": "Enable GitHub integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "github",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "github",
        ],
        "simpleType": "boolean",
        "switch": "github",
      },
      {
        "default": "- see GitHubOptions",
        "docs": "Options for GitHub integration.",
        "featured": false,
        "fqn": "projen.github.GitHubOptions",
        "fullType": {
          "fqn": "projen.github.GitHubOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "githubOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "githubOptions",
        ],
        "simpleType": "GitHubOptions",
        "switch": "github-options",
      },
      {
        "docs": "Additional entries to .gitignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "gitignore",
        ],
        "simpleType": "unknown",
        "switch": "gitignore",
      },
      {
        "docs": "Configuration options for .gitignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitIgnoreOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "git-ignore-options",
      },
      {
        "docs": "Configuration options for git.",
        "featured": false,
        "fqn": "projen.GitOptions",
        "fullType": {
          "fqn": "projen.GitOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitOptions",
        ],
        "simpleType": "GitOptions",
        "switch": "git-options",
      },
      {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "gitpod",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "gitpod",
        ],
        "simpleType": "boolean",
        "switch": "gitpod",
      },
      {
        "docs": "Package's Homepage / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "homepage",
        ],
        "simpleType": "string",
        "switch": "homepage",
      },
      {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jest",
        ],
        "simpleType": "boolean",
        "switch": "jest",
      },
      {
        "default": "- default options",
        "docs": "Jest options.",
        "featured": false,
        "fqn": "projen.javascript.JestOptions",
        "fullType": {
          "fqn": "projen.javascript.JestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jestOptions",
        ],
        "simpleType": "JestOptions",
        "switch": "jest-options",
      },
      {
        "default": ""latest"",
        "docs": "Version requirement of \`publib\` which is used to publish modules to npm.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "jsiiReleaseVersion",
        ],
        "simpleType": "string",
        "switch": "jsii-release-version",
      },
      {
        "docs": "Keywords to include in \`package.json\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "keywords",
        ],
        "simpleType": "unknown",
        "switch": "keywords",
      },
      {
        "default": ""Apache-2.0"",
        "docs": "License's SPDX identifier.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "license",
        ],
        "simpleType": "string",
        "switch": "license",
      },
      {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "licensed",
        ],
        "simpleType": "boolean",
        "switch": "licensed",
      },
      {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "featured": false,
        "fqn": "projen.LoggerOptions",
        "fullType": {
          "fqn": "projen.LoggerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "logging",
        ],
        "simpleType": "LoggerOptions",
        "switch": "logging",
      },
      {
        "default": "- Major version is not enforced.",
        "docs": "Major version to release from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "majorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "majorVersion",
        ],
        "simpleType": "number",
        "switch": "major-version",
      },
      {
        "default": "- no maximum version is enforced",
        "docs": "The maximum node version supported by this package. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "maxNodeVersion",
        ],
        "simpleType": "string",
        "switch": "max-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Whether mergify should be enabled on this repository or not.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mergify",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergify",
        ],
        "simpleType": "boolean",
        "switch": "mergify",
      },
      {
        "default": "- default options",
        "deprecated": true,
        "docs": "Options for mergify.",
        "featured": false,
        "fqn": "projen.github.MergifyOptions",
        "fullType": {
          "fqn": "projen.github.MergifyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergifyOptions",
        ],
        "simpleType": "MergifyOptions",
        "switch": "mergify-options",
      },
      {
        "default": "- No minimum version is being enforced",
        "docs": "Minimal Major version to release.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "minMajorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "minMajorVersion",
        ],
        "simpleType": "number",
        "switch": "min-major-version",
      },
      {
        "default": "- no minimum version is enforced",
        "docs": "The minimum node version required by this package to function. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "minNodeVersion",
        ],
        "simpleType": "string",
        "switch": "min-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "mutableBuild",
        ],
        "simpleType": "boolean",
        "switch": "mutable-build",
      },
      {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$BASEDIR",
        "jsonLike": true,
        "name": "name",
        "parent": "ProjectOptions",
        "path": [
          "name",
        ],
        "simpleType": "string",
        "switch": "name",
      },
      {
        "default": "- The next version will be determined based on the commit history and project settings.",
        "docs": "A shell command to control the next version to release.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "nextVersionCommand",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "nextVersionCommand",
        ],
        "simpleType": "string",
        "switch": "next-version-command",
      },
      {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "featured": false,
        "fqn": "projen.javascript.NpmAccess",
        "fullType": {
          "fqn": "projen.javascript.NpmAccess",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmAccess",
        ],
        "simpleType": "NpmAccess",
        "switch": "npm-access",
      },
      {
        "default": ""latest"",
        "docs": "The npmDistTag to use when publishing from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmDistTag",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "npmDistTag",
        ],
        "simpleType": "string",
        "switch": "npm-dist-tag",
      },
      {
        "deprecated": true,
        "docs": "Additional entries to .npmignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignore",
        ],
        "simpleType": "unknown",
        "switch": "npmignore",
      },
      {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignoreEnabled",
        ],
        "simpleType": "boolean",
        "switch": "npmignore-enabled",
      },
      {
        "docs": "Configuration options for .npmignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "npmIgnoreOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "npm-ignore-options",
      },
      {
        "default": "- true for public packages, false otherwise",
        "docs": "Should provenance statements be generated when the package is published.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmProvenance",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmProvenance",
        ],
        "simpleType": "boolean",
        "switch": "npm-provenance",
      },
      {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistry",
        ],
        "simpleType": "string",
        "switch": "npm-registry",
      },
      {
        "default": ""https://registry.npmjs.org"",
        "docs": "The base URL of the npm package registry.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistryUrl",
        ],
        "simpleType": "string",
        "switch": "npm-registry-url",
      },
      {
        "default": ""NPM_TOKEN"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmTokenSecret",
        ],
        "simpleType": "string",
        "switch": "npm-token-secret",
      },
      {
        "default": ""."",
        "docs": "The root directory of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "outdir",
        ],
        "simpleType": "string",
        "switch": "outdir",
      },
      {
        "default": "true",
        "docs": "Defines a \`package\` task that will produce an npm tarball under the artifacts directory (e.g. \`dist\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "package",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "package",
        ],
        "simpleType": "boolean",
        "switch": "package",
      },
      {
        "default": "NodePackageManager.YARN_CLASSIC",
        "docs": "The Node Package Manager used to execute scripts.",
        "featured": false,
        "fqn": "projen.javascript.NodePackageManager",
        "fullType": {
          "fqn": "projen.javascript.NodePackageManager",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageManager",
        ],
        "simpleType": "NodePackageManager",
        "switch": "package-manager",
      },
      {
        "default": "- defaults to project name",
        "docs": "The "name" in package.json.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageName",
        ],
        "simpleType": "string",
        "switch": "package-name",
      },
      {
        "docs": "The parent project, if this project is part of a bigger project.",
        "featured": false,
        "fqn": "projen.Project",
        "fullType": {
          "fqn": "projen.Project",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "parent",
        ],
        "simpleType": "Project",
        "switch": "parent",
      },
      {
        "docs": "Options for \`peerDeps\`.",
        "featured": false,
        "fqn": "projen.javascript.PeerDependencyOptions",
        "fullType": {
          "fqn": "projen.javascript.PeerDependencyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDependencyOptions",
        ],
        "simpleType": "PeerDependencyOptions",
        "switch": "peer-dependency-options",
      },
      {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDeps",
        ],
        "simpleType": "unknown",
        "switch": "peer-deps",
      },
      {
        "default": ""9"",
        "docs": "The version of PNPM to use if using PNPM as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "pnpmVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "pnpmVersion",
        ],
        "simpleType": "string",
        "switch": "pnpm-version",
      },
      {
        "default": "[]",
        "docs": "Steps to execute after build as part of the release workflow.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "postBuildSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "postBuildSteps",
        ],
        "simpleType": "unknown",
        "switch": "post-build-steps",
      },
      {
        "default": "- normal semantic versions",
        "docs": "Bump versions from the default branch as pre-releases (e.g. "beta", "alpha", "pre").",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "prerelease",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "prerelease",
        ],
        "simpleType": "string",
        "switch": "prerelease",
      },
      {
        "default": "false",
        "docs": "Setup prettier.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "prettier",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettier",
        ],
        "simpleType": "boolean",
        "switch": "prettier",
      },
      {
        "default": "- default options",
        "docs": "Prettier options.",
        "featured": false,
        "fqn": "projen.javascript.PrettierOptions",
        "fullType": {
          "fqn": "projen.javascript.PrettierOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "prettierOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettierOptions",
        ],
        "simpleType": "PrettierOptions",
        "switch": "prettier-options",
      },
      {
        "default": "ProjectType.UNKNOWN",
        "deprecated": true,
        "docs": "Which type of project this is (library/app).",
        "featured": false,
        "fqn": "projen.ProjectType",
        "fullType": {
          "fqn": "projen.ProjectType",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "projectType",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projectType",
        ],
        "simpleType": "ProjectType",
        "switch": "project-type",
      },
      {
        "default": ""npx projen"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenCommand",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenCommand",
        ],
        "simpleType": "string",
        "switch": "projen-command",
      },
      {
        "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
        "docs": "Choose a method of providing GitHub API access for projen workflows.",
        "featured": false,
        "fqn": "projen.github.GithubCredentials",
        "fullType": {
          "fqn": "projen.github.GithubCredentials",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "projenCredentials",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenCredentials",
        ],
        "simpleType": "GithubCredentials",
        "switch": "projen-credentials",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Indicates of "projen" should be installed as a devDependency.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenDevDependency",
        ],
        "simpleType": "boolean",
        "switch": "projen-dev-dependency",
      },
      {
        "default": "- true if projenrcJson is false",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-js",
      },
      {
        "default": "false",
        "docs": "Generate (once) .projenrc.json (in JSON). Set to \`false\` in order to disable .projenrc.json generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJson",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJson",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-json",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.json.",
        "featured": false,
        "fqn": "projen.ProjenrcJsonOptions",
        "fullType": {
          "fqn": "projen.ProjenrcJsonOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsonOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJsonOptions",
        ],
        "simpleType": "ProjenrcJsonOptions",
        "switch": "projenrc-json-options",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "featured": false,
        "fqn": "projen.javascript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.javascript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-js-options",
      },
      {
        "default": ""PROJEN_GITHUB_TOKEN"",
        "deprecated": true,
        "docs": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenTokenSecret",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenTokenSecret",
        ],
        "simpleType": "string",
        "switch": "projen-token-secret",
      },
      {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenVersion",
        ],
        "simpleType": "string",
        "switch": "projen-version",
      },
      {
        "default": "false",
        "docs": "Instead of actually publishing to package managers, just print the publishing command.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishDryRun",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishDryRun",
        ],
        "simpleType": "boolean",
        "switch": "publish-dry-run",
      },
      {
        "default": "false",
        "docs": "Define publishing tasks that can be executed manually as well as workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishTasks",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishTasks",
        ],
        "simpleType": "boolean",
        "switch": "publish-tasks",
      },
      {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplate",
        ],
        "simpleType": "boolean",
        "switch": "pull-request-template",
      },
      {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplateContents",
        ],
        "simpleType": "unknown",
        "switch": "pull-request-template-contents",
      },
      {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "featured": false,
        "fqn": "projen.SampleReadmeProps",
        "fullType": {
          "fqn": "projen.SampleReadmeProps",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "readme",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "readme",
        ],
        "simpleType": "SampleReadmeProps",
        "switch": "readme",
      },
      {
        "default": "ReleasableCommits.everyCommit()",
        "docs": "Find commits that should be considered releasable Used to decide if a release is required.",
        "featured": false,
        "fqn": "projen.ReleasableCommits",
        "fullType": {
          "fqn": "projen.ReleasableCommits",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releasableCommits",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releasableCommits",
        ],
        "simpleType": "ReleasableCommits",
        "switch": "releasable-commits",
      },
      {
        "default": "- true (false for subprojects)",
        "docs": "Add release management to this project.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "release",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "release",
        ],
        "simpleType": "boolean",
        "switch": "release",
      },
      {
        "default": "- no additional branches are used for release. you can use
\`addBranch()\` to add additional branches.",
        "docs": "Defines additional release branches.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.release.BranchOptions",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "releaseBranches",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseBranches",
        ],
        "simpleType": "unknown",
        "switch": "release-branches",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseEveryCommit",
        ],
        "simpleType": "boolean",
        "switch": "release-every-commit",
      },
      {
        "default": "false",
        "docs": "Create a github issue on every failed publishing task.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseFailureIssue",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssue",
        ],
        "simpleType": "boolean",
        "switch": "release-failure-issue",
      },
      {
        "default": ""failed-release"",
        "docs": "The label to apply to issues indicating publish failures.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseFailureIssueLabel",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssueLabel",
        ],
        "simpleType": "string",
        "switch": "release-failure-issue-label",
      },
      {
        "default": "- no scheduled releases",
        "deprecated": true,
        "docs": "CRON schedule to trigger new releases.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseSchedule",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseSchedule",
        ],
        "simpleType": "string",
        "switch": "release-schedule",
      },
      {
        "default": ""v"",
        "docs": "Automatically add the given prefix to release tags. Useful if you are releasing on multiple branches with overlapping version numbers.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseTagPrefix",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTagPrefix",
        ],
        "simpleType": "string",
        "switch": "release-tag-prefix",
      },
      {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseToNpm",
        ],
        "simpleType": "boolean",
        "switch": "release-to-npm",
      },
      {
        "default": "- Continuous releases (\`ReleaseTrigger.continuous()\`)",
        "docs": "The release trigger to use.",
        "featured": false,
        "fqn": "projen.release.ReleaseTrigger",
        "fullType": {
          "fqn": "projen.release.ReleaseTrigger",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releaseTrigger",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTrigger",
        ],
        "simpleType": "ReleaseTrigger",
        "switch": "release-trigger",
      },
      {
        "default": "- true if not a subproject",
        "deprecated": true,
        "docs": "DEPRECATED: renamed to \`release\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "release-workflow",
      },
      {
        "default": ""release"",
        "docs": "The name of the default release workflow.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseWorkflowName",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowName",
        ],
        "simpleType": "string",
        "switch": "release-workflow-name",
      },
      {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowSetupSteps",
        ],
        "simpleType": "unknown",
        "switch": "release-workflow-setup-steps",
      },
      {
        "default": "false",
        "docs": "Use renovatebot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "renovatebot",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebot",
        ],
        "simpleType": "boolean",
        "switch": "renovatebot",
      },
      {
        "default": "- default options",
        "docs": "Options for renovatebot.",
        "featured": false,
        "fqn": "projen.RenovatebotOptions",
        "fullType": {
          "fqn": "projen.RenovatebotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "renovatebotOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebotOptions",
        ],
        "simpleType": "RenovatebotOptions",
        "switch": "renovatebot-options",
      },
      {
        "docs": "The repository is the location where the actual code for your package lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repository",
        ],
        "simpleType": "string",
        "switch": "repository",
      },
      {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repositoryDirectory",
        ],
        "simpleType": "string",
        "switch": "repository-directory",
      },
      {
        "default": "- No rewired config.",
        "docs": "Rewire webpack configuration.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "any",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "rewire",
        "optional": true,
        "parent": "ReactRewireOptions",
        "path": [
          "rewire",
        ],
        "simpleType": "unknown",
        "switch": "rewire",
      },
      {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`public/\` if there are no files there.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "sampleCode",
        "optional": true,
        "parent": "ReactProjectOptions",
        "path": [
          "sampleCode",
        ],
        "simpleType": "boolean",
        "switch": "sample-code",
      },
      {
        "default": "- fetch all scoped packages from the public npm registry",
        "docs": "Options for privately hosted scoped packages.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.javascript.ScopedPackagesOptions",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "scopedPackagesOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scopedPackagesOptions",
        ],
        "simpleType": "unknown",
        "switch": "scoped-packages-options",
      },
      {
        "default": "{}",
        "deprecated": true,
        "docs": "npm scripts to include.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scripts",
        ],
        "simpleType": "unknown",
        "switch": "scripts",
      },
      {
        "default": ""src"",
        "docs": "Source directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "srcdir",
        "optional": true,
        "parent": "ReactProjectOptions",
        "path": [
          "srcdir",
        ],
        "simpleType": "string",
        "switch": "srcdir",
      },
      {
        "docs": "Package's Stability.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "stability",
        ],
        "simpleType": "string",
        "switch": "stability",
      },
      {
        "default": "false",
        "docs": "Auto-close of stale issues and pull request.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "stale",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "stale",
        ],
        "simpleType": "boolean",
        "switch": "stale",
      },
      {
        "default": "- see defaults in \`StaleOptions\`",
        "docs": "Auto-close stale issues and pull requests.",
        "featured": false,
        "fqn": "projen.github.StaleOptions",
        "fullType": {
          "fqn": "projen.github.StaleOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "staleOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "staleOptions",
        ],
        "simpleType": "StaleOptions",
        "switch": "stale-options",
      },
      {
        "default": "- standard configuration applicable for GitHub repositories",
        "docs": "Custom configuration used when creating changelog with commit-and-tag-version package.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "any",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "versionrcOptions",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "versionrcOptions",
        ],
        "simpleType": "unknown",
        "switch": "versionrc-options",
      },
      {
        "default": "true",
        "docs": "Enable VSCode integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "vscode",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "vscode",
        ],
        "simpleType": "boolean",
        "switch": "vscode",
      },
      {
        "default": ""yarn install --frozen-lockfile && yarn projen"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowBootstrapSteps",
        ],
        "simpleType": "unknown",
        "switch": "workflow-bootstrap-steps",
      },
      {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowContainerImage",
        ],
        "simpleType": "string",
        "switch": "workflow-container-image",
      },
      {
        "default": "- GitHub Actions",
        "docs": "The git identity to use in workflows.",
        "featured": false,
        "fqn": "projen.github.GitIdentity",
        "fullType": {
          "fqn": "projen.github.GitIdentity",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowGitIdentity",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowGitIdentity",
        ],
        "simpleType": "GitIdentity",
        "switch": "workflow-git-identity",
      },
      {
        "default": "- \`minNodeVersion\` if set, otherwise \`lts/*\`.",
        "docs": "The node version used in GitHub Actions workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowNodeVersion",
        ],
        "simpleType": "string",
        "switch": "workflow-node-version",
      },
      {
        "default": "false",
        "docs": "Enable Node.js package cache in GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "workflowPackageCache",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowPackageCache",
        ],
        "simpleType": "boolean",
        "switch": "workflow-package-cache",
      },
      {
        "default": "["ubuntu-latest"]",
        "docs": "Github Runner selection labels.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowRunsOn",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOn",
        ],
        "simpleType": "unknown",
        "switch": "workflow-runs-on",
      },
      {
        "docs": "Github Runner Group selection options.",
        "featured": false,
        "fqn": "projen.GroupRunnerOptions",
        "fullType": {
          "fqn": "projen.GroupRunnerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowRunsOnGroup",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOnGroup",
        ],
        "simpleType": "GroupRunnerOptions",
        "switch": "workflow-runs-on-group",
      },
      {
        "default": "- Yarn Berry v4 with all default options",
        "docs": "Options for Yarn Berry.",
        "featured": false,
        "fqn": "projen.javascript.YarnBerryOptions",
        "fullType": {
          "fqn": "projen.javascript.YarnBerryOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "yarnBerryOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "yarnBerryOptions",
        ],
        "simpleType": "YarnBerryOptions",
        "switch": "yarn-berry-options",
      },
    ],
    "pjid": "react",
    "typename": "web.ReactProject",
  },
  {
    "docs": "React project using TypeScript.",
    "docsurl": "https://projen.io/docs/api/web#reacttypescriptproject-",
    "fqn": "projen.web.ReactTypeScriptProject",
    "moduleName": "projen",
    "options": [
      {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "allowLibraryDependencies",
        ],
        "simpleType": "boolean",
        "switch": "allow-library-dependencies",
      },
      {
        "default": ""dist"",
        "docs": "A directory which will contain build artifacts.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "artifactsDirectory",
        ],
        "simpleType": "string",
        "switch": "artifacts-directory",
      },
      {
        "docs": "Author's e-mail.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorEmail",
        ],
        "simpleType": "string",
        "switch": "author-email",
      },
      {
        "docs": "Author's name.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorName",
        ],
        "simpleType": "string",
        "switch": "author-name",
      },
      {
        "docs": "Is the author an organization.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorOrganization",
        ],
        "simpleType": "boolean",
        "switch": "author-organization",
      },
      {
        "docs": "Author's URL / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorUrl",
        ],
        "simpleType": "string",
        "switch": "author-url",
      },
      {
        "default": "- auto approve is disabled",
        "docs": "Enable and configure the 'auto approve' workflow.",
        "featured": false,
        "fqn": "projen.github.AutoApproveOptions",
        "fullType": {
          "fqn": "projen.github.AutoApproveOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoApproveOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoApproveOptions",
        ],
        "simpleType": "AutoApproveOptions",
        "switch": "auto-approve-options",
      },
      {
        "default": "- true",
        "docs": "Automatically approve deps upgrade PRs, allowing them to be merged by mergify (if configued).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoApproveUpgrades",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "autoApproveUpgrades",
        ],
        "simpleType": "boolean",
        "switch": "auto-approve-upgrades",
      },
      {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "autoDetectBin",
        ],
        "simpleType": "boolean",
        "switch": "auto-detect-bin",
      },
      {
        "default": "true",
        "docs": "Enable automatic merging on GitHub.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoMerge",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMerge",
        ],
        "simpleType": "boolean",
        "switch": "auto-merge",
      },
      {
        "default": "- see defaults in \`AutoMergeOptions\`",
        "docs": "Configure options for automatic merging on GitHub.",
        "featured": false,
        "fqn": "projen.github.AutoMergeOptions",
        "fullType": {
          "fqn": "projen.github.AutoMergeOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoMergeOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMergeOptions",
        ],
        "simpleType": "AutoMergeOptions",
        "switch": "auto-merge-options",
      },
      {
        "docs": "Binary programs vended with your module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bin",
        ],
        "simpleType": "unknown",
        "switch": "bin",
      },
      {
        "docs": "The email address to which issues should be reported.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsEmail",
        ],
        "simpleType": "string",
        "switch": "bugs-email",
      },
      {
        "docs": "The url to your project's issue tracker.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsUrl",
        ],
        "simpleType": "string",
        "switch": "bugs-url",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "build-workflow",
      },
      {
        "docs": "Options for PR build workflow.",
        "featured": false,
        "fqn": "projen.javascript.BuildWorkflowOptions",
        "fullType": {
          "fqn": "projen.javascript.BuildWorkflowOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowOptions",
        ],
        "simpleType": "BuildWorkflowOptions",
        "switch": "build-workflow-options",
      },
      {
        "default": ""{ pullRequest: {}, workflowDispatch: {} }"",
        "deprecated": true,
        "docs": "Build workflow triggers.",
        "featured": false,
        "fqn": "projen.github.workflows.Triggers",
        "fullType": {
          "fqn": "projen.github.workflows.Triggers",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowTriggers",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowTriggers",
        ],
        "simpleType": "Triggers",
        "switch": "build-workflow-triggers",
      },
      {
        "default": "- A recent version of "commit-and-tag-version"",
        "docs": "The \`commit-and-tag-version\` compatible package used to bump the package version, as a dependency string.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bumpPackage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "bumpPackage",
        ],
        "simpleType": "string",
        "switch": "bump-package",
      },
      {
        "docs": "List of dependencies to bundle into this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bundledDeps",
        ],
        "simpleType": "unknown",
        "switch": "bundled-deps",
      },
      {
        "docs": "Options for \`Bundler\`.",
        "featured": false,
        "fqn": "projen.javascript.BundlerOptions",
        "fullType": {
          "fqn": "projen.javascript.BundlerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "bundlerOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "bundlerOptions",
        ],
        "simpleType": "BundlerOptions",
        "switch": "bundler-options",
      },
      {
        "default": ""latest"",
        "docs": "The version of Bun to use if using Bun as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bunVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bunVersion",
        ],
        "simpleType": "string",
        "switch": "bun-version",
      },
      {
        "default": "- no license checks are run during the build and all licenses will be accepted",
        "docs": "Configure which licenses should be deemed acceptable for use by dependencies.",
        "featured": false,
        "fqn": "projen.javascript.LicenseCheckerOptions",
        "fullType": {
          "fqn": "projen.javascript.LicenseCheckerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "checkLicenses",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "checkLicenses",
        ],
        "simpleType": "LicenseCheckerOptions",
        "switch": "check-licenses",
      },
      {
        "default": "- true, but false for subprojects",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "clobber",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "clobber",
        ],
        "simpleType": "boolean",
        "switch": "clobber",
      },
      {
        "default": "- undefined",
        "docs": "Options for npm packages using AWS CodeArtifact.",
        "featured": false,
        "fqn": "projen.javascript.CodeArtifactOptions",
        "fullType": {
          "fqn": "projen.javascript.CodeArtifactOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "codeArtifactOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "codeArtifactOptions",
        ],
        "simpleType": "CodeArtifactOptions",
        "switch": "code-artifact-options",
      },
      {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v4 A secret is required for private repos. Configured with \`@codeCovTokenSecret\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCov",
        ],
        "simpleType": "boolean",
        "switch": "code-cov",
      },
      {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCovTokenSecret",
        ],
        "simpleType": "string",
        "switch": "code-cov-token-secret",
      },
      {
        "default": "true",
        "docs": "Whether to commit the managed files by default.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "commitGenerated",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "commitGenerated",
        ],
        "simpleType": "boolean",
        "switch": "commit-generated",
      },
      {
        "default": "- defaults to the value of authorName or "" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightOwner",
        ],
        "simpleType": "string",
        "switch": "copyright-owner",
      },
      {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightPeriod",
        ],
        "simpleType": "string",
        "switch": "copyright-period",
      },
      {
        "default": ""main"",
        "docs": "The name of the main release branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""main"",
        "jsonLike": true,
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": [
          "defaultReleaseBranch",
        ],
        "simpleType": "string",
        "switch": "default-release-branch",
      },
      {
        "default": "false",
        "docs": "Use dependabot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabot",
        ],
        "simpleType": "boolean",
        "switch": "dependabot",
      },
      {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "featured": false,
        "fqn": "projen.github.DependabotOptions",
        "fullType": {
          "fqn": "projen.github.DependabotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabotOptions",
        ],
        "simpleType": "DependabotOptions",
        "switch": "dependabot-options",
      },
      {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "deps",
        ],
        "simpleType": "unknown",
        "switch": "deps",
      },
      {
        "default": "true",
        "docs": "Use tasks and github workflows to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "depsUpgrade",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgrade",
        ],
        "simpleType": "boolean",
        "switch": "deps-upgrade",
      },
      {
        "default": "- default options",
        "docs": "Options for \`UpgradeDependencies\`.",
        "featured": false,
        "fqn": "projen.javascript.UpgradeDependenciesOptions",
        "fullType": {
          "fqn": "projen.javascript.UpgradeDependenciesOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "depsUpgradeOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgradeOptions",
        ],
        "simpleType": "UpgradeDependenciesOptions",
        "switch": "deps-upgrade-options",
      },
      {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "description",
        ],
        "simpleType": "string",
        "switch": "description",
      },
      {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "devContainer",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "devContainer",
        ],
        "simpleType": "boolean",
        "switch": "dev-container",
      },
      {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "devDeps",
        ],
        "simpleType": "unknown",
        "switch": "dev-deps",
      },
      {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "disableTsconfig",
        ],
        "simpleType": "boolean",
        "switch": "disable-tsconfig",
      },
      {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.dev.json\` file.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "disableTsconfigDev",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "disableTsconfigDev",
        ],
        "simpleType": "boolean",
        "switch": "disable-tsconfig-dev",
      },
      {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "docgen",
        ],
        "simpleType": "boolean",
        "switch": "docgen",
      },
      {
        "default": ""docs"",
        "docs": "Docs directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "docsDirectory",
        ],
        "simpleType": "string",
        "switch": "docs-directory",
      },
      {
        "default": ""lib/index.js"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "entrypoint",
        ],
        "simpleType": "string",
        "switch": "entrypoint",
      },
      {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "entrypointTypes",
        ],
        "simpleType": "string",
        "switch": "entrypoint-types",
      },
      {
        "default": "true",
        "docs": "Setup eslint.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "eslint",
        ],
        "simpleType": "boolean",
        "switch": "eslint",
      },
      {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "featured": false,
        "fqn": "projen.javascript.EslintOptions",
        "fullType": {
          "fqn": "projen.javascript.EslintOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "eslintOptions",
        ],
        "simpleType": "EslintOptions",
        "switch": "eslint-options",
      },
      {
        "default": "true",
        "docs": "Enable GitHub integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "github",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "github",
        ],
        "simpleType": "boolean",
        "switch": "github",
      },
      {
        "default": "- see GitHubOptions",
        "docs": "Options for GitHub integration.",
        "featured": false,
        "fqn": "projen.github.GitHubOptions",
        "fullType": {
          "fqn": "projen.github.GitHubOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "githubOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "githubOptions",
        ],
        "simpleType": "GitHubOptions",
        "switch": "github-options",
      },
      {
        "docs": "Additional entries to .gitignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "gitignore",
        ],
        "simpleType": "unknown",
        "switch": "gitignore",
      },
      {
        "docs": "Configuration options for .gitignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitIgnoreOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "git-ignore-options",
      },
      {
        "docs": "Configuration options for git.",
        "featured": false,
        "fqn": "projen.GitOptions",
        "fullType": {
          "fqn": "projen.GitOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitOptions",
        ],
        "simpleType": "GitOptions",
        "switch": "git-options",
      },
      {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "gitpod",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "gitpod",
        ],
        "simpleType": "boolean",
        "switch": "gitpod",
      },
      {
        "docs": "Package's Homepage / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "homepage",
        ],
        "simpleType": "string",
        "switch": "homepage",
      },
      {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jest",
        ],
        "simpleType": "boolean",
        "switch": "jest",
      },
      {
        "default": "- default options",
        "docs": "Jest options.",
        "featured": false,
        "fqn": "projen.javascript.JestOptions",
        "fullType": {
          "fqn": "projen.javascript.JestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jestOptions",
        ],
        "simpleType": "JestOptions",
        "switch": "jest-options",
      },
      {
        "default": ""latest"",
        "docs": "Version requirement of \`publib\` which is used to publish modules to npm.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "jsiiReleaseVersion",
        ],
        "simpleType": "string",
        "switch": "jsii-release-version",
      },
      {
        "docs": "Keywords to include in \`package.json\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "keywords",
        ],
        "simpleType": "unknown",
        "switch": "keywords",
      },
      {
        "default": ""lib"",
        "docs": "Typescript  artifacts output directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "libdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "libdir",
        ],
        "simpleType": "string",
        "switch": "libdir",
      },
      {
        "default": ""Apache-2.0"",
        "docs": "License's SPDX identifier.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "license",
        ],
        "simpleType": "string",
        "switch": "license",
      },
      {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "licensed",
        ],
        "simpleType": "boolean",
        "switch": "licensed",
      },
      {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "featured": false,
        "fqn": "projen.LoggerOptions",
        "fullType": {
          "fqn": "projen.LoggerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "logging",
        ],
        "simpleType": "LoggerOptions",
        "switch": "logging",
      },
      {
        "default": "- Major version is not enforced.",
        "docs": "Major version to release from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "majorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "majorVersion",
        ],
        "simpleType": "number",
        "switch": "major-version",
      },
      {
        "default": "- no maximum version is enforced",
        "docs": "The maximum node version supported by this package. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "maxNodeVersion",
        ],
        "simpleType": "string",
        "switch": "max-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Whether mergify should be enabled on this repository or not.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mergify",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergify",
        ],
        "simpleType": "boolean",
        "switch": "mergify",
      },
      {
        "default": "- default options",
        "deprecated": true,
        "docs": "Options for mergify.",
        "featured": false,
        "fqn": "projen.github.MergifyOptions",
        "fullType": {
          "fqn": "projen.github.MergifyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergifyOptions",
        ],
        "simpleType": "MergifyOptions",
        "switch": "mergify-options",
      },
      {
        "default": "- No minimum version is being enforced",
        "docs": "Minimal Major version to release.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "minMajorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "minMajorVersion",
        ],
        "simpleType": "number",
        "switch": "min-major-version",
      },
      {
        "default": "- no minimum version is enforced",
        "docs": "The minimum node version required by this package to function. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "minNodeVersion",
        ],
        "simpleType": "string",
        "switch": "min-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "mutableBuild",
        ],
        "simpleType": "boolean",
        "switch": "mutable-build",
      },
      {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$BASEDIR",
        "jsonLike": true,
        "name": "name",
        "parent": "ProjectOptions",
        "path": [
          "name",
        ],
        "simpleType": "string",
        "switch": "name",
      },
      {
        "default": "- The next version will be determined based on the commit history and project settings.",
        "docs": "A shell command to control the next version to release.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "nextVersionCommand",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "nextVersionCommand",
        ],
        "simpleType": "string",
        "switch": "next-version-command",
      },
      {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "featured": false,
        "fqn": "projen.javascript.NpmAccess",
        "fullType": {
          "fqn": "projen.javascript.NpmAccess",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmAccess",
        ],
        "simpleType": "NpmAccess",
        "switch": "npm-access",
      },
      {
        "default": ""latest"",
        "docs": "The npmDistTag to use when publishing from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmDistTag",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "npmDistTag",
        ],
        "simpleType": "string",
        "switch": "npm-dist-tag",
      },
      {
        "deprecated": true,
        "docs": "Additional entries to .npmignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignore",
        ],
        "simpleType": "unknown",
        "switch": "npmignore",
      },
      {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignoreEnabled",
        ],
        "simpleType": "boolean",
        "switch": "npmignore-enabled",
      },
      {
        "docs": "Configuration options for .npmignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "npmIgnoreOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "npm-ignore-options",
      },
      {
        "default": "- true for public packages, false otherwise",
        "docs": "Should provenance statements be generated when the package is published.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmProvenance",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmProvenance",
        ],
        "simpleType": "boolean",
        "switch": "npm-provenance",
      },
      {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistry",
        ],
        "simpleType": "string",
        "switch": "npm-registry",
      },
      {
        "default": ""https://registry.npmjs.org"",
        "docs": "The base URL of the npm package registry.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistryUrl",
        ],
        "simpleType": "string",
        "switch": "npm-registry-url",
      },
      {
        "default": ""NPM_TOKEN"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmTokenSecret",
        ],
        "simpleType": "string",
        "switch": "npm-token-secret",
      },
      {
        "default": ""."",
        "docs": "The root directory of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "outdir",
        ],
        "simpleType": "string",
        "switch": "outdir",
      },
      {
        "default": "true",
        "docs": "Defines a \`package\` task that will produce an npm tarball under the artifacts directory (e.g. \`dist\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "package",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "package",
        ],
        "simpleType": "boolean",
        "switch": "package",
      },
      {
        "default": "NodePackageManager.YARN_CLASSIC",
        "docs": "The Node Package Manager used to execute scripts.",
        "featured": false,
        "fqn": "projen.javascript.NodePackageManager",
        "fullType": {
          "fqn": "projen.javascript.NodePackageManager",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageManager",
        ],
        "simpleType": "NodePackageManager",
        "switch": "package-manager",
      },
      {
        "default": "- defaults to project name",
        "docs": "The "name" in package.json.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageName",
        ],
        "simpleType": "string",
        "switch": "package-name",
      },
      {
        "docs": "The parent project, if this project is part of a bigger project.",
        "featured": false,
        "fqn": "projen.Project",
        "fullType": {
          "fqn": "projen.Project",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "parent",
        ],
        "simpleType": "Project",
        "switch": "parent",
      },
      {
        "docs": "Options for \`peerDeps\`.",
        "featured": false,
        "fqn": "projen.javascript.PeerDependencyOptions",
        "fullType": {
          "fqn": "projen.javascript.PeerDependencyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDependencyOptions",
        ],
        "simpleType": "PeerDependencyOptions",
        "switch": "peer-dependency-options",
      },
      {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDeps",
        ],
        "simpleType": "unknown",
        "switch": "peer-deps",
      },
      {
        "default": ""9"",
        "docs": "The version of PNPM to use if using PNPM as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "pnpmVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "pnpmVersion",
        ],
        "simpleType": "string",
        "switch": "pnpm-version",
      },
      {
        "default": "[]",
        "docs": "Steps to execute after build as part of the release workflow.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "postBuildSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "postBuildSteps",
        ],
        "simpleType": "unknown",
        "switch": "post-build-steps",
      },
      {
        "default": "- normal semantic versions",
        "docs": "Bump versions from the default branch as pre-releases (e.g. "beta", "alpha", "pre").",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "prerelease",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "prerelease",
        ],
        "simpleType": "string",
        "switch": "prerelease",
      },
      {
        "default": "false",
        "docs": "Setup prettier.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "prettier",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettier",
        ],
        "simpleType": "boolean",
        "switch": "prettier",
      },
      {
        "default": "- default options",
        "docs": "Prettier options.",
        "featured": false,
        "fqn": "projen.javascript.PrettierOptions",
        "fullType": {
          "fqn": "projen.javascript.PrettierOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "prettierOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettierOptions",
        ],
        "simpleType": "PrettierOptions",
        "switch": "prettier-options",
      },
      {
        "default": "ProjectType.UNKNOWN",
        "deprecated": true,
        "docs": "Which type of project this is (library/app).",
        "featured": false,
        "fqn": "projen.ProjectType",
        "fullType": {
          "fqn": "projen.ProjectType",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "projectType",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projectType",
        ],
        "simpleType": "ProjectType",
        "switch": "project-type",
      },
      {
        "default": ""npx projen"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenCommand",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenCommand",
        ],
        "simpleType": "string",
        "switch": "projen-command",
      },
      {
        "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
        "docs": "Choose a method of providing GitHub API access for projen workflows.",
        "featured": false,
        "fqn": "projen.github.GithubCredentials",
        "fullType": {
          "fqn": "projen.github.GithubCredentials",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "projenCredentials",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenCredentials",
        ],
        "simpleType": "GithubCredentials",
        "switch": "projen-credentials",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Indicates of "projen" should be installed as a devDependency.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenDevDependency",
        ],
        "simpleType": "boolean",
        "switch": "projen-dev-dependency",
      },
      {
        "default": "- true if projenrcJson is false",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-js",
      },
      {
        "default": "false",
        "docs": "Generate (once) .projenrc.json (in JSON). Set to \`false\` in order to disable .projenrc.json generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJson",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJson",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-json",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.json.",
        "featured": false,
        "fqn": "projen.ProjenrcJsonOptions",
        "fullType": {
          "fqn": "projen.ProjenrcJsonOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsonOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJsonOptions",
        ],
        "simpleType": "ProjenrcJsonOptions",
        "switch": "projenrc-json-options",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "featured": false,
        "fqn": "projen.javascript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.javascript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-js-options",
      },
      {
        "default": "false",
        "docs": "Use TypeScript for your projenrc file (\`.projenrc.ts\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "initialValue": "true",
        "jsonLike": true,
        "name": "projenrcTs",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "projenrcTs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-ts",
      },
      {
        "docs": "Options for .projenrc.ts.",
        "featured": false,
        "fqn": "projen.typescript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.typescript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "projenrcTsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-ts-options",
      },
      {
        "default": ""PROJEN_GITHUB_TOKEN"",
        "deprecated": true,
        "docs": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenTokenSecret",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenTokenSecret",
        ],
        "simpleType": "string",
        "switch": "projen-token-secret",
      },
      {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenVersion",
        ],
        "simpleType": "string",
        "switch": "projen-version",
      },
      {
        "default": "false",
        "docs": "Instead of actually publishing to package managers, just print the publishing command.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishDryRun",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishDryRun",
        ],
        "simpleType": "boolean",
        "switch": "publish-dry-run",
      },
      {
        "default": "false",
        "docs": "Define publishing tasks that can be executed manually as well as workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishTasks",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishTasks",
        ],
        "simpleType": "boolean",
        "switch": "publish-tasks",
      },
      {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplate",
        ],
        "simpleType": "boolean",
        "switch": "pull-request-template",
      },
      {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplateContents",
        ],
        "simpleType": "unknown",
        "switch": "pull-request-template-contents",
      },
      {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "featured": false,
        "fqn": "projen.SampleReadmeProps",
        "fullType": {
          "fqn": "projen.SampleReadmeProps",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "readme",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "readme",
        ],
        "simpleType": "SampleReadmeProps",
        "switch": "readme",
      },
      {
        "default": "ReleasableCommits.everyCommit()",
        "docs": "Find commits that should be considered releasable Used to decide if a release is required.",
        "featured": false,
        "fqn": "projen.ReleasableCommits",
        "fullType": {
          "fqn": "projen.ReleasableCommits",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releasableCommits",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releasableCommits",
        ],
        "simpleType": "ReleasableCommits",
        "switch": "releasable-commits",
      },
      {
        "default": "- true (false for subprojects)",
        "docs": "Add release management to this project.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "release",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "release",
        ],
        "simpleType": "boolean",
        "switch": "release",
      },
      {
        "default": "- no additional branches are used for release. you can use
\`addBranch()\` to add additional branches.",
        "docs": "Defines additional release branches.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.release.BranchOptions",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "releaseBranches",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseBranches",
        ],
        "simpleType": "unknown",
        "switch": "release-branches",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseEveryCommit",
        ],
        "simpleType": "boolean",
        "switch": "release-every-commit",
      },
      {
        "default": "false",
        "docs": "Create a github issue on every failed publishing task.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseFailureIssue",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssue",
        ],
        "simpleType": "boolean",
        "switch": "release-failure-issue",
      },
      {
        "default": ""failed-release"",
        "docs": "The label to apply to issues indicating publish failures.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseFailureIssueLabel",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssueLabel",
        ],
        "simpleType": "string",
        "switch": "release-failure-issue-label",
      },
      {
        "default": "- no scheduled releases",
        "deprecated": true,
        "docs": "CRON schedule to trigger new releases.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseSchedule",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseSchedule",
        ],
        "simpleType": "string",
        "switch": "release-schedule",
      },
      {
        "default": ""v"",
        "docs": "Automatically add the given prefix to release tags. Useful if you are releasing on multiple branches with overlapping version numbers.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseTagPrefix",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTagPrefix",
        ],
        "simpleType": "string",
        "switch": "release-tag-prefix",
      },
      {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseToNpm",
        ],
        "simpleType": "boolean",
        "switch": "release-to-npm",
      },
      {
        "default": "- Continuous releases (\`ReleaseTrigger.continuous()\`)",
        "docs": "The release trigger to use.",
        "featured": false,
        "fqn": "projen.release.ReleaseTrigger",
        "fullType": {
          "fqn": "projen.release.ReleaseTrigger",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releaseTrigger",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTrigger",
        ],
        "simpleType": "ReleaseTrigger",
        "switch": "release-trigger",
      },
      {
        "default": "- true if not a subproject",
        "deprecated": true,
        "docs": "DEPRECATED: renamed to \`release\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "release-workflow",
      },
      {
        "default": ""release"",
        "docs": "The name of the default release workflow.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseWorkflowName",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowName",
        ],
        "simpleType": "string",
        "switch": "release-workflow-name",
      },
      {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowSetupSteps",
        ],
        "simpleType": "unknown",
        "switch": "release-workflow-setup-steps",
      },
      {
        "default": "false",
        "docs": "Use renovatebot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "renovatebot",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebot",
        ],
        "simpleType": "boolean",
        "switch": "renovatebot",
      },
      {
        "default": "- default options",
        "docs": "Options for renovatebot.",
        "featured": false,
        "fqn": "projen.RenovatebotOptions",
        "fullType": {
          "fqn": "projen.RenovatebotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "renovatebotOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebotOptions",
        ],
        "simpleType": "RenovatebotOptions",
        "switch": "renovatebot-options",
      },
      {
        "docs": "The repository is the location where the actual code for your package lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repository",
        ],
        "simpleType": "string",
        "switch": "repository",
      },
      {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repositoryDirectory",
        ],
        "simpleType": "string",
        "switch": "repository-directory",
      },
      {
        "default": "- No rewired config.",
        "docs": "Rewire webpack configuration.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "any",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "rewire",
        "optional": true,
        "parent": "ReactRewireOptions",
        "path": [
          "rewire",
        ],
        "simpleType": "unknown",
        "switch": "rewire",
      },
      {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "sampleCode",
        ],
        "simpleType": "boolean",
        "switch": "sample-code",
      },
      {
        "default": "- fetch all scoped packages from the public npm registry",
        "docs": "Options for privately hosted scoped packages.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.javascript.ScopedPackagesOptions",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "scopedPackagesOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scopedPackagesOptions",
        ],
        "simpleType": "unknown",
        "switch": "scoped-packages-options",
      },
      {
        "default": "{}",
        "deprecated": true,
        "docs": "npm scripts to include.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scripts",
        ],
        "simpleType": "unknown",
        "switch": "scripts",
      },
      {
        "default": ""src"",
        "docs": "Typescript sources directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "srcdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "srcdir",
        ],
        "simpleType": "string",
        "switch": "srcdir",
      },
      {
        "docs": "Package's Stability.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "stability",
        ],
        "simpleType": "string",
        "switch": "stability",
      },
      {
        "default": "false",
        "docs": "Auto-close of stale issues and pull request.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "stale",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "stale",
        ],
        "simpleType": "boolean",
        "switch": "stale",
      },
      {
        "default": "- see defaults in \`StaleOptions\`",
        "docs": "Auto-close stale issues and pull requests.",
        "featured": false,
        "fqn": "projen.github.StaleOptions",
        "fullType": {
          "fqn": "projen.github.StaleOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "staleOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "staleOptions",
        ],
        "simpleType": "StaleOptions",
        "switch": "stale-options",
      },
      {
        "default": ""test"",
        "docs": "Jest tests directory. Tests files should be named \`xxx.test.ts\`.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "testdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "testdir",
        ],
        "simpleType": "string",
        "switch": "testdir",
      },
      {
        "default": "- default options",
        "docs": "Custom TSConfig.",
        "featured": false,
        "fqn": "projen.javascript.TypescriptConfigOptions",
        "fullType": {
          "fqn": "projen.javascript.TypescriptConfigOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfig",
        ],
        "simpleType": "TypescriptConfigOptions",
        "switch": "tsconfig",
      },
      {
        "default": "- use the production tsconfig options",
        "docs": "Custom tsconfig options for the development tsconfig.json file (used for testing).",
        "featured": false,
        "fqn": "projen.javascript.TypescriptConfigOptions",
        "fullType": {
          "fqn": "projen.javascript.TypescriptConfigOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsconfigDev",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfigDev",
        ],
        "simpleType": "TypescriptConfigOptions",
        "switch": "tsconfig-dev",
      },
      {
        "default": ""tsconfig.dev.json"",
        "docs": "The name of the development tsconfig.json file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "tsconfigDevFile",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfigDevFile",
        ],
        "simpleType": "string",
        "switch": "tsconfig-dev-file",
      },
      {
        "docs": "Options for ts-jest.",
        "featured": false,
        "fqn": "projen.typescript.TsJestOptions",
        "fullType": {
          "fqn": "projen.typescript.TsJestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsJestOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsJestOptions",
        ],
        "simpleType": "TsJestOptions",
        "switch": "ts-jest-options",
      },
      {
        "default": ""latest"",
        "docs": "TypeScript version to use.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "typescriptVersion",
        ],
        "simpleType": "string",
        "switch": "typescript-version",
      },
      {
        "default": "- standard configuration applicable for GitHub repositories",
        "docs": "Custom configuration used when creating changelog with commit-and-tag-version package.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "any",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "versionrcOptions",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "versionrcOptions",
        ],
        "simpleType": "unknown",
        "switch": "versionrc-options",
      },
      {
        "default": "true",
        "docs": "Enable VSCode integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "vscode",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "vscode",
        ],
        "simpleType": "boolean",
        "switch": "vscode",
      },
      {
        "default": ""yarn install --frozen-lockfile && yarn projen"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowBootstrapSteps",
        ],
        "simpleType": "unknown",
        "switch": "workflow-bootstrap-steps",
      },
      {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowContainerImage",
        ],
        "simpleType": "string",
        "switch": "workflow-container-image",
      },
      {
        "default": "- GitHub Actions",
        "docs": "The git identity to use in workflows.",
        "featured": false,
        "fqn": "projen.github.GitIdentity",
        "fullType": {
          "fqn": "projen.github.GitIdentity",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowGitIdentity",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowGitIdentity",
        ],
        "simpleType": "GitIdentity",
        "switch": "workflow-git-identity",
      },
      {
        "default": "- \`minNodeVersion\` if set, otherwise \`lts/*\`.",
        "docs": "The node version used in GitHub Actions workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowNodeVersion",
        ],
        "simpleType": "string",
        "switch": "workflow-node-version",
      },
      {
        "default": "false",
        "docs": "Enable Node.js package cache in GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "workflowPackageCache",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowPackageCache",
        ],
        "simpleType": "boolean",
        "switch": "workflow-package-cache",
      },
      {
        "default": "["ubuntu-latest"]",
        "docs": "Github Runner selection labels.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowRunsOn",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOn",
        ],
        "simpleType": "unknown",
        "switch": "workflow-runs-on",
      },
      {
        "docs": "Github Runner Group selection options.",
        "featured": false,
        "fqn": "projen.GroupRunnerOptions",
        "fullType": {
          "fqn": "projen.GroupRunnerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowRunsOnGroup",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOnGroup",
        ],
        "simpleType": "GroupRunnerOptions",
        "switch": "workflow-runs-on-group",
      },
      {
        "default": "- Yarn Berry v4 with all default options",
        "docs": "Options for Yarn Berry.",
        "featured": false,
        "fqn": "projen.javascript.YarnBerryOptions",
        "fullType": {
          "fqn": "projen.javascript.YarnBerryOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "yarnBerryOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "yarnBerryOptions",
        ],
        "simpleType": "YarnBerryOptions",
        "switch": "yarn-berry-options",
      },
    ],
    "pjid": "react-ts",
    "typename": "web.ReactTypeScriptProject",
  },
  {
    "docs": "TypeScript project.",
    "docsurl": "https://projen.io/docs/api/typescript#typescriptproject-",
    "fqn": "projen.typescript.TypeScriptProject",
    "moduleName": "projen",
    "options": [
      {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "allowLibraryDependencies",
        ],
        "simpleType": "boolean",
        "switch": "allow-library-dependencies",
      },
      {
        "default": ""dist"",
        "docs": "A directory which will contain build artifacts.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "artifactsDirectory",
        ],
        "simpleType": "string",
        "switch": "artifacts-directory",
      },
      {
        "docs": "Author's e-mail.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorEmail",
        ],
        "simpleType": "string",
        "switch": "author-email",
      },
      {
        "docs": "Author's name.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorName",
        ],
        "simpleType": "string",
        "switch": "author-name",
      },
      {
        "docs": "Is the author an organization.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorOrganization",
        ],
        "simpleType": "boolean",
        "switch": "author-organization",
      },
      {
        "docs": "Author's URL / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorUrl",
        ],
        "simpleType": "string",
        "switch": "author-url",
      },
      {
        "default": "- auto approve is disabled",
        "docs": "Enable and configure the 'auto approve' workflow.",
        "featured": false,
        "fqn": "projen.github.AutoApproveOptions",
        "fullType": {
          "fqn": "projen.github.AutoApproveOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoApproveOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoApproveOptions",
        ],
        "simpleType": "AutoApproveOptions",
        "switch": "auto-approve-options",
      },
      {
        "default": "- true",
        "docs": "Automatically approve deps upgrade PRs, allowing them to be merged by mergify (if configued).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoApproveUpgrades",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "autoApproveUpgrades",
        ],
        "simpleType": "boolean",
        "switch": "auto-approve-upgrades",
      },
      {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "autoDetectBin",
        ],
        "simpleType": "boolean",
        "switch": "auto-detect-bin",
      },
      {
        "default": "true",
        "docs": "Enable automatic merging on GitHub.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoMerge",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMerge",
        ],
        "simpleType": "boolean",
        "switch": "auto-merge",
      },
      {
        "default": "- see defaults in \`AutoMergeOptions\`",
        "docs": "Configure options for automatic merging on GitHub.",
        "featured": false,
        "fqn": "projen.github.AutoMergeOptions",
        "fullType": {
          "fqn": "projen.github.AutoMergeOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoMergeOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMergeOptions",
        ],
        "simpleType": "AutoMergeOptions",
        "switch": "auto-merge-options",
      },
      {
        "docs": "Binary programs vended with your module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bin",
        ],
        "simpleType": "unknown",
        "switch": "bin",
      },
      {
        "docs": "The email address to which issues should be reported.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsEmail",
        ],
        "simpleType": "string",
        "switch": "bugs-email",
      },
      {
        "docs": "The url to your project's issue tracker.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsUrl",
        ],
        "simpleType": "string",
        "switch": "bugs-url",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "build-workflow",
      },
      {
        "docs": "Options for PR build workflow.",
        "featured": false,
        "fqn": "projen.javascript.BuildWorkflowOptions",
        "fullType": {
          "fqn": "projen.javascript.BuildWorkflowOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowOptions",
        ],
        "simpleType": "BuildWorkflowOptions",
        "switch": "build-workflow-options",
      },
      {
        "default": ""{ pullRequest: {}, workflowDispatch: {} }"",
        "deprecated": true,
        "docs": "Build workflow triggers.",
        "featured": false,
        "fqn": "projen.github.workflows.Triggers",
        "fullType": {
          "fqn": "projen.github.workflows.Triggers",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowTriggers",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowTriggers",
        ],
        "simpleType": "Triggers",
        "switch": "build-workflow-triggers",
      },
      {
        "default": "- A recent version of "commit-and-tag-version"",
        "docs": "The \`commit-and-tag-version\` compatible package used to bump the package version, as a dependency string.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bumpPackage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "bumpPackage",
        ],
        "simpleType": "string",
        "switch": "bump-package",
      },
      {
        "docs": "List of dependencies to bundle into this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bundledDeps",
        ],
        "simpleType": "unknown",
        "switch": "bundled-deps",
      },
      {
        "docs": "Options for \`Bundler\`.",
        "featured": false,
        "fqn": "projen.javascript.BundlerOptions",
        "fullType": {
          "fqn": "projen.javascript.BundlerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "bundlerOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "bundlerOptions",
        ],
        "simpleType": "BundlerOptions",
        "switch": "bundler-options",
      },
      {
        "default": ""latest"",
        "docs": "The version of Bun to use if using Bun as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bunVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bunVersion",
        ],
        "simpleType": "string",
        "switch": "bun-version",
      },
      {
        "default": "- no license checks are run during the build and all licenses will be accepted",
        "docs": "Configure which licenses should be deemed acceptable for use by dependencies.",
        "featured": false,
        "fqn": "projen.javascript.LicenseCheckerOptions",
        "fullType": {
          "fqn": "projen.javascript.LicenseCheckerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "checkLicenses",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "checkLicenses",
        ],
        "simpleType": "LicenseCheckerOptions",
        "switch": "check-licenses",
      },
      {
        "default": "- true, but false for subprojects",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "clobber",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "clobber",
        ],
        "simpleType": "boolean",
        "switch": "clobber",
      },
      {
        "default": "- undefined",
        "docs": "Options for npm packages using AWS CodeArtifact.",
        "featured": false,
        "fqn": "projen.javascript.CodeArtifactOptions",
        "fullType": {
          "fqn": "projen.javascript.CodeArtifactOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "codeArtifactOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "codeArtifactOptions",
        ],
        "simpleType": "CodeArtifactOptions",
        "switch": "code-artifact-options",
      },
      {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v4 A secret is required for private repos. Configured with \`@codeCovTokenSecret\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCov",
        ],
        "simpleType": "boolean",
        "switch": "code-cov",
      },
      {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCovTokenSecret",
        ],
        "simpleType": "string",
        "switch": "code-cov-token-secret",
      },
      {
        "default": "true",
        "docs": "Whether to commit the managed files by default.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "commitGenerated",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "commitGenerated",
        ],
        "simpleType": "boolean",
        "switch": "commit-generated",
      },
      {
        "default": "- defaults to the value of authorName or "" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightOwner",
        ],
        "simpleType": "string",
        "switch": "copyright-owner",
      },
      {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightPeriod",
        ],
        "simpleType": "string",
        "switch": "copyright-period",
      },
      {
        "default": ""main"",
        "docs": "The name of the main release branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""main"",
        "jsonLike": true,
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": [
          "defaultReleaseBranch",
        ],
        "simpleType": "string",
        "switch": "default-release-branch",
      },
      {
        "default": "false",
        "docs": "Use dependabot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabot",
        ],
        "simpleType": "boolean",
        "switch": "dependabot",
      },
      {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "featured": false,
        "fqn": "projen.github.DependabotOptions",
        "fullType": {
          "fqn": "projen.github.DependabotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabotOptions",
        ],
        "simpleType": "DependabotOptions",
        "switch": "dependabot-options",
      },
      {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "deps",
        ],
        "simpleType": "unknown",
        "switch": "deps",
      },
      {
        "default": "true",
        "docs": "Use tasks and github workflows to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "depsUpgrade",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgrade",
        ],
        "simpleType": "boolean",
        "switch": "deps-upgrade",
      },
      {
        "default": "- default options",
        "docs": "Options for \`UpgradeDependencies\`.",
        "featured": false,
        "fqn": "projen.javascript.UpgradeDependenciesOptions",
        "fullType": {
          "fqn": "projen.javascript.UpgradeDependenciesOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "depsUpgradeOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgradeOptions",
        ],
        "simpleType": "UpgradeDependenciesOptions",
        "switch": "deps-upgrade-options",
      },
      {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "description",
        ],
        "simpleType": "string",
        "switch": "description",
      },
      {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "devContainer",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "devContainer",
        ],
        "simpleType": "boolean",
        "switch": "dev-container",
      },
      {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "devDeps",
        ],
        "simpleType": "unknown",
        "switch": "dev-deps",
      },
      {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "disableTsconfig",
        ],
        "simpleType": "boolean",
        "switch": "disable-tsconfig",
      },
      {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.dev.json\` file.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "disableTsconfigDev",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "disableTsconfigDev",
        ],
        "simpleType": "boolean",
        "switch": "disable-tsconfig-dev",
      },
      {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "docgen",
        ],
        "simpleType": "boolean",
        "switch": "docgen",
      },
      {
        "default": ""docs"",
        "docs": "Docs directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "docsDirectory",
        ],
        "simpleType": "string",
        "switch": "docs-directory",
      },
      {
        "default": ""lib/index.js"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "entrypoint",
        ],
        "simpleType": "string",
        "switch": "entrypoint",
      },
      {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "entrypointTypes",
        ],
        "simpleType": "string",
        "switch": "entrypoint-types",
      },
      {
        "default": "true",
        "docs": "Setup eslint.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "eslint",
        ],
        "simpleType": "boolean",
        "switch": "eslint",
      },
      {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "featured": false,
        "fqn": "projen.javascript.EslintOptions",
        "fullType": {
          "fqn": "projen.javascript.EslintOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "eslintOptions",
        ],
        "simpleType": "EslintOptions",
        "switch": "eslint-options",
      },
      {
        "default": "true",
        "docs": "Enable GitHub integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "github",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "github",
        ],
        "simpleType": "boolean",
        "switch": "github",
      },
      {
        "default": "- see GitHubOptions",
        "docs": "Options for GitHub integration.",
        "featured": false,
        "fqn": "projen.github.GitHubOptions",
        "fullType": {
          "fqn": "projen.github.GitHubOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "githubOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "githubOptions",
        ],
        "simpleType": "GitHubOptions",
        "switch": "github-options",
      },
      {
        "docs": "Additional entries to .gitignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "gitignore",
        ],
        "simpleType": "unknown",
        "switch": "gitignore",
      },
      {
        "docs": "Configuration options for .gitignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitIgnoreOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "git-ignore-options",
      },
      {
        "docs": "Configuration options for git.",
        "featured": false,
        "fqn": "projen.GitOptions",
        "fullType": {
          "fqn": "projen.GitOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitOptions",
        ],
        "simpleType": "GitOptions",
        "switch": "git-options",
      },
      {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "gitpod",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "gitpod",
        ],
        "simpleType": "boolean",
        "switch": "gitpod",
      },
      {
        "docs": "Package's Homepage / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "homepage",
        ],
        "simpleType": "string",
        "switch": "homepage",
      },
      {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jest",
        ],
        "simpleType": "boolean",
        "switch": "jest",
      },
      {
        "default": "- default options",
        "docs": "Jest options.",
        "featured": false,
        "fqn": "projen.javascript.JestOptions",
        "fullType": {
          "fqn": "projen.javascript.JestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jestOptions",
        ],
        "simpleType": "JestOptions",
        "switch": "jest-options",
      },
      {
        "default": ""latest"",
        "docs": "Version requirement of \`publib\` which is used to publish modules to npm.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "jsiiReleaseVersion",
        ],
        "simpleType": "string",
        "switch": "jsii-release-version",
      },
      {
        "docs": "Keywords to include in \`package.json\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "keywords",
        ],
        "simpleType": "unknown",
        "switch": "keywords",
      },
      {
        "default": ""lib"",
        "docs": "Typescript  artifacts output directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "libdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "libdir",
        ],
        "simpleType": "string",
        "switch": "libdir",
      },
      {
        "default": ""Apache-2.0"",
        "docs": "License's SPDX identifier.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "license",
        ],
        "simpleType": "string",
        "switch": "license",
      },
      {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "licensed",
        ],
        "simpleType": "boolean",
        "switch": "licensed",
      },
      {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "featured": false,
        "fqn": "projen.LoggerOptions",
        "fullType": {
          "fqn": "projen.LoggerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "logging",
        ],
        "simpleType": "LoggerOptions",
        "switch": "logging",
      },
      {
        "default": "- Major version is not enforced.",
        "docs": "Major version to release from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "majorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "majorVersion",
        ],
        "simpleType": "number",
        "switch": "major-version",
      },
      {
        "default": "- no maximum version is enforced",
        "docs": "The maximum node version supported by this package. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "maxNodeVersion",
        ],
        "simpleType": "string",
        "switch": "max-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Whether mergify should be enabled on this repository or not.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mergify",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergify",
        ],
        "simpleType": "boolean",
        "switch": "mergify",
      },
      {
        "default": "- default options",
        "deprecated": true,
        "docs": "Options for mergify.",
        "featured": false,
        "fqn": "projen.github.MergifyOptions",
        "fullType": {
          "fqn": "projen.github.MergifyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergifyOptions",
        ],
        "simpleType": "MergifyOptions",
        "switch": "mergify-options",
      },
      {
        "default": "- No minimum version is being enforced",
        "docs": "Minimal Major version to release.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "minMajorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "minMajorVersion",
        ],
        "simpleType": "number",
        "switch": "min-major-version",
      },
      {
        "default": "- no minimum version is enforced",
        "docs": "The minimum node version required by this package to function. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "minNodeVersion",
        ],
        "simpleType": "string",
        "switch": "min-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "mutableBuild",
        ],
        "simpleType": "boolean",
        "switch": "mutable-build",
      },
      {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$BASEDIR",
        "jsonLike": true,
        "name": "name",
        "parent": "ProjectOptions",
        "path": [
          "name",
        ],
        "simpleType": "string",
        "switch": "name",
      },
      {
        "default": "- The next version will be determined based on the commit history and project settings.",
        "docs": "A shell command to control the next version to release.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "nextVersionCommand",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "nextVersionCommand",
        ],
        "simpleType": "string",
        "switch": "next-version-command",
      },
      {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "featured": false,
        "fqn": "projen.javascript.NpmAccess",
        "fullType": {
          "fqn": "projen.javascript.NpmAccess",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmAccess",
        ],
        "simpleType": "NpmAccess",
        "switch": "npm-access",
      },
      {
        "default": ""latest"",
        "docs": "The npmDistTag to use when publishing from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmDistTag",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "npmDistTag",
        ],
        "simpleType": "string",
        "switch": "npm-dist-tag",
      },
      {
        "deprecated": true,
        "docs": "Additional entries to .npmignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignore",
        ],
        "simpleType": "unknown",
        "switch": "npmignore",
      },
      {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignoreEnabled",
        ],
        "simpleType": "boolean",
        "switch": "npmignore-enabled",
      },
      {
        "docs": "Configuration options for .npmignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "npmIgnoreOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "npm-ignore-options",
      },
      {
        "default": "- true for public packages, false otherwise",
        "docs": "Should provenance statements be generated when the package is published.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmProvenance",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmProvenance",
        ],
        "simpleType": "boolean",
        "switch": "npm-provenance",
      },
      {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistry",
        ],
        "simpleType": "string",
        "switch": "npm-registry",
      },
      {
        "default": ""https://registry.npmjs.org"",
        "docs": "The base URL of the npm package registry.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistryUrl",
        ],
        "simpleType": "string",
        "switch": "npm-registry-url",
      },
      {
        "default": ""NPM_TOKEN"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmTokenSecret",
        ],
        "simpleType": "string",
        "switch": "npm-token-secret",
      },
      {
        "default": ""."",
        "docs": "The root directory of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "outdir",
        ],
        "simpleType": "string",
        "switch": "outdir",
      },
      {
        "default": "true",
        "docs": "Defines a \`package\` task that will produce an npm tarball under the artifacts directory (e.g. \`dist\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "package",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "package",
        ],
        "simpleType": "boolean",
        "switch": "package",
      },
      {
        "default": "NodePackageManager.YARN_CLASSIC",
        "docs": "The Node Package Manager used to execute scripts.",
        "featured": false,
        "fqn": "projen.javascript.NodePackageManager",
        "fullType": {
          "fqn": "projen.javascript.NodePackageManager",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageManager",
        ],
        "simpleType": "NodePackageManager",
        "switch": "package-manager",
      },
      {
        "default": "- defaults to project name",
        "docs": "The "name" in package.json.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageName",
        ],
        "simpleType": "string",
        "switch": "package-name",
      },
      {
        "docs": "The parent project, if this project is part of a bigger project.",
        "featured": false,
        "fqn": "projen.Project",
        "fullType": {
          "fqn": "projen.Project",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "parent",
        ],
        "simpleType": "Project",
        "switch": "parent",
      },
      {
        "docs": "Options for \`peerDeps\`.",
        "featured": false,
        "fqn": "projen.javascript.PeerDependencyOptions",
        "fullType": {
          "fqn": "projen.javascript.PeerDependencyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDependencyOptions",
        ],
        "simpleType": "PeerDependencyOptions",
        "switch": "peer-dependency-options",
      },
      {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDeps",
        ],
        "simpleType": "unknown",
        "switch": "peer-deps",
      },
      {
        "default": ""9"",
        "docs": "The version of PNPM to use if using PNPM as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "pnpmVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "pnpmVersion",
        ],
        "simpleType": "string",
        "switch": "pnpm-version",
      },
      {
        "default": "[]",
        "docs": "Steps to execute after build as part of the release workflow.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "postBuildSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "postBuildSteps",
        ],
        "simpleType": "unknown",
        "switch": "post-build-steps",
      },
      {
        "default": "- normal semantic versions",
        "docs": "Bump versions from the default branch as pre-releases (e.g. "beta", "alpha", "pre").",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "prerelease",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "prerelease",
        ],
        "simpleType": "string",
        "switch": "prerelease",
      },
      {
        "default": "false",
        "docs": "Setup prettier.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "prettier",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettier",
        ],
        "simpleType": "boolean",
        "switch": "prettier",
      },
      {
        "default": "- default options",
        "docs": "Prettier options.",
        "featured": false,
        "fqn": "projen.javascript.PrettierOptions",
        "fullType": {
          "fqn": "projen.javascript.PrettierOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "prettierOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettierOptions",
        ],
        "simpleType": "PrettierOptions",
        "switch": "prettier-options",
      },
      {
        "default": "ProjectType.UNKNOWN",
        "deprecated": true,
        "docs": "Which type of project this is (library/app).",
        "featured": false,
        "fqn": "projen.ProjectType",
        "fullType": {
          "fqn": "projen.ProjectType",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "projectType",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projectType",
        ],
        "simpleType": "ProjectType",
        "switch": "project-type",
      },
      {
        "default": ""npx projen"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenCommand",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenCommand",
        ],
        "simpleType": "string",
        "switch": "projen-command",
      },
      {
        "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
        "docs": "Choose a method of providing GitHub API access for projen workflows.",
        "featured": false,
        "fqn": "projen.github.GithubCredentials",
        "fullType": {
          "fqn": "projen.github.GithubCredentials",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "projenCredentials",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenCredentials",
        ],
        "simpleType": "GithubCredentials",
        "switch": "projen-credentials",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Indicates of "projen" should be installed as a devDependency.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenDevDependency",
        ],
        "simpleType": "boolean",
        "switch": "projen-dev-dependency",
      },
      {
        "default": "- true if projenrcJson is false",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-js",
      },
      {
        "default": "false",
        "docs": "Generate (once) .projenrc.json (in JSON). Set to \`false\` in order to disable .projenrc.json generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJson",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJson",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-json",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.json.",
        "featured": false,
        "fqn": "projen.ProjenrcJsonOptions",
        "fullType": {
          "fqn": "projen.ProjenrcJsonOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsonOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJsonOptions",
        ],
        "simpleType": "ProjenrcJsonOptions",
        "switch": "projenrc-json-options",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "featured": false,
        "fqn": "projen.javascript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.javascript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-js-options",
      },
      {
        "default": "false",
        "docs": "Use TypeScript for your projenrc file (\`.projenrc.ts\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "initialValue": "true",
        "jsonLike": true,
        "name": "projenrcTs",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "projenrcTs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-ts",
      },
      {
        "docs": "Options for .projenrc.ts.",
        "featured": false,
        "fqn": "projen.typescript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.typescript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "projenrcTsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-ts-options",
      },
      {
        "default": ""PROJEN_GITHUB_TOKEN"",
        "deprecated": true,
        "docs": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenTokenSecret",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenTokenSecret",
        ],
        "simpleType": "string",
        "switch": "projen-token-secret",
      },
      {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenVersion",
        ],
        "simpleType": "string",
        "switch": "projen-version",
      },
      {
        "default": "false",
        "docs": "Instead of actually publishing to package managers, just print the publishing command.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishDryRun",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishDryRun",
        ],
        "simpleType": "boolean",
        "switch": "publish-dry-run",
      },
      {
        "default": "false",
        "docs": "Define publishing tasks that can be executed manually as well as workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishTasks",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishTasks",
        ],
        "simpleType": "boolean",
        "switch": "publish-tasks",
      },
      {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplate",
        ],
        "simpleType": "boolean",
        "switch": "pull-request-template",
      },
      {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplateContents",
        ],
        "simpleType": "unknown",
        "switch": "pull-request-template-contents",
      },
      {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "featured": false,
        "fqn": "projen.SampleReadmeProps",
        "fullType": {
          "fqn": "projen.SampleReadmeProps",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "readme",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "readme",
        ],
        "simpleType": "SampleReadmeProps",
        "switch": "readme",
      },
      {
        "default": "ReleasableCommits.everyCommit()",
        "docs": "Find commits that should be considered releasable Used to decide if a release is required.",
        "featured": false,
        "fqn": "projen.ReleasableCommits",
        "fullType": {
          "fqn": "projen.ReleasableCommits",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releasableCommits",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releasableCommits",
        ],
        "simpleType": "ReleasableCommits",
        "switch": "releasable-commits",
      },
      {
        "default": "- true (false for subprojects)",
        "docs": "Add release management to this project.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "release",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "release",
        ],
        "simpleType": "boolean",
        "switch": "release",
      },
      {
        "default": "- no additional branches are used for release. you can use
\`addBranch()\` to add additional branches.",
        "docs": "Defines additional release branches.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.release.BranchOptions",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "releaseBranches",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseBranches",
        ],
        "simpleType": "unknown",
        "switch": "release-branches",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseEveryCommit",
        ],
        "simpleType": "boolean",
        "switch": "release-every-commit",
      },
      {
        "default": "false",
        "docs": "Create a github issue on every failed publishing task.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseFailureIssue",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssue",
        ],
        "simpleType": "boolean",
        "switch": "release-failure-issue",
      },
      {
        "default": ""failed-release"",
        "docs": "The label to apply to issues indicating publish failures.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseFailureIssueLabel",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssueLabel",
        ],
        "simpleType": "string",
        "switch": "release-failure-issue-label",
      },
      {
        "default": "- no scheduled releases",
        "deprecated": true,
        "docs": "CRON schedule to trigger new releases.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseSchedule",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseSchedule",
        ],
        "simpleType": "string",
        "switch": "release-schedule",
      },
      {
        "default": ""v"",
        "docs": "Automatically add the given prefix to release tags. Useful if you are releasing on multiple branches with overlapping version numbers.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseTagPrefix",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTagPrefix",
        ],
        "simpleType": "string",
        "switch": "release-tag-prefix",
      },
      {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseToNpm",
        ],
        "simpleType": "boolean",
        "switch": "release-to-npm",
      },
      {
        "default": "- Continuous releases (\`ReleaseTrigger.continuous()\`)",
        "docs": "The release trigger to use.",
        "featured": false,
        "fqn": "projen.release.ReleaseTrigger",
        "fullType": {
          "fqn": "projen.release.ReleaseTrigger",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releaseTrigger",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTrigger",
        ],
        "simpleType": "ReleaseTrigger",
        "switch": "release-trigger",
      },
      {
        "default": "- true if not a subproject",
        "deprecated": true,
        "docs": "DEPRECATED: renamed to \`release\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "release-workflow",
      },
      {
        "default": ""release"",
        "docs": "The name of the default release workflow.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseWorkflowName",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowName",
        ],
        "simpleType": "string",
        "switch": "release-workflow-name",
      },
      {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowSetupSteps",
        ],
        "simpleType": "unknown",
        "switch": "release-workflow-setup-steps",
      },
      {
        "default": "false",
        "docs": "Use renovatebot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "renovatebot",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebot",
        ],
        "simpleType": "boolean",
        "switch": "renovatebot",
      },
      {
        "default": "- default options",
        "docs": "Options for renovatebot.",
        "featured": false,
        "fqn": "projen.RenovatebotOptions",
        "fullType": {
          "fqn": "projen.RenovatebotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "renovatebotOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebotOptions",
        ],
        "simpleType": "RenovatebotOptions",
        "switch": "renovatebot-options",
      },
      {
        "docs": "The repository is the location where the actual code for your package lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repository",
        ],
        "simpleType": "string",
        "switch": "repository",
      },
      {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repositoryDirectory",
        ],
        "simpleType": "string",
        "switch": "repository-directory",
      },
      {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "sampleCode",
        ],
        "simpleType": "boolean",
        "switch": "sample-code",
      },
      {
        "default": "- fetch all scoped packages from the public npm registry",
        "docs": "Options for privately hosted scoped packages.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.javascript.ScopedPackagesOptions",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "scopedPackagesOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scopedPackagesOptions",
        ],
        "simpleType": "unknown",
        "switch": "scoped-packages-options",
      },
      {
        "default": "{}",
        "deprecated": true,
        "docs": "npm scripts to include.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scripts",
        ],
        "simpleType": "unknown",
        "switch": "scripts",
      },
      {
        "default": ""src"",
        "docs": "Typescript sources directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "srcdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "srcdir",
        ],
        "simpleType": "string",
        "switch": "srcdir",
      },
      {
        "docs": "Package's Stability.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "stability",
        ],
        "simpleType": "string",
        "switch": "stability",
      },
      {
        "default": "false",
        "docs": "Auto-close of stale issues and pull request.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "stale",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "stale",
        ],
        "simpleType": "boolean",
        "switch": "stale",
      },
      {
        "default": "- see defaults in \`StaleOptions\`",
        "docs": "Auto-close stale issues and pull requests.",
        "featured": false,
        "fqn": "projen.github.StaleOptions",
        "fullType": {
          "fqn": "projen.github.StaleOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "staleOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "staleOptions",
        ],
        "simpleType": "StaleOptions",
        "switch": "stale-options",
      },
      {
        "default": ""test"",
        "docs": "Jest tests directory. Tests files should be named \`xxx.test.ts\`.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "testdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "testdir",
        ],
        "simpleType": "string",
        "switch": "testdir",
      },
      {
        "default": "- default options",
        "docs": "Custom TSConfig.",
        "featured": false,
        "fqn": "projen.javascript.TypescriptConfigOptions",
        "fullType": {
          "fqn": "projen.javascript.TypescriptConfigOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfig",
        ],
        "simpleType": "TypescriptConfigOptions",
        "switch": "tsconfig",
      },
      {
        "default": "- use the production tsconfig options",
        "docs": "Custom tsconfig options for the development tsconfig.json file (used for testing).",
        "featured": false,
        "fqn": "projen.javascript.TypescriptConfigOptions",
        "fullType": {
          "fqn": "projen.javascript.TypescriptConfigOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsconfigDev",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfigDev",
        ],
        "simpleType": "TypescriptConfigOptions",
        "switch": "tsconfig-dev",
      },
      {
        "default": ""tsconfig.dev.json"",
        "docs": "The name of the development tsconfig.json file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "tsconfigDevFile",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfigDevFile",
        ],
        "simpleType": "string",
        "switch": "tsconfig-dev-file",
      },
      {
        "docs": "Options for ts-jest.",
        "featured": false,
        "fqn": "projen.typescript.TsJestOptions",
        "fullType": {
          "fqn": "projen.typescript.TsJestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsJestOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsJestOptions",
        ],
        "simpleType": "TsJestOptions",
        "switch": "ts-jest-options",
      },
      {
        "default": ""latest"",
        "docs": "TypeScript version to use.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "typescriptVersion",
        ],
        "simpleType": "string",
        "switch": "typescript-version",
      },
      {
        "default": "- standard configuration applicable for GitHub repositories",
        "docs": "Custom configuration used when creating changelog with commit-and-tag-version package.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "any",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "versionrcOptions",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "versionrcOptions",
        ],
        "simpleType": "unknown",
        "switch": "versionrc-options",
      },
      {
        "default": "true",
        "docs": "Enable VSCode integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "vscode",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "vscode",
        ],
        "simpleType": "boolean",
        "switch": "vscode",
      },
      {
        "default": ""yarn install --frozen-lockfile && yarn projen"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowBootstrapSteps",
        ],
        "simpleType": "unknown",
        "switch": "workflow-bootstrap-steps",
      },
      {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowContainerImage",
        ],
        "simpleType": "string",
        "switch": "workflow-container-image",
      },
      {
        "default": "- GitHub Actions",
        "docs": "The git identity to use in workflows.",
        "featured": false,
        "fqn": "projen.github.GitIdentity",
        "fullType": {
          "fqn": "projen.github.GitIdentity",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowGitIdentity",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowGitIdentity",
        ],
        "simpleType": "GitIdentity",
        "switch": "workflow-git-identity",
      },
      {
        "default": "- \`minNodeVersion\` if set, otherwise \`lts/*\`.",
        "docs": "The node version used in GitHub Actions workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowNodeVersion",
        ],
        "simpleType": "string",
        "switch": "workflow-node-version",
      },
      {
        "default": "false",
        "docs": "Enable Node.js package cache in GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "workflowPackageCache",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowPackageCache",
        ],
        "simpleType": "boolean",
        "switch": "workflow-package-cache",
      },
      {
        "default": "["ubuntu-latest"]",
        "docs": "Github Runner selection labels.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowRunsOn",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOn",
        ],
        "simpleType": "unknown",
        "switch": "workflow-runs-on",
      },
      {
        "docs": "Github Runner Group selection options.",
        "featured": false,
        "fqn": "projen.GroupRunnerOptions",
        "fullType": {
          "fqn": "projen.GroupRunnerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowRunsOnGroup",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOnGroup",
        ],
        "simpleType": "GroupRunnerOptions",
        "switch": "workflow-runs-on-group",
      },
      {
        "default": "- Yarn Berry v4 with all default options",
        "docs": "Options for Yarn Berry.",
        "featured": false,
        "fqn": "projen.javascript.YarnBerryOptions",
        "fullType": {
          "fqn": "projen.javascript.YarnBerryOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "yarnBerryOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "yarnBerryOptions",
        ],
        "simpleType": "YarnBerryOptions",
        "switch": "yarn-berry-options",
      },
    ],
    "pjid": "typescript",
    "typename": "typescript.TypeScriptProject",
  },
  {
    "docs": "TypeScript app.",
    "docsurl": "https://projen.io/docs/api/typescript#typescriptappproject-",
    "fqn": "projen.typescript.TypeScriptAppProject",
    "moduleName": "projen",
    "options": [
      {
        "default": "true",
        "docs": "Allow the project to include \`peerDependencies\` and \`bundledDependencies\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "allowLibraryDependencies",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "allowLibraryDependencies",
        ],
        "simpleType": "boolean",
        "switch": "allow-library-dependencies",
      },
      {
        "default": ""dist"",
        "docs": "A directory which will contain build artifacts.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "artifactsDirectory",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "artifactsDirectory",
        ],
        "simpleType": "string",
        "switch": "artifacts-directory",
      },
      {
        "docs": "Author's e-mail.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorEmail",
        ],
        "simpleType": "string",
        "switch": "author-email",
      },
      {
        "docs": "Author's name.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorName",
        ],
        "simpleType": "string",
        "switch": "author-name",
      },
      {
        "docs": "Is the author an organization.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "authorOrganization",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorOrganization",
        ],
        "simpleType": "boolean",
        "switch": "author-organization",
      },
      {
        "docs": "Author's URL / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "authorUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "authorUrl",
        ],
        "simpleType": "string",
        "switch": "author-url",
      },
      {
        "default": "- auto approve is disabled",
        "docs": "Enable and configure the 'auto approve' workflow.",
        "featured": false,
        "fqn": "projen.github.AutoApproveOptions",
        "fullType": {
          "fqn": "projen.github.AutoApproveOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoApproveOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoApproveOptions",
        ],
        "simpleType": "AutoApproveOptions",
        "switch": "auto-approve-options",
      },
      {
        "default": "- true",
        "docs": "Automatically approve deps upgrade PRs, allowing them to be merged by mergify (if configued).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoApproveUpgrades",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "autoApproveUpgrades",
        ],
        "simpleType": "boolean",
        "switch": "auto-approve-upgrades",
      },
      {
        "default": "true",
        "docs": "Automatically add all executables under the \`bin\` directory to your \`package.json\` file under the \`bin\` section.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoDetectBin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "autoDetectBin",
        ],
        "simpleType": "boolean",
        "switch": "auto-detect-bin",
      },
      {
        "default": "true",
        "docs": "Enable automatic merging on GitHub.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "autoMerge",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMerge",
        ],
        "simpleType": "boolean",
        "switch": "auto-merge",
      },
      {
        "default": "- see defaults in \`AutoMergeOptions\`",
        "docs": "Configure options for automatic merging on GitHub.",
        "featured": false,
        "fqn": "projen.github.AutoMergeOptions",
        "fullType": {
          "fqn": "projen.github.AutoMergeOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "autoMergeOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "autoMergeOptions",
        ],
        "simpleType": "AutoMergeOptions",
        "switch": "auto-merge-options",
      },
      {
        "docs": "Binary programs vended with your module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "bin",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bin",
        ],
        "simpleType": "unknown",
        "switch": "bin",
      },
      {
        "docs": "The email address to which issues should be reported.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsEmail",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsEmail",
        ],
        "simpleType": "string",
        "switch": "bugs-email",
      },
      {
        "docs": "The url to your project's issue tracker.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bugsUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bugsUrl",
        ],
        "simpleType": "string",
        "switch": "bugs-url",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Define a GitHub workflow for building PRs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "buildWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "build-workflow",
      },
      {
        "docs": "Options for PR build workflow.",
        "featured": false,
        "fqn": "projen.javascript.BuildWorkflowOptions",
        "fullType": {
          "fqn": "projen.javascript.BuildWorkflowOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowOptions",
        ],
        "simpleType": "BuildWorkflowOptions",
        "switch": "build-workflow-options",
      },
      {
        "default": ""{ pullRequest: {}, workflowDispatch: {} }"",
        "deprecated": true,
        "docs": "Build workflow triggers.",
        "featured": false,
        "fqn": "projen.github.workflows.Triggers",
        "fullType": {
          "fqn": "projen.github.workflows.Triggers",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "buildWorkflowTriggers",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "buildWorkflowTriggers",
        ],
        "simpleType": "Triggers",
        "switch": "build-workflow-triggers",
      },
      {
        "default": "- A recent version of "commit-and-tag-version"",
        "docs": "The \`commit-and-tag-version\` compatible package used to bump the package version, as a dependency string.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bumpPackage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "bumpPackage",
        ],
        "simpleType": "string",
        "switch": "bump-package",
      },
      {
        "docs": "List of dependencies to bundle into this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "bundledDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bundledDeps",
        ],
        "simpleType": "unknown",
        "switch": "bundled-deps",
      },
      {
        "docs": "Options for \`Bundler\`.",
        "featured": false,
        "fqn": "projen.javascript.BundlerOptions",
        "fullType": {
          "fqn": "projen.javascript.BundlerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "bundlerOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "bundlerOptions",
        ],
        "simpleType": "BundlerOptions",
        "switch": "bundler-options",
      },
      {
        "default": ""latest"",
        "docs": "The version of Bun to use if using Bun as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "bunVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "bunVersion",
        ],
        "simpleType": "string",
        "switch": "bun-version",
      },
      {
        "default": "- no license checks are run during the build and all licenses will be accepted",
        "docs": "Configure which licenses should be deemed acceptable for use by dependencies.",
        "featured": false,
        "fqn": "projen.javascript.LicenseCheckerOptions",
        "fullType": {
          "fqn": "projen.javascript.LicenseCheckerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "checkLicenses",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "checkLicenses",
        ],
        "simpleType": "LicenseCheckerOptions",
        "switch": "check-licenses",
      },
      {
        "default": "- true, but false for subprojects",
        "docs": "Add a \`clobber\` task which resets the repo to origin.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "clobber",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "clobber",
        ],
        "simpleType": "boolean",
        "switch": "clobber",
      },
      {
        "default": "- undefined",
        "docs": "Options for npm packages using AWS CodeArtifact.",
        "featured": false,
        "fqn": "projen.javascript.CodeArtifactOptions",
        "fullType": {
          "fqn": "projen.javascript.CodeArtifactOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "codeArtifactOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "codeArtifactOptions",
        ],
        "simpleType": "CodeArtifactOptions",
        "switch": "code-artifact-options",
      },
      {
        "default": "false",
        "docs": "Define a GitHub workflow step for sending code coverage metrics to https://codecov.io/ Uses codecov/codecov-action@v4 A secret is required for private repos. Configured with \`@codeCovTokenSecret\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "codeCov",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCov",
        ],
        "simpleType": "boolean",
        "switch": "code-cov",
      },
      {
        "default": "- if this option is not specified, only public repositories are supported",
        "docs": "Define the secret name for a specified https://codecov.io/ token A secret is required to send coverage for private repositories.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "codeCovTokenSecret",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "codeCovTokenSecret",
        ],
        "simpleType": "string",
        "switch": "code-cov-token-secret",
      },
      {
        "default": "true",
        "docs": "Whether to commit the managed files by default.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "commitGenerated",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "commitGenerated",
        ],
        "simpleType": "boolean",
        "switch": "commit-generated",
      },
      {
        "default": "- defaults to the value of authorName or "" if \`authorName\` is undefined.",
        "docs": "License copyright owner.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightOwner",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightOwner",
        ],
        "simpleType": "string",
        "switch": "copyright-owner",
      },
      {
        "default": "- current year",
        "docs": "The copyright years to put in the LICENSE file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "copyrightPeriod",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "copyrightPeriod",
        ],
        "simpleType": "string",
        "switch": "copyright-period",
      },
      {
        "default": ""main"",
        "docs": "The name of the main release branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": ""main"",
        "jsonLike": true,
        "name": "defaultReleaseBranch",
        "parent": "NodeProjectOptions",
        "path": [
          "defaultReleaseBranch",
        ],
        "simpleType": "string",
        "switch": "default-release-branch",
      },
      {
        "default": "false",
        "docs": "Use dependabot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "dependabot",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabot",
        ],
        "simpleType": "boolean",
        "switch": "dependabot",
      },
      {
        "default": "- default options",
        "docs": "Options for dependabot.",
        "featured": false,
        "fqn": "projen.github.DependabotOptions",
        "fullType": {
          "fqn": "projen.github.DependabotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "dependabotOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "dependabotOptions",
        ],
        "simpleType": "DependabotOptions",
        "switch": "dependabot-options",
      },
      {
        "default": "[]",
        "docs": "Runtime dependencies of this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "deps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "deps",
        ],
        "simpleType": "unknown",
        "switch": "deps",
      },
      {
        "default": "true",
        "docs": "Use tasks and github workflows to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "depsUpgrade",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgrade",
        ],
        "simpleType": "boolean",
        "switch": "deps-upgrade",
      },
      {
        "default": "- default options",
        "docs": "Options for \`UpgradeDependencies\`.",
        "featured": false,
        "fqn": "projen.javascript.UpgradeDependenciesOptions",
        "fullType": {
          "fqn": "projen.javascript.UpgradeDependenciesOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "depsUpgradeOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "depsUpgradeOptions",
        ],
        "simpleType": "UpgradeDependenciesOptions",
        "switch": "deps-upgrade-options",
      },
      {
        "docs": "The description is just a string that helps people understand the purpose of the package.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "description",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "description",
        ],
        "simpleType": "string",
        "switch": "description",
      },
      {
        "default": "false",
        "docs": "Add a VSCode development environment (used for GitHub Codespaces).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "devContainer",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "devContainer",
        ],
        "simpleType": "boolean",
        "switch": "dev-container",
      },
      {
        "default": "[]",
        "docs": "Build dependencies for this module.",
        "featured": true,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "devDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "devDeps",
        ],
        "simpleType": "unknown",
        "switch": "dev-deps",
      },
      {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.json\` file (used by jsii projects since tsconfig.json is generated by the jsii compiler).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "disableTsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "disableTsconfig",
        ],
        "simpleType": "boolean",
        "switch": "disable-tsconfig",
      },
      {
        "default": "false",
        "docs": "Do not generate a \`tsconfig.dev.json\` file.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "disableTsconfigDev",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "disableTsconfigDev",
        ],
        "simpleType": "boolean",
        "switch": "disable-tsconfig-dev",
      },
      {
        "default": "false",
        "docs": "Docgen by Typedoc.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "docgen",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "docgen",
        ],
        "simpleType": "boolean",
        "switch": "docgen",
      },
      {
        "default": ""docs"",
        "docs": "Docs directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "docsDirectory",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "docsDirectory",
        ],
        "simpleType": "string",
        "switch": "docs-directory",
      },
      {
        "default": ""lib/index.js"",
        "docs": "Module entrypoint (\`main\` in \`package.json\`).",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypoint",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "entrypoint",
        ],
        "simpleType": "string",
        "switch": "entrypoint",
      },
      {
        "default": "- .d.ts file derived from the project's entrypoint (usually lib/index.d.ts)",
        "docs": "The .d.ts file that includes the type declarations for this module.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "entrypointTypes",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "entrypointTypes",
        ],
        "simpleType": "string",
        "switch": "entrypoint-types",
      },
      {
        "default": "true",
        "docs": "Setup eslint.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "eslint",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "eslint",
        ],
        "simpleType": "boolean",
        "switch": "eslint",
      },
      {
        "default": "- opinionated default options",
        "docs": "Eslint options.",
        "featured": false,
        "fqn": "projen.javascript.EslintOptions",
        "fullType": {
          "fqn": "projen.javascript.EslintOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "eslintOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "eslintOptions",
        ],
        "simpleType": "EslintOptions",
        "switch": "eslint-options",
      },
      {
        "default": "true",
        "docs": "Enable GitHub integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "github",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "github",
        ],
        "simpleType": "boolean",
        "switch": "github",
      },
      {
        "default": "- see GitHubOptions",
        "docs": "Options for GitHub integration.",
        "featured": false,
        "fqn": "projen.github.GitHubOptions",
        "fullType": {
          "fqn": "projen.github.GitHubOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "githubOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "githubOptions",
        ],
        "simpleType": "GitHubOptions",
        "switch": "github-options",
      },
      {
        "docs": "Additional entries to .gitignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "gitignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "gitignore",
        ],
        "simpleType": "unknown",
        "switch": "gitignore",
      },
      {
        "docs": "Configuration options for .gitignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitIgnoreOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "git-ignore-options",
      },
      {
        "docs": "Configuration options for git.",
        "featured": false,
        "fqn": "projen.GitOptions",
        "fullType": {
          "fqn": "projen.GitOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "gitOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "gitOptions",
        ],
        "simpleType": "GitOptions",
        "switch": "git-options",
      },
      {
        "default": "false",
        "docs": "Add a Gitpod development environment.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "gitpod",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "gitpod",
        ],
        "simpleType": "boolean",
        "switch": "gitpod",
      },
      {
        "docs": "Package's Homepage / Website.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "homepage",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "homepage",
        ],
        "simpleType": "string",
        "switch": "homepage",
      },
      {
        "default": "true",
        "docs": "Setup jest unit tests.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "jest",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jest",
        ],
        "simpleType": "boolean",
        "switch": "jest",
      },
      {
        "default": "- default options",
        "docs": "Jest options.",
        "featured": false,
        "fqn": "projen.javascript.JestOptions",
        "fullType": {
          "fqn": "projen.javascript.JestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "jestOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "jestOptions",
        ],
        "simpleType": "JestOptions",
        "switch": "jest-options",
      },
      {
        "default": ""latest"",
        "docs": "Version requirement of \`publib\` which is used to publish modules to npm.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "jsiiReleaseVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "jsiiReleaseVersion",
        ],
        "simpleType": "string",
        "switch": "jsii-release-version",
      },
      {
        "docs": "Keywords to include in \`package.json\`.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "keywords",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "keywords",
        ],
        "simpleType": "unknown",
        "switch": "keywords",
      },
      {
        "default": ""lib"",
        "docs": "Typescript  artifacts output directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "libdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "libdir",
        ],
        "simpleType": "string",
        "switch": "libdir",
      },
      {
        "default": ""Apache-2.0"",
        "docs": "License's SPDX identifier.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "license",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "license",
        ],
        "simpleType": "string",
        "switch": "license",
      },
      {
        "default": "true",
        "docs": "Indicates if a license should be added.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "licensed",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "licensed",
        ],
        "simpleType": "boolean",
        "switch": "licensed",
      },
      {
        "default": "{}",
        "docs": "Configure logging options such as verbosity.",
        "featured": false,
        "fqn": "projen.LoggerOptions",
        "fullType": {
          "fqn": "projen.LoggerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "logging",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "logging",
        ],
        "simpleType": "LoggerOptions",
        "switch": "logging",
      },
      {
        "default": "- Major version is not enforced.",
        "docs": "Major version to release from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "majorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "majorVersion",
        ],
        "simpleType": "number",
        "switch": "major-version",
      },
      {
        "default": "- no maximum version is enforced",
        "docs": "The maximum node version supported by this package. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "maxNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "maxNodeVersion",
        ],
        "simpleType": "string",
        "switch": "max-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Whether mergify should be enabled on this repository or not.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mergify",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergify",
        ],
        "simpleType": "boolean",
        "switch": "mergify",
      },
      {
        "default": "- default options",
        "deprecated": true,
        "docs": "Options for mergify.",
        "featured": false,
        "fqn": "projen.github.MergifyOptions",
        "fullType": {
          "fqn": "projen.github.MergifyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "mergifyOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "mergifyOptions",
        ],
        "simpleType": "MergifyOptions",
        "switch": "mergify-options",
      },
      {
        "default": "- No minimum version is being enforced",
        "docs": "Minimal Major version to release.",
        "featured": false,
        "fullType": {
          "primitive": "number",
        },
        "jsonLike": true,
        "name": "minMajorVersion",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "minMajorVersion",
        ],
        "simpleType": "number",
        "switch": "min-major-version",
      },
      {
        "default": "- no minimum version is enforced",
        "docs": "The minimum node version required by this package to function. Most projects should not use this option.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "minNodeVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "minNodeVersion",
        ],
        "simpleType": "string",
        "switch": "min-node-version",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically update files modified during builds to pull-request branches.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "mutableBuild",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "mutableBuild",
        ],
        "simpleType": "boolean",
        "switch": "mutable-build",
      },
      {
        "default": "$BASEDIR",
        "docs": "This is the name of your project.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "initialValue": "$BASEDIR",
        "jsonLike": true,
        "name": "name",
        "parent": "ProjectOptions",
        "path": [
          "name",
        ],
        "simpleType": "string",
        "switch": "name",
      },
      {
        "default": "- The next version will be determined based on the commit history and project settings.",
        "docs": "A shell command to control the next version to release.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "nextVersionCommand",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "nextVersionCommand",
        ],
        "simpleType": "string",
        "switch": "next-version-command",
      },
      {
        "default": "- for scoped packages (e.g. \`foo@bar\`), the default is
\`NpmAccess.RESTRICTED\`, for non-scoped packages, the default is
\`NpmAccess.PUBLIC\`.",
        "docs": "Access level of the npm package.",
        "featured": false,
        "fqn": "projen.javascript.NpmAccess",
        "fullType": {
          "fqn": "projen.javascript.NpmAccess",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "npmAccess",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmAccess",
        ],
        "simpleType": "NpmAccess",
        "switch": "npm-access",
      },
      {
        "default": ""latest"",
        "docs": "The npmDistTag to use when publishing from the default branch.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmDistTag",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "npmDistTag",
        ],
        "simpleType": "string",
        "switch": "npm-dist-tag",
      },
      {
        "deprecated": true,
        "docs": "Additional entries to .npmignore.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "npmignore",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignore",
        ],
        "simpleType": "unknown",
        "switch": "npmignore",
      },
      {
        "default": "true",
        "docs": "Defines an .npmignore file. Normally this is only needed for libraries that are packaged as tarballs.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmignoreEnabled",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmignoreEnabled",
        ],
        "simpleType": "boolean",
        "switch": "npmignore-enabled",
      },
      {
        "docs": "Configuration options for .npmignore file.",
        "featured": false,
        "fqn": "projen.IgnoreFileOptions",
        "fullType": {
          "fqn": "projen.IgnoreFileOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "npmIgnoreOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "npmIgnoreOptions",
        ],
        "simpleType": "IgnoreFileOptions",
        "switch": "npm-ignore-options",
      },
      {
        "default": "- true for public packages, false otherwise",
        "docs": "Should provenance statements be generated when the package is published.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "npmProvenance",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmProvenance",
        ],
        "simpleType": "boolean",
        "switch": "npm-provenance",
      },
      {
        "deprecated": true,
        "docs": "The host name of the npm registry to publish to.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistry",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistry",
        ],
        "simpleType": "string",
        "switch": "npm-registry",
      },
      {
        "default": ""https://registry.npmjs.org"",
        "docs": "The base URL of the npm package registry.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmRegistryUrl",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmRegistryUrl",
        ],
        "simpleType": "string",
        "switch": "npm-registry-url",
      },
      {
        "default": ""NPM_TOKEN"",
        "docs": "GitHub secret which contains the NPM token to use when publishing packages.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "npmTokenSecret",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "npmTokenSecret",
        ],
        "simpleType": "string",
        "switch": "npm-token-secret",
      },
      {
        "default": ""."",
        "docs": "The root directory of the project.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "outdir",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "outdir",
        ],
        "simpleType": "string",
        "switch": "outdir",
      },
      {
        "default": "true",
        "docs": "Defines a \`package\` task that will produce an npm tarball under the artifacts directory (e.g. \`dist\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "package",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "package",
        ],
        "simpleType": "boolean",
        "switch": "package",
      },
      {
        "default": "NodePackageManager.YARN_CLASSIC",
        "docs": "The Node Package Manager used to execute scripts.",
        "featured": false,
        "fqn": "projen.javascript.NodePackageManager",
        "fullType": {
          "fqn": "projen.javascript.NodePackageManager",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "packageManager",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageManager",
        ],
        "simpleType": "NodePackageManager",
        "switch": "package-manager",
      },
      {
        "default": "- defaults to project name",
        "docs": "The "name" in package.json.",
        "featured": true,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "packageName",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "packageName",
        ],
        "simpleType": "string",
        "switch": "package-name",
      },
      {
        "docs": "The parent project, if this project is part of a bigger project.",
        "featured": false,
        "fqn": "projen.Project",
        "fullType": {
          "fqn": "projen.Project",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "parent",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "parent",
        ],
        "simpleType": "Project",
        "switch": "parent",
      },
      {
        "docs": "Options for \`peerDeps\`.",
        "featured": false,
        "fqn": "projen.javascript.PeerDependencyOptions",
        "fullType": {
          "fqn": "projen.javascript.PeerDependencyOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "peerDependencyOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDependencyOptions",
        ],
        "simpleType": "PeerDependencyOptions",
        "switch": "peer-dependency-options",
      },
      {
        "default": "[]",
        "docs": "Peer dependencies for this module.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "peerDeps",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "peerDeps",
        ],
        "simpleType": "unknown",
        "switch": "peer-deps",
      },
      {
        "default": ""9"",
        "docs": "The version of PNPM to use if using PNPM as a package manager.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "pnpmVersion",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "pnpmVersion",
        ],
        "simpleType": "string",
        "switch": "pnpm-version",
      },
      {
        "default": "[]",
        "docs": "Steps to execute after build as part of the release workflow.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "postBuildSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "postBuildSteps",
        ],
        "simpleType": "unknown",
        "switch": "post-build-steps",
      },
      {
        "default": "- normal semantic versions",
        "docs": "Bump versions from the default branch as pre-releases (e.g. "beta", "alpha", "pre").",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "prerelease",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "prerelease",
        ],
        "simpleType": "string",
        "switch": "prerelease",
      },
      {
        "default": "false",
        "docs": "Setup prettier.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "prettier",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettier",
        ],
        "simpleType": "boolean",
        "switch": "prettier",
      },
      {
        "default": "- default options",
        "docs": "Prettier options.",
        "featured": false,
        "fqn": "projen.javascript.PrettierOptions",
        "fullType": {
          "fqn": "projen.javascript.PrettierOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "prettierOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "prettierOptions",
        ],
        "simpleType": "PrettierOptions",
        "switch": "prettier-options",
      },
      {
        "default": "ProjectType.UNKNOWN",
        "deprecated": true,
        "docs": "Which type of project this is (library/app).",
        "featured": false,
        "fqn": "projen.ProjectType",
        "fullType": {
          "fqn": "projen.ProjectType",
        },
        "jsonLike": true,
        "kind": "enum",
        "name": "projectType",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projectType",
        ],
        "simpleType": "ProjectType",
        "switch": "project-type",
      },
      {
        "default": ""npx projen"",
        "docs": "The shell command to use in order to run the projen CLI.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenCommand",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenCommand",
        ],
        "simpleType": "string",
        "switch": "projen-command",
      },
      {
        "default": "- use a personal access token named PROJEN_GITHUB_TOKEN",
        "docs": "Choose a method of providing GitHub API access for projen workflows.",
        "featured": false,
        "fqn": "projen.github.GithubCredentials",
        "fullType": {
          "fqn": "projen.github.GithubCredentials",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "projenCredentials",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenCredentials",
        ],
        "simpleType": "GithubCredentials",
        "switch": "projen-credentials",
      },
      {
        "default": "- true if not a subproject",
        "docs": "Indicates of "projen" should be installed as a devDependency.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenDevDependency",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenDevDependency",
        ],
        "simpleType": "boolean",
        "switch": "projen-dev-dependency",
      },
      {
        "default": "- true if projenrcJson is false",
        "docs": "Generate (once) .projenrc.js (in JavaScript). Set to \`false\` in order to disable .projenrc.js generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJs",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-js",
      },
      {
        "default": "false",
        "docs": "Generate (once) .projenrc.json (in JSON). Set to \`false\` in order to disable .projenrc.json generation.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "projenrcJson",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJson",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-json",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.json.",
        "featured": false,
        "fqn": "projen.ProjenrcJsonOptions",
        "fullType": {
          "fqn": "projen.ProjenrcJsonOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsonOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "projenrcJsonOptions",
        ],
        "simpleType": "ProjenrcJsonOptions",
        "switch": "projenrc-json-options",
      },
      {
        "default": "- default options",
        "docs": "Options for .projenrc.js.",
        "featured": false,
        "fqn": "projen.javascript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.javascript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcJsOptions",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenrcJsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-js-options",
      },
      {
        "default": "false",
        "docs": "Use TypeScript for your projenrc file (\`.projenrc.ts\`).",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "initialValue": "true",
        "jsonLike": true,
        "name": "projenrcTs",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "projenrcTs",
        ],
        "simpleType": "boolean",
        "switch": "projenrc-ts",
      },
      {
        "docs": "Options for .projenrc.ts.",
        "featured": false,
        "fqn": "projen.typescript.ProjenrcOptions",
        "fullType": {
          "fqn": "projen.typescript.ProjenrcOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "projenrcTsOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "projenrcTsOptions",
        ],
        "simpleType": "ProjenrcOptions",
        "switch": "projenrc-ts-options",
      },
      {
        "default": ""PROJEN_GITHUB_TOKEN"",
        "deprecated": true,
        "docs": "The name of a secret which includes a GitHub Personal Access Token to be used by projen workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenTokenSecret",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "projenTokenSecret",
        ],
        "simpleType": "string",
        "switch": "projen-token-secret",
      },
      {
        "default": "- Defaults to the latest version.",
        "docs": "Version of projen to install.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "projenVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "projenVersion",
        ],
        "simpleType": "string",
        "switch": "projen-version",
      },
      {
        "default": "false",
        "docs": "Instead of actually publishing to package managers, just print the publishing command.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishDryRun",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishDryRun",
        ],
        "simpleType": "boolean",
        "switch": "publish-dry-run",
      },
      {
        "default": "false",
        "docs": "Define publishing tasks that can be executed manually as well as workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "publishTasks",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "publishTasks",
        ],
        "simpleType": "boolean",
        "switch": "publish-tasks",
      },
      {
        "default": "true",
        "docs": "Include a GitHub pull request template.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "pullRequestTemplate",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplate",
        ],
        "simpleType": "boolean",
        "switch": "pull-request-template",
      },
      {
        "default": "- default content",
        "docs": "The contents of the pull request template.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "pullRequestTemplateContents",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "pullRequestTemplateContents",
        ],
        "simpleType": "unknown",
        "switch": "pull-request-template-contents",
      },
      {
        "default": "- { filename: 'README.md', contents: '# replace this' }",
        "docs": "The README setup.",
        "featured": false,
        "fqn": "projen.SampleReadmeProps",
        "fullType": {
          "fqn": "projen.SampleReadmeProps",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "readme",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "readme",
        ],
        "simpleType": "SampleReadmeProps",
        "switch": "readme",
      },
      {
        "default": "ReleasableCommits.everyCommit()",
        "docs": "Find commits that should be considered releasable Used to decide if a release is required.",
        "featured": false,
        "fqn": "projen.ReleasableCommits",
        "fullType": {
          "fqn": "projen.ReleasableCommits",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releasableCommits",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releasableCommits",
        ],
        "simpleType": "ReleasableCommits",
        "switch": "releasable-commits",
      },
      {
        "default": "- true (false for subprojects)",
        "docs": "Add release management to this project.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "release",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "release",
        ],
        "simpleType": "boolean",
        "switch": "release",
      },
      {
        "default": "- no additional branches are used for release. you can use
\`addBranch()\` to add additional branches.",
        "docs": "Defines additional release branches.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.release.BranchOptions",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "releaseBranches",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseBranches",
        ],
        "simpleType": "unknown",
        "switch": "release-branches",
      },
      {
        "default": "true",
        "deprecated": true,
        "docs": "Automatically release new versions every commit to one of branches in \`releaseBranches\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseEveryCommit",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseEveryCommit",
        ],
        "simpleType": "boolean",
        "switch": "release-every-commit",
      },
      {
        "default": "false",
        "docs": "Create a github issue on every failed publishing task.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseFailureIssue",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssue",
        ],
        "simpleType": "boolean",
        "switch": "release-failure-issue",
      },
      {
        "default": ""failed-release"",
        "docs": "The label to apply to issues indicating publish failures.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseFailureIssueLabel",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseFailureIssueLabel",
        ],
        "simpleType": "string",
        "switch": "release-failure-issue-label",
      },
      {
        "default": "- no scheduled releases",
        "deprecated": true,
        "docs": "CRON schedule to trigger new releases.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseSchedule",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseSchedule",
        ],
        "simpleType": "string",
        "switch": "release-schedule",
      },
      {
        "default": ""v"",
        "docs": "Automatically add the given prefix to release tags. Useful if you are releasing on multiple branches with overlapping version numbers.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseTagPrefix",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTagPrefix",
        ],
        "simpleType": "string",
        "switch": "release-tag-prefix",
      },
      {
        "default": "false",
        "docs": "Automatically release to npm when new versions are introduced.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseToNpm",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseToNpm",
        ],
        "simpleType": "boolean",
        "switch": "release-to-npm",
      },
      {
        "default": "- Continuous releases (\`ReleaseTrigger.continuous()\`)",
        "docs": "The release trigger to use.",
        "featured": false,
        "fqn": "projen.release.ReleaseTrigger",
        "fullType": {
          "fqn": "projen.release.ReleaseTrigger",
        },
        "jsonLike": false,
        "kind": "class",
        "name": "releaseTrigger",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseTrigger",
        ],
        "simpleType": "ReleaseTrigger",
        "switch": "release-trigger",
      },
      {
        "default": "- true if not a subproject",
        "deprecated": true,
        "docs": "DEPRECATED: renamed to \`release\`.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "releaseWorkflow",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "releaseWorkflow",
        ],
        "simpleType": "boolean",
        "switch": "release-workflow",
      },
      {
        "default": ""release"",
        "docs": "The name of the default release workflow.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "releaseWorkflowName",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowName",
        ],
        "simpleType": "string",
        "switch": "release-workflow-name",
      },
      {
        "docs": "A set of workflow steps to execute in order to setup the workflow container.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "releaseWorkflowSetupSteps",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "releaseWorkflowSetupSteps",
        ],
        "simpleType": "unknown",
        "switch": "release-workflow-setup-steps",
      },
      {
        "default": "false",
        "docs": "Use renovatebot to handle dependency upgrades.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "renovatebot",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebot",
        ],
        "simpleType": "boolean",
        "switch": "renovatebot",
      },
      {
        "default": "- default options",
        "docs": "Options for renovatebot.",
        "featured": false,
        "fqn": "projen.RenovatebotOptions",
        "fullType": {
          "fqn": "projen.RenovatebotOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "renovatebotOptions",
        "optional": true,
        "parent": "ProjectOptions",
        "path": [
          "renovatebotOptions",
        ],
        "simpleType": "RenovatebotOptions",
        "switch": "renovatebot-options",
      },
      {
        "docs": "The repository is the location where the actual code for your package lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repository",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repository",
        ],
        "simpleType": "string",
        "switch": "repository",
      },
      {
        "docs": "If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "repositoryDirectory",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "repositoryDirectory",
        ],
        "simpleType": "string",
        "switch": "repository-directory",
      },
      {
        "default": "true",
        "docs": "Generate one-time sample in \`src/\` and \`test/\` if there are no files there.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "sampleCode",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "sampleCode",
        ],
        "simpleType": "boolean",
        "switch": "sample-code",
      },
      {
        "default": "- fetch all scoped packages from the public npm registry",
        "docs": "Options for privately hosted scoped packages.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.javascript.ScopedPackagesOptions",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "scopedPackagesOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scopedPackagesOptions",
        ],
        "simpleType": "unknown",
        "switch": "scoped-packages-options",
      },
      {
        "default": "{}",
        "deprecated": true,
        "docs": "npm scripts to include.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "scripts",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "scripts",
        ],
        "simpleType": "unknown",
        "switch": "scripts",
      },
      {
        "default": ""src"",
        "docs": "Typescript sources directory.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "srcdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "srcdir",
        ],
        "simpleType": "string",
        "switch": "srcdir",
      },
      {
        "docs": "Package's Stability.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "stability",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "stability",
        ],
        "simpleType": "string",
        "switch": "stability",
      },
      {
        "default": "false",
        "docs": "Auto-close of stale issues and pull request.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "stale",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "stale",
        ],
        "simpleType": "boolean",
        "switch": "stale",
      },
      {
        "default": "- see defaults in \`StaleOptions\`",
        "docs": "Auto-close stale issues and pull requests.",
        "featured": false,
        "fqn": "projen.github.StaleOptions",
        "fullType": {
          "fqn": "projen.github.StaleOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "staleOptions",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "staleOptions",
        ],
        "simpleType": "StaleOptions",
        "switch": "stale-options",
      },
      {
        "default": ""test"",
        "docs": "Jest tests directory. Tests files should be named \`xxx.test.ts\`.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "testdir",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "testdir",
        ],
        "simpleType": "string",
        "switch": "testdir",
      },
      {
        "default": "- default options",
        "docs": "Custom TSConfig.",
        "featured": false,
        "fqn": "projen.javascript.TypescriptConfigOptions",
        "fullType": {
          "fqn": "projen.javascript.TypescriptConfigOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsconfig",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfig",
        ],
        "simpleType": "TypescriptConfigOptions",
        "switch": "tsconfig",
      },
      {
        "default": "- use the production tsconfig options",
        "docs": "Custom tsconfig options for the development tsconfig.json file (used for testing).",
        "featured": false,
        "fqn": "projen.javascript.TypescriptConfigOptions",
        "fullType": {
          "fqn": "projen.javascript.TypescriptConfigOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsconfigDev",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfigDev",
        ],
        "simpleType": "TypescriptConfigOptions",
        "switch": "tsconfig-dev",
      },
      {
        "default": ""tsconfig.dev.json"",
        "docs": "The name of the development tsconfig.json file.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "tsconfigDevFile",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsconfigDevFile",
        ],
        "simpleType": "string",
        "switch": "tsconfig-dev-file",
      },
      {
        "docs": "Options for ts-jest.",
        "featured": false,
        "fqn": "projen.typescript.TsJestOptions",
        "fullType": {
          "fqn": "projen.typescript.TsJestOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "tsJestOptions",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "tsJestOptions",
        ],
        "simpleType": "TsJestOptions",
        "switch": "ts-jest-options",
      },
      {
        "default": ""latest"",
        "docs": "TypeScript version to use.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "typescriptVersion",
        "optional": true,
        "parent": "TypeScriptProjectOptions",
        "path": [
          "typescriptVersion",
        ],
        "simpleType": "string",
        "switch": "typescript-version",
      },
      {
        "default": "- standard configuration applicable for GitHub repositories",
        "docs": "Custom configuration used when creating changelog with commit-and-tag-version package.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "any",
            },
            "kind": "map",
          },
        },
        "jsonLike": true,
        "name": "versionrcOptions",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "versionrcOptions",
        ],
        "simpleType": "unknown",
        "switch": "versionrc-options",
      },
      {
        "default": "true",
        "docs": "Enable VSCode integration.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "vscode",
        "optional": true,
        "parent": "GitHubProjectOptions",
        "path": [
          "vscode",
        ],
        "simpleType": "boolean",
        "switch": "vscode",
      },
      {
        "default": ""yarn install --frozen-lockfile && yarn projen"",
        "docs": "Workflow steps to use in order to bootstrap this repo.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "fqn": "projen.github.workflows.JobStep",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowBootstrapSteps",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowBootstrapSteps",
        ],
        "simpleType": "unknown",
        "switch": "workflow-bootstrap-steps",
      },
      {
        "default": "- default image",
        "docs": "Container image to use for GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowContainerImage",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowContainerImage",
        ],
        "simpleType": "string",
        "switch": "workflow-container-image",
      },
      {
        "default": "- GitHub Actions",
        "docs": "The git identity to use in workflows.",
        "featured": false,
        "fqn": "projen.github.GitIdentity",
        "fullType": {
          "fqn": "projen.github.GitIdentity",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowGitIdentity",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowGitIdentity",
        ],
        "simpleType": "GitIdentity",
        "switch": "workflow-git-identity",
      },
      {
        "default": "- \`minNodeVersion\` if set, otherwise \`lts/*\`.",
        "docs": "The node version used in GitHub Actions workflows.",
        "featured": false,
        "fullType": {
          "primitive": "string",
        },
        "jsonLike": true,
        "name": "workflowNodeVersion",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowNodeVersion",
        ],
        "simpleType": "string",
        "switch": "workflow-node-version",
      },
      {
        "default": "false",
        "docs": "Enable Node.js package cache in GitHub workflows.",
        "featured": false,
        "fullType": {
          "primitive": "boolean",
        },
        "jsonLike": true,
        "name": "workflowPackageCache",
        "optional": true,
        "parent": "NodeProjectOptions",
        "path": [
          "workflowPackageCache",
        ],
        "simpleType": "boolean",
        "switch": "workflow-package-cache",
      },
      {
        "default": "["ubuntu-latest"]",
        "docs": "Github Runner selection labels.",
        "featured": false,
        "fullType": {
          "collection": {
            "elementtype": {
              "primitive": "string",
            },
            "kind": "array",
          },
        },
        "jsonLike": true,
        "name": "workflowRunsOn",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOn",
        ],
        "simpleType": "unknown",
        "switch": "workflow-runs-on",
      },
      {
        "docs": "Github Runner Group selection options.",
        "featured": false,
        "fqn": "projen.GroupRunnerOptions",
        "fullType": {
          "fqn": "projen.GroupRunnerOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "workflowRunsOnGroup",
        "optional": true,
        "parent": "ReleaseProjectOptions",
        "path": [
          "workflowRunsOnGroup",
        ],
        "simpleType": "GroupRunnerOptions",
        "switch": "workflow-runs-on-group",
      },
      {
        "default": "- Yarn Berry v4 with all default options",
        "docs": "Options for Yarn Berry.",
        "featured": false,
        "fqn": "projen.javascript.YarnBerryOptions",
        "fullType": {
          "fqn": "projen.javascript.YarnBerryOptions",
        },
        "jsonLike": true,
        "kind": "interface",
        "name": "yarnBerryOptions",
        "optional": true,
        "parent": "NodePackageOptions",
        "path": [
          "yarnBerryOptions",
        ],
        "simpleType": "YarnBerryOptions",
        "switch": "yarn-berry-options",
      },
    ],
    "pjid": "typescript-app",
    "typename": "typescript.TypeScriptAppProject",
  },
]
`;
