// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`deps upgrade commit can be signed 1`] = `
{
  "if": "\${{ needs.upgrade.outputs.patch_created }}",
  "name": "Create Pull Request",
  "needs": "upgrade",
  "permissions": {
    "contents": "read",
  },
  "runs-on": "ubuntu-latest",
  "steps": [
    {
      "name": "Checkout",
      "uses": "actions/checkout@v4",
      "with": {
        "ref": "main",
      },
    },
    {
      "name": "Download patch",
      "uses": "actions/download-artifact@v4",
      "with": {
        "name": "repo.patch",
        "path": "\${{ runner.temp }}",
      },
    },
    {
      "name": "Apply patch",
      "run": "[ -s \${{ runner.temp }}/repo.patch ] && git apply \${{ runner.temp }}/repo.patch || echo "Empty patch. Skipping."",
    },
    {
      "name": "Set git identity",
      "run": "git config user.name "github-actions"
git config user.email "github-actions@github.com"",
    },
    {
      "id": "create-pr",
      "name": "Create Pull Request",
      "uses": "peter-evans/create-pull-request@v6",
      "with": {
        "author": "github-actions <github-actions@github.com>",
        "body": "Upgrades project dependencies. See details in [workflow run].

[Workflow Run]: \${{ github.server_url }}/\${{ github.repository }}/actions/runs/\${{ github.run_id }}

------

*Automatically created by projen via the "upgrade-main" workflow*",
        "branch": "github-actions/upgrade-main",
        "commit-message": "chore(deps): upgrade dependencies

Upgrades project dependencies. See details in [workflow run].

[Workflow Run]: \${{ github.server_url }}/\${{ github.repository }}/actions/runs/\${{ github.run_id }}

------

*Automatically created by projen via the "upgrade-main" workflow*",
        "committer": "github-actions <github-actions@github.com>",
        "signoff": true,
        "title": "chore(deps): upgrade dependencies",
        "token": "\${{ secrets.PROJEN_GITHUB_TOKEN }}",
      },
    },
  ],
}
`;

exports[`disabling mutableBuild will skip pushing changes to PR branches 1`] = `
[
  {
    "name": "Checkout",
    "uses": "actions/checkout@v4",
    "with": {
      "ref": "\${{ github.event.pull_request.head.ref }}",
      "repository": "\${{ github.event.pull_request.head.repo.full_name }}",
    },
  },
  {
    "name": "Install dependencies",
    "run": "yarn install --check-files --frozen-lockfile",
  },
  {
    "name": "build",
    "run": "npx projen build",
  },
  {
    "id": "self_mutation",
    "name": "Find mutations",
    "run": "git add .
git diff --staged --patch --exit-code > repo.patch || echo "self_mutation_happened=true" >> $GITHUB_OUTPUT",
    "shell": "bash",
    "working-directory": "./",
  },
  {
    "if": "steps.self_mutation.outputs.self_mutation_happened",
    "name": "Upload patch",
    "uses": "actions/upload-artifact@v4.4.0",
    "with": {
      "name": "repo.patch",
      "overwrite": true,
      "path": "repo.patch",
    },
  },
  {
    "if": "steps.self_mutation.outputs.self_mutation_happened",
    "name": "Fail build on mutation",
    "run": "echo "::error::Files were changed during build (see build log). If this was triggered from a fork, you will need to update your branch."
cat repo.patch
exit 1",
  },
]
`;

exports[`enabling renovatebot does not overturn mergify: false 1`] = `
{
  "extends": [
    ":preserveSemverRanges",
    "config:recommended",
    "group:allNonMajor",
    "group:recommended",
    "group:monorepos",
  ],
  "ignoreDeps": [
    "commit-and-tag-version",
    "constructs",
    "jest-junit",
    "projen",
  ],
  "packageRules": [
    {
      "groupName": "devDependencies (non-major)",
      "matchDepTypes": [
        "devDependencies",
      ],
      "matchUpdateTypes": [
        "patch",
        "minor",
      ],
    },
  ],
  "schedule": [
    "at any time",
  ],
}
`;

exports[`mutableBuild will push changes to PR branches 1`] = `
[
  {
    "name": "Checkout",
    "uses": "actions/checkout@v4",
    "with": {
      "ref": "\${{ github.event.pull_request.head.ref }}",
      "repository": "\${{ github.event.pull_request.head.repo.full_name }}",
    },
  },
  {
    "name": "Install dependencies",
    "run": "yarn install --check-files",
  },
  {
    "name": "build",
    "run": "npx projen build",
  },
  {
    "id": "self_mutation",
    "name": "Find mutations",
    "run": "git add .
git diff --staged --patch --exit-code > repo.patch || echo "self_mutation_happened=true" >> $GITHUB_OUTPUT",
    "shell": "bash",
    "working-directory": "./",
  },
  {
    "if": "steps.self_mutation.outputs.self_mutation_happened",
    "name": "Upload patch",
    "uses": "actions/upload-artifact@v4.4.0",
    "with": {
      "name": "repo.patch",
      "overwrite": true,
      "path": "repo.patch",
    },
  },
  {
    "if": "steps.self_mutation.outputs.self_mutation_happened",
    "name": "Fail build on mutation",
    "run": "echo "::error::Files were changed during build (see build log). If this was triggered from a fork, you will need to update your branch."
cat repo.patch
exit 1",
  },
]
`;

exports[`mutableBuild will push changes to PR branches 2`] = `
[
  {
    "name": "Checkout",
    "uses": "actions/checkout@v4",
    "with": {
      "ref": "\${{ github.event.pull_request.head.ref }}",
      "repository": "\${{ github.event.pull_request.head.repo.full_name }}",
      "token": "\${{ secrets.PROJEN_GITHUB_TOKEN }}",
    },
  },
  {
    "name": "Download patch",
    "uses": "actions/download-artifact@v4",
    "with": {
      "name": "repo.patch",
      "path": "\${{ runner.temp }}",
    },
  },
  {
    "name": "Apply patch",
    "run": "[ -s \${{ runner.temp }}/repo.patch ] && git apply \${{ runner.temp }}/repo.patch || echo "Empty patch. Skipping."",
  },
  {
    "name": "Set git identity",
    "run": "git config user.name "github-actions"
git config user.email "github-actions@github.com"",
  },
  {
    "env": {
      "PULL_REQUEST_REF": "\${{ github.event.pull_request.head.ref }}",
    },
    "name": "Push changes",
    "run": "git add .
git commit -s -m "chore: self mutation"
git push origin HEAD:$PULL_REQUEST_REF",
  },
]
`;

exports[`node project can be ejected 1`] = `
{
  "devDependencies": {
    "commit-and-tag-version": "^12",
    "jest": "*",
    "jest-junit": "^16",
    "test": "*",
  },
  "jest": {
    "clearMocks": true,
    "collectCoverage": true,
    "coverageDirectory": "coverage",
    "coveragePathIgnorePatterns": [
      "/node_modules/",
    ],
    "coverageProvider": "v8",
    "coverageReporters": [
      "json",
      "lcov",
      "clover",
      "cobertura",
      "text",
    ],
    "reporters": [
      "default",
      [
        "jest-junit",
        {
          "outputDirectory": "test-reports",
        },
      ],
    ],
    "testMatch": [
      "**/__tests__/**/*.[jt]s?(x)",
      "**/*(*.)@(spec|test).[jt]s?(x)",
    ],
    "testPathIgnorePatterns": [
      "/node_modules/",
    ],
    "watchPathIgnorePatterns": [
      "/node_modules/",
    ],
  },
  "license": "Apache-2.0",
  "main": "lib/index.js",
  "name": "test-node-project",
  "publishConfig": {
    "access": "public",
  },
  "scripts": {
    "build": "scripts/run-task.cjs build",
    "bump": "scripts/run-task.cjs bump",
    "clobber": "scripts/run-task.cjs clobber",
    "compile": "scripts/run-task.cjs compile",
    "package": "scripts/run-task.cjs package",
    "post-compile": "scripts/run-task.cjs post-compile",
    "post-upgrade": "scripts/run-task.cjs post-upgrade",
    "pre-compile": "scripts/run-task.cjs pre-compile",
    "release": "scripts/run-task.cjs release",
    "test": "scripts/run-task.cjs test",
    "test:watch": "scripts/run-task.cjs test:watch",
    "unbump": "scripts/run-task.cjs unbump",
    "upgrade": "scripts/run-task.cjs upgrade",
  },
  "version": "0.0.0",
}
`;

exports[`npmignore should include npmIgnore patterns specified (via npmIgnoreOptions) 1`] = `
"/SECURITY.md
/.projen/
/test-reports/
junit.xml
/coverage/
permissions-backup.acl
/dist/changelog.md
/dist/version.txt
/.mergify.yml
/.projenrc.js
/.gitattributes
"
`;

exports[`npmignore should include sensible default ignore patterns 1`] = `
"/.projen/
/test-reports/
junit.xml
/coverage/
permissions-backup.acl
/dist/changelog.md
/dist/version.txt
/.mergify.yml
/.projenrc.js
/.gitattributes
"
`;

exports[`provided preBuildSteps for build workflow get combined with setup steps 1`] = `
[
  {
    "name": "Checkout",
    "uses": "actions/checkout@v4",
    "with": {
      "ref": "\${{ github.event.pull_request.head.ref }}",
      "repository": "\${{ github.event.pull_request.head.repo.full_name }}",
    },
  },
  {
    "name": "Install dependencies",
    "run": "yarn install --check-files",
  },
  {
    "name": "hello",
    "run": "echo hello",
  },
  {
    "name": "build",
    "run": "npx projen build",
  },
  {
    "id": "self_mutation",
    "name": "Find mutations",
    "run": "git add .
git diff --staged --patch --exit-code > repo.patch || echo "self_mutation_happened=true" >> $GITHUB_OUTPUT",
    "shell": "bash",
    "working-directory": "./",
  },
  {
    "if": "steps.self_mutation.outputs.self_mutation_happened",
    "name": "Upload patch",
    "uses": "actions/upload-artifact@v4.4.0",
    "with": {
      "name": "repo.patch",
      "overwrite": true,
      "path": "repo.patch",
    },
  },
  {
    "if": "steps.self_mutation.outputs.self_mutation_happened",
    "name": "Fail build on mutation",
    "run": "echo "::error::Files were changed during build (see build log). If this was triggered from a fork, you will need to update your branch."
cat repo.patch
exit 1",
  },
]
`;

exports[`renovatebot ignored dependency overrides 1`] = `
{
  "extends": [
    ":preserveSemverRanges",
    "config:recommended",
    "group:allNonMajor",
    "group:recommended",
    "group:monorepos",
  ],
  "ignoreDeps": [
    "commit-and-tag-version",
    "constructs",
    "jest-junit",
    "axios",
    "some-overriden-package",
    "projen",
  ],
  "packageRules": [
    {
      "groupName": "devDependencies (non-major)",
      "matchDepTypes": [
        "devDependencies",
      ],
      "matchUpdateTypes": [
        "patch",
        "minor",
      ],
    },
  ],
  "schedule": [
    "at any time",
  ],
}
`;
