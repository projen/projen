# ~~ Generated by projen. To modify, edit .projenrc.ts and run "node ./projen.js".

name: build
on:
  pull_request: {}
  workflow_dispatch: {}
  merge_group: {}
jobs:
  self-mutation:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: always() && needs.build.outputs.self_mutation_happened && !(github.event.pull_request.head.repo.full_name != github.repository)
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PROJEN_GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Download patch
        uses: actions/download-artifact@v4
        with:
          name: repo.patch
          path: ${{ runner.temp }}
      - name: Apply patch
        run: '[ -s ${{ runner.temp }}/repo.patch ] && git apply ${{ runner.temp }}/repo.patch || echo "Empty patch. Skipping."'
      - name: Set git identity
        run: |-
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: Push changes
        env:
          PULL_REQUEST_REF: ${{ github.event.pull_request.head.ref }}
        run: |-
          git add .
          git commit -s -m "chore: self mutation"
          git push origin HEAD:$PULL_REQUEST_REF
  package-js:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: ${{ !needs.build.outputs.self_mutation_happened }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20.9.0
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: dist
      - name: Restore build artifact permissions
        run: cd dist && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          path: .repo
      - name: Install Dependencies
        run: cd .repo && yarn install --check-files --frozen-lockfile
      - name: Extract build artifact
        run: tar --strip-components=1 -xzvf dist/js/*.tgz -C .repo
      - name: Move build artifact out of the way
        run: mv dist dist.old
      - name: Create js artifact
        run: cd .repo && node ./projen.js package:js
      - name: Collect js artifact
        run: mv .repo/dist dist
  package-java:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: ${{ !needs.build.outputs.self_mutation_happened }}
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: "11"
      - uses: actions/setup-node@v4
        with:
          node-version: 20.9.0
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: dist
      - name: Restore build artifact permissions
        run: cd dist && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          path: .repo
      - name: Install Dependencies
        run: cd .repo && yarn install --check-files --frozen-lockfile
      - name: Extract build artifact
        run: tar --strip-components=1 -xzvf dist/js/*.tgz -C .repo
      - name: Move build artifact out of the way
        run: mv dist dist.old
      - name: Create java artifact
        run: cd .repo && node ./projen.js package:java
      - name: Collect java artifact
        run: mv .repo/dist dist
  package-python:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: ${{ !needs.build.outputs.self_mutation_happened }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20.9.0
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: dist
      - name: Restore build artifact permissions
        run: cd dist && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          path: .repo
      - name: Install Dependencies
        run: cd .repo && yarn install --check-files --frozen-lockfile
      - name: Extract build artifact
        run: tar --strip-components=1 -xzvf dist/js/*.tgz -C .repo
      - name: Move build artifact out of the way
        run: mv dist dist.old
      - name: Create python artifact
        run: cd .repo && node ./projen.js package:python
      - name: Collect python artifact
        run: mv .repo/dist dist
  package-go:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: ${{ !needs.build.outputs.self_mutation_happened }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20.9.0
      - uses: actions/setup-go@v5
        with:
          go-version: ^1.18.0
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: dist
      - name: Restore build artifact permissions
        run: cd dist && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          path: .repo
      - name: Install Dependencies
        run: cd .repo && yarn install --check-files --frozen-lockfile
      - name: Extract build artifact
        run: tar --strip-components=1 -xzvf dist/js/*.tgz -C .repo
      - name: Move build artifact out of the way
        run: mv dist dist.old
      - name: Create go artifact
        run: cd .repo && node ./projen.js package:go
      - name: Collect go artifact
        run: mv .repo/dist dist
  post-build-integ:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: ${{ !needs.build.outputs.self_mutation_happened }}
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - uses: actions/setup-go@v5
        with:
          go-version: 1.16.x
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: dist
      - name: Restore build artifact permissions
        run: cd dist && setfacl --restore=permissions-backup.acl
        continue-on-error: true
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - run: node ./projen.js integ
  build_matrix:
    runs-on: ${{ matrix.runner.os }}
    permissions:
      contents: write
      id-token: write
    outputs:
      self_mutation_happened: ${{ steps.self_mutation.outputs.self_mutation_happened }}
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.9.0
      - if: runner.os == 'Windows'
        name: Windows performance improvements
        run: |-
          yarn config set cache-folder D:\a\_temp\yarn
          echo "TEMP=D:\a\_temp" >> $env:GITHUB_ENV
      - name: Install dependencies
        run: yarn install --check-files
      - name: build
        run: node ./projen.js build
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          directory: coverage
          use_oidc: true
        if: matrix.runner.primary_build
      - name: Find mutations
        id: self_mutation
        run: |-
          git add .
          git diff --staged --patch --exit-code > repo.patch || echo "self_mutation_happened=true" >> $GITHUB_OUTPUT
        shell: bash
        working-directory: ./
      - name: Upload patch
        if: steps.self_mutation.outputs.self_mutation_happened && matrix.runner.primary_build
        uses: actions/upload-artifact@v4.4.0
        with:
          name: repo.patch
          path: repo.patch
          overwrite: true
      - name: Fail build on mutation
        if: steps.self_mutation.outputs.self_mutation_happened
        run: |-
          echo "::error::Files were changed during build (see build log). If this was triggered from a fork, you will need to update your branch."
          cat repo.patch
          exit 1
      - name: Backup artifact permissions
        run: cd dist && getfacl -R . > permissions-backup.acl
        continue-on-error: true
        if: matrix.runner.primary_build
      - name: Upload artifact
        uses: actions/upload-artifact@v4.4.0
        with:
          name: build-artifact
          path: dist
          overwrite: true
        if: matrix.runner.primary_build
    strategy:
      matrix:
        runner:
          - os: ubuntu-latest
            primary_build: true
            allow_failure: false
          - os: windows-latest
            primary_build: false
            allow_failure: false
    continue-on-error: ${{ matrix.runner.allow_failure }}
  build:
    runs-on: ubuntu-latest
    needs:
      - build_matrix
    if: always()
    outputs:
      self_mutation_happened: ${{ needs.build_matrix.outputs.self_mutation_happened }}
    steps:
      - name: Build result
        run: echo ${{ needs.build_matrix.result }}
      - if: ${{ needs.build_matrix.result != 'success' }}
        name: Set status based on matrix build
        run: exit 1
